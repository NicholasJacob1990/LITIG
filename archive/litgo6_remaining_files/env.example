# ===================================================================
# LITGO5 - Configuração de Variáveis de Ambiente
# ===================================================================
# Copie este arquivo para .env e preencha com seus valores reais
# cp env.example .env

# ===================================================================
# SUPABASE - Banco de Dados PostgreSQL
# ===================================================================
# URL para a biblioteca do Supabase (DEVE ter prefixo EXPO_PUBLIC_ para frontend)
EXPO_PUBLIC_SUPABASE_URL=http://localhost:54321

# URL de conexão direta com o banco de dados (para backend)
DATABASE_URL=postgresql://postgres:postgres@localhost:54322/postgres

# Chave de serviço (service_role) - NUNCA compartilhe esta chave
# Encontrada em: Settings > API > service_role secret
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU

# Chave anônima pública (pode ser exposta no frontend)
# Encontrada em: Settings > API > anon public
EXPO_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeo-s3C13nNhVOQnJbLUgJdHNTMJJBQYBzk

# ===================================================================
# GOOGLE CALENDAR - OAuth 2.0 Credenciais REAIS
# ===================================================================
# Configure estas credenciais no Google Cloud Console:
# https://console.cloud.google.com/apis/credentials

# iOS Client ID (para aplicativo iOS)
# Tipo: iOS application
# Bundle ID: com.anonymous.boltexponativewind
EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID=560320433156-xxxxxxxxxxxxxxxxx.apps.googleusercontent.com

# Android Client ID (para aplicativo Android)
# Tipo: Android application
# Package name: com.anonymous.boltexponativewind
# SHA-1: Use o comando: npx expo-cli fetch:android:hashes
EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID=560320433156-xxxxxxxxxxxxxxxxx.apps.googleusercontent.com

# Web Client ID (para troca de tokens)
# Tipo: Web application
# Authorized redirect URIs: https://auth.expo.io/@seu_username/litgo5
EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID=560320433156-xxxxxxxxxxxxxxxxx.apps.googleusercontent.com

# Web Client Secret (NUNCA exponha no frontend)
# Obtido junto com o Web Client ID
GOOGLE_WEB_CLIENT_SECRET=GOCSPX-xxxxxxxxxxxxxxxxxxxxxxxx

# ===================================================================
# INTELIGÊNCIA ARTIFICIAL - APIs de LLM
# ===================================================================
# Anthropic Claude - Para triagem e explicações
# Obtenha em: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-...

# OpenAI - Para embeddings e processamento
# Obtenha em: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...

# ===================================================================
# REDIS - Cache e Filas de Processamento
# ===================================================================
# URL do Redis para Celery e cache
# Local: redis://localhost:6379/0
# Produção: redis://usuario:senha@host:port/db
REDIS_URL=redis://:litgo5_redis_password_2024@redis:6379/0

# Configurações específicas do Redis para triagem inteligente
REDIS_MAX_CONNECTIONS=20
REDIS_RETRY_ON_TIMEOUT=True
REDIS_DECODE_RESPONSES=True
REDIS_PASSWORD=litgo5_redis_password_2024

# TTL padrão para conversas (em segundos) - 24 horas
REDIS_CONVERSATION_TTL=86400

# TTL para orquestrações (em segundos) - 24 horas  
REDIS_ORCHESTRATION_TTL=86400

# ===================================================================
# API BACKEND - Configurações do Servidor
# ===================================================================
# URL da API para o frontend consumir
# Desenvolvimento: http://127.0.0.1:8000/api
# Produção: https://api.seudominio.com/api
EXPO_PUBLIC_API_URL=http://127.0.0.1:8000/api

# URL base da API (para backend)
API_BASE_URL=http://127.0.0.1:8000

# ===================================================================
# AMBIENTE E CONFIGURAÇÕES GERAIS
# ===================================================================
# Ambiente: development, staging, production
ENVIRONMENT=development

# Modo de teste (desabilita certas funcionalidades)
TESTING=false

# === STRIPE ===
EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_YOUR_KEY_HERE

# === DEVELOPMENT ===
# Set to true to use mock data instead of real API calls
USE_MOCK_API=false

# Nível de log: error, warn, info, debug
LOG_LEVEL=info

# Habilitar logs detalhados (true/false)
DEBUG_MODE=false

# ===================================================================
# CONFIGURAÇÕES DE CORS E RATE LIMITING
# ===================================================================
# Origens permitidas para CORS (separadas por vírgula)
CORS_ORIGINS=http://localhost:8081,http://localhost:19006,https://auth.expo.io

# Limite de requisições por minuto por IP
RATE_LIMIT_PER_MINUTE=100

# Limite de requisições por hora por usuário
RATE_LIMIT_PER_HOUR=1000

# ===================================================================
# JWT E SEGURANÇA
# ===================================================================
# Chave secreta para JWT (gere uma chave segura)
JWT_SECRET=sua_chave_secreta_muito_segura_aqui

# ===================================================================
# API JUSBRASIL - Dados Jurídicos (Opcional)
# ===================================================================
# URL da API Jusbrasil
JUS_API_URL=https://api.jusbrasil.com.br/v2

# Token de acesso da API Jusbrasil
JUS_API_TOKEN=seu_token_jusbrasil_aqui

# ===================================================================
# NOTIFICAÇÕES PUSH - OneSignal (Opcional)
# ===================================================================
# App ID do OneSignal
ONESIGNAL_APP_ID=seu_app_id_onesignal

# API Key do OneSignal
ONESIGNAL_API_KEY=sua_api_key_onesignal

# ===================================================================
# DOCUSIGN - Assinatura Digital (Opcional)
# ===================================================================
# Habilitar integração DocuSign
USE_DOCUSIGN=false

# URL base do DocuSign (sandbox ou production)
DOCUSIGN_BASE_URL=https://demo.docusign.net/restapi

# Chave de integração do DocuSign
DOCUSIGN_API_KEY=sua_chave_docusign

# ID da conta DocuSign
DOCUSIGN_ACCOUNT_ID=seu_account_id_docusign

# ID do usuário DocuSign
DOCUSIGN_USER_ID=seu_user_id_docusign

# Chave privada RSA (formato PEM)
DOCUSIGN_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----"

# ===================================================================
# CONFIGURAÇÕES DE UPLOAD E STORAGE
# ===================================================================
# Tamanho máximo de arquivo em MB
MAX_FILE_SIZE_MB=50

# Tipos de arquivo permitidos (separados por vírgula)
ALLOWED_FILE_TYPES=pdf,doc,docx,jpg,jpeg,png,txt

# ===================================================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# ===================================================================
# 
# 1. SUPABASE:
#    - Crie um projeto em https://supabase.com
#    - Execute as migrações: npx supabase migration up
#    - Configure RLS e políticas de segurança
#
# 2. GOOGLE CALENDAR:
#    - Acesse https://console.cloud.google.com/
#    - Crie projeto ou use existente
#    - Ative Google Calendar API
#    - Configure OAuth consent screen
#    - Crie credenciais OAuth 2.0 (iOS, Android, Web)
#    - Configure redirect URIs corretos
#
# 3. ANTHROPIC:
#    - Registre-se em https://console.anthropic.com/
#    - Obtenha API key
#    - Configure limites de uso
#
# 4. OPENAI:
#    - Registre-se em https://platform.openai.com/
#    - Obtenha API key
#    - Configure billing se necessário
#
# 5. REDIS:
#    - Instale Redis localmente ou use serviço na nuvem
#    - Configure URL de conexão
#
# 6. TESTE:
#    - Execute: npm run dev (frontend)
#    - Execute: uvicorn backend.main:app --reload (backend)
#    - Teste integração Google Calendar

# ===================================================================
# EXEMPLO DE VALORES PARA DESENVOLVIMENTO LOCAL
# ===================================================================
# SUPABASE_URL=https://abcdefghijklmnop.supabase.co
# SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFiY2RlZmdoaWprbG1ub3AiLCJyb2xlIjoic2VydmljZV9yb2xlIiwiaWF0IjoxNjQwOTk1MjAwLCJleHAiOjE5NTY1NzEyMDB9.example
# EXPO_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFiY2RlZmdoaWprbG1ub3AiLCJyb2xlIjoiYW5vbiIsImlhdCI6MTY0MDk5NTIwMCwiZXhwIjoxOTU2NTcxMjAwfQ.example
# EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID=560320433156-abc123def456ghi789.apps.googleusercontent.com
# EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID=560320433156-xyz789uvw012rst345.apps.googleusercontent.com
# GOOGLE_WEB_CLIENT_SECRET=GOCSPX-abcdef123456789012345678
# ANTHROPIC_API_KEY=sk-ant-api03-1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef12
# OPENAI_API_KEY=sk-1234567890abcdef1234567890abcdef1234567890abcdef12
# REDIS_URL=redis://localhost:6379/0
# EXPO_PUBLIC_API_URL=http://127.0.0.1:8000/api 