import React from 'react';
declare type GeneralState = 'idle' | 'pending' | 'not-supported' | 'granted' | 'blocked' | 'in-use' | 'not-found' | 'constraints-invalid' | 'constraints-none-specified' | 'undefined-mediadevices' | 'unknown';
declare type DeviceState = 'granted' | 'in-use';
export interface StatefulDevice {
    device: MediaDeviceInfo;
    selected: boolean;
    state: DeviceState;
}
export declare const generalCameraState: import("jotai/esm/").PrimitiveAtom<GeneralState> & {
    init: GeneralState;
};
export declare const generalMicrophoneState: import("jotai/esm/").PrimitiveAtom<GeneralState> & {
    init: GeneralState;
};
export declare const cameraDevicesState: import("jotai/esm/").PrimitiveAtom<StatefulDevice[]> & {
    init: StatefulDevice[];
};
export declare const microphoneDevicesState: import("jotai/esm/").PrimitiveAtom<StatefulDevice[]> & {
    init: StatefulDevice[];
};
export declare const speakerDevicesState: import("jotai/esm/").PrimitiveAtom<StatefulDevice[]> & {
    init: StatefulDevice[];
};
export declare const lastCameraErrorState: import("jotai/esm/").PrimitiveAtom<import("@daily-co/daily-js").DailyCamPermissionsError | import("@daily-co/daily-js").DailyCamDeviceNotFoundError | import("@daily-co/daily-js").DailyCamConstraintsError | import("@daily-co/daily-js").DailyCamInUseError | import("@daily-co/daily-js").DailyCamTypeError | import("@daily-co/daily-js").DailyCamUnknownError | null> & {
    init: import("@daily-co/daily-js").DailyCamPermissionsError | import("@daily-co/daily-js").DailyCamDeviceNotFoundError | import("@daily-co/daily-js").DailyCamConstraintsError | import("@daily-co/daily-js").DailyCamInUseError | import("@daily-co/daily-js").DailyCamTypeError | import("@daily-co/daily-js").DailyCamUnknownError | null;
};
export declare const DailyDevices: React.FC<React.PropsWithChildren<unknown>>;
export {};
