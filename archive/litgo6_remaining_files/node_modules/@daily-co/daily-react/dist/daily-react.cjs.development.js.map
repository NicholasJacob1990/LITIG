{"version":3,"file":"daily-react.cjs.development.js","sources":["../src/DailyContext.tsx","../src/hooks/useDaily.ts","../src/DailyEventContext.tsx","../src/hooks/useDailyEvent.ts","../src/lib/customDeepEqual.ts","../src/lib/jotai-custom.ts","../src/hooks/useParticipantProperty.ts","../src/hooks/useThrottledDailyEvent.ts","../src/utils/getParticipantPaths.ts","../src/utils/resolveParticipantPaths.ts","../src/DailyParticipants.tsx","../src/hooks/useLocalSessionId.ts","../src/hooks/useActiveSpeakerId.ts","../src/utils/isTrackOff.ts","../src/hooks/useParticipantIds.ts","../src/hooks/useScreenShare.ts","../src/hooks/useMediaTrack.ts","../src/hooks/useMergedRef.ts","../src/components/DailyAudioTrack.tsx","../src/components/DailyAudio.tsx","../src/components/DailyVideo.tsx","../src/DailyDevicesContext.tsx","../src/DailyDevices.tsx","../src/DailyLiveStreaming.tsx","../src/DailyMeeting.tsx","../src/DailyNetwork.tsx","../src/DailyRecordings.tsx","../src/hooks/useMeetingState.ts","../src/DailyRoom.tsx","../src/DailyTranscriptions.tsx","../src/hooks/useCallInstance.ts","../src/hooks/useCallObject.ts","../src/DailyProvider.tsx","../src/hooks/useParticipant.ts","../src/hooks/useActiveParticipant.ts","../src/hooks/useAppMessage.ts","../src/lib/inlineAudioWorklet.ts","../src/hooks/useAudioLevel.ts","../src/hooks/useAudioLevelObserver.ts","../src/hooks/useAudioTrack.ts","../src/hooks/useCallFrame.ts","../src/hooks/useCPULoad.ts","../src/hooks/useDailyError.ts","../src/hooks/useDevices.ts","../src/hooks/useInputSettings.ts","../src/hooks/useLiveStreaming.ts","../src/hooks/useLocalParticipant.ts","../src/hooks/useMeetingSessionState.ts","../src/hooks/useNetwork.ts","../src/hooks/useParticipantCounts.ts","../src/hooks/usePermissions.ts","../src/hooks/useReceiveSettings.ts","../src/hooks/useRecording.ts","../src/hooks/useRoom.ts","../src/hooks/useRoomExp.ts","../src/hooks/useScreenAudioTrack.ts","../src/hooks/useScreenVideoTrack.ts","../src/hooks/useSendSettings.ts","../src/hooks/useTranscription.ts","../src/hooks/useVideoTrack.ts","../src/hooks/useWaitingParticipants.ts"],"sourcesContent":["import { DailyCall } from '@daily-co/daily-js';\nimport { createContext } from 'react';\n\nexport const DailyContext = createContext<DailyCall | null>(null);\n","import { useContext, useDebugValue } from 'react';\n\nimport { DailyContext } from '../DailyContext';\n\n/**\n * Returns callObject instance passed to or created by closest <DailyProvider>.\n */\nexport const useDaily = () => {\n  const daily = useContext(DailyContext);\n  useDebugValue(daily);\n  return daily;\n};\n","import { DailyEvent } from '@daily-co/daily-js';\nimport { createContext } from 'react';\n\ninterface EventContextValue {\n  on(ev: DailyEvent, callback: Function, key: number): void;\n  off(ev: DailyEvent, key: number): void;\n}\n\nexport const DailyEventContext = createContext<EventContextValue>({\n  on: () => {},\n  off: () => {},\n});\n","import { DailyEvent, DailyEventObject } from '@daily-co/daily-js';\nimport {\n  useContext,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { DailyEventContext } from '../DailyEventContext';\n\ntype EventCallback<T extends DailyEvent> = (event: DailyEventObject<T>) => void;\n\nlet priorityCounter = -1;\nexport const getPriorityUnique = () => priorityCounter--;\nlet uniqueCounter = 1;\nexport const getUnique = () => uniqueCounter++;\n\n/**\n * Sets up a daily event listener using [on](https://docs.daily.co/reference/daily-js/instance-methods/on) method.\n * When this hook is unmounted the event listener is unregistered using [off](https://docs.daily.co/reference/daily-js/instance-methods/off).\n *\n * Warning: callback has to be a memoized reference (e.g. via [useCallback](https://reactjs.org/docs/hooks-reference.html#usecallback)).\n * Otherwise a console error might be thrown indicating a re-render loop issue.\n *\n * @param ev The DailyEvent to register.\n * @param callback A memoized callback reference to run when the event is emitted.\n */\nexport const useDailyEvent = <T extends DailyEvent>(\n  ev: T,\n  callback: EventCallback<T>,\n  INTERNAL_priority = false\n) => {\n  const { off, on } = useContext(DailyEventContext);\n  const [isBlocked, setIsBlocked] = useState(false);\n  const reassignCount = useRef<number>(0);\n\n  const eventId = useMemo(\n    () => (INTERNAL_priority ? getPriorityUnique() : getUnique()),\n    [INTERNAL_priority]\n  );\n\n  useEffect(() => {\n    if (!ev || isBlocked) return;\n    /**\n     * Check if callback has been reassigned often enough without hitting the 50ms timeout.\n     */\n    if (reassignCount.current > 100000) {\n      console.error(\n        `useDailyEvent called with potentially non-memoized event callback or due to too many re-renders.\n        Memoize using useCallback to avoid re-render loop or reduce the amount of state transitions the callback depends on.\n        Passed callback for '${ev}' event is NOT registered.`,\n        callback\n      );\n      setIsBlocked(true);\n      return;\n    }\n    reassignCount.current++;\n    const timeout = setTimeout(() => {\n      reassignCount.current = 0;\n    }, 50);\n    on(ev, callback, eventId);\n    return () => {\n      clearTimeout(timeout);\n      off(ev, eventId);\n    };\n  }, [callback, ev, eventId, isBlocked, off, on]);\n\n  useDebugValue({\n    event: ev,\n    eventId,\n    isBlocked,\n    callback,\n  });\n};\n","/**\n * Compares two variables for deep equality.\n * Gracefully handles equality checks on MediaStreamTracks by comparing their ids.\n */\nexport function customDeepEqual(a: any, b: any): boolean {\n  if (a === b) return true;\n\n  // Handle arrays separately\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; i++) {\n      if (!customDeepEqual(a[i], b[i])) return false;\n    }\n    return true;\n  }\n\n  // Handle specific cases like MediaStream, MediaStreamTrack, Date, etc.\n  if (MediaStream) {\n    if (a instanceof MediaStream && b instanceof MediaStream) {\n      return (\n        a.id === b.id &&\n        a.active === b.active &&\n        a.getTracks().length === b.getTracks().length &&\n        a\n          .getTracks()\n          .every((track, idx) => customDeepEqual(track, b.getTracks()[idx]))\n      );\n    }\n  }\n\n  // Handle special case for MediaStreamTrack\n  if (MediaStreamTrack) {\n    if (a instanceof MediaStreamTrack && b instanceof MediaStreamTrack) {\n      return (\n        a.id === b.id && a.kind === b.kind && a.readyState === b.readyState\n      );\n    }\n  }\n\n  // Handle special case for Date\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  // Handle special case for RegExp\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source && a.flags === b.flags;\n  }\n\n  // Handle Set comparisons\n  if (a instanceof Set && b instanceof Set) {\n    if (a.size !== b.size) return false;\n    const arrA = Array.from(a).sort();\n    const arrB = Array.from(b).sort();\n    return arrA.every((val, idx) => customDeepEqual(val, arrB[idx]));\n  }\n\n  // Handle Map comparisons\n  if (a instanceof Map && b instanceof Map) {\n    if (a.size !== b.size) return false;\n    for (const [key, value] of a.entries()) {\n      if (!b.has(key) || !customDeepEqual(value, b.get(key))) return false;\n    }\n    return true;\n  }\n\n  // Primitive types and null checks\n  if (\n    typeof a !== 'object' ||\n    a === null ||\n    typeof b !== 'object' ||\n    b === null\n  ) {\n    return false;\n  }\n\n  // Generic object handling\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n\n  for (let i = 0; i < keysA.length; i++) {\n    const key = keysA[i];\n    if (\n      !Object.prototype.hasOwnProperty.call(b, key) ||\n      !customDeepEqual(a[key], b[key])\n    ) {\n      return false;\n    }\n  }\n\n  // All keys and values match -> the objects are deeply equal\n  return true;\n}\n\n/**\n * Comparison function optimized for comparing arrays.\n */\nexport function arraysDeepEqual(a: any[], b: any[]) {\n  // Check for reference equality\n  if (a === b) return true;\n\n  // Check if both arrays are of the same length\n  if (a.length !== b.length) return false;\n\n  // Compare each element in the array\n  for (let i = 0; i < a.length; i++) {\n    const valueA = a[i];\n    const valueB = b[i];\n\n    const isComplexTypeA = valueA !== null && typeof valueA === 'object';\n    const isComplexTypeB = valueB !== null && typeof valueB === 'object';\n\n    // Use customDeepEqual only if either value is a complex type\n    if (isComplexTypeA || isComplexTypeB) {\n      if (!customDeepEqual(valueA, valueB)) return false;\n    } else if (valueA !== valueB) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { atom, Getter, WritableAtom } from 'jotai';\n\nexport function jotaiDebugLabel(label: string) {\n  return 'daily-react-' + label;\n}\n\ninterface EqualAtomOptions<T> {\n  key?: string;\n  get: () => T;\n  equals: (a: T, b: T) => boolean;\n}\n\n/**\n * Same API as Recoil's selector but with an additional `equals` key.\n * Allows to run custom equality checks before returning a new calculated value.\n * Use this when returning non-primitive types from state.\n */\nexport function equalAtom<T>(options: EqualAtomOptions<T>) {\n  const baseAtom = atom(options.get);\n  const derivedAtom = atom((get) => {\n    const latest = get(baseAtom);\n    if (prior !== undefined && options.equals(latest, prior)) {\n      return prior;\n    }\n    prior = latest;\n    return latest;\n  });\n\n  let prior: T | undefined;\n  return derivedAtom;\n}\n\n/**\n * A custom implementation of `equalAtomFamily` for Jotai,\n * providing similar functionality to Recoil's `selectorFamily`\n * with an additional `equals` key for custom equality checks.\n */\ninterface EqualAtomFamilyOptions<T, P> {\n  get: (param: P) => (get: Getter) => T;\n  equals: (a: T, b: T) => boolean;\n}\n\nexport function equalAtomFamily<T extends unknown[], P>(\n  options: EqualAtomFamilyOptions<T, P>\n): (param: P) => WritableAtom<T, T, void> {\n  const atomCache = new Map<P, WritableAtom<T, T, void>>();\n  const priorValues: Map<P, T | undefined> = new Map();\n\n  return (param: P) => {\n    if (!atomCache.has(param)) {\n      const baseAtom = atom((get) => {\n        const derivedValue = options.get(param)(get);\n        const prior = priorValues.get(param);\n        if (prior != null && options.equals(derivedValue, prior)) {\n          return prior;\n        }\n        priorValues.set(param, derivedValue);\n        return derivedValue;\n      });\n\n      atomCache.set(param, baseAtom as WritableAtom<T, T, void>);\n    }\n\n    return atomCache.get(param)!;\n  };\n}\n","import { atom, useAtomValue } from 'jotai';\nimport { atomFamily } from 'jotai/utils';\nimport { useDebugValue } from 'react';\n\nimport { ExtendedDailyParticipant } from '../DailyParticipants';\nimport { arraysDeepEqual } from '../lib/customDeepEqual';\nimport { equalAtomFamily, jotaiDebugLabel } from '../lib/jotai-custom';\nimport type { NumericKeys } from '../types/NumericKeys';\nimport type { Paths } from '../types/paths';\nimport type { PathValue } from '../types/pathValue';\n\nconst DELIM = '::';\nconst PATHS_DELIM = ';';\nexport const getPropertyParam = (\n  id: string,\n  property: Paths<ExtendedDailyParticipant>\n) => id + DELIM + property;\nconst getPropertiesParam = (\n  id: string,\n  properties: Paths<ExtendedDailyParticipant>[]\n) => id + DELIM + properties.join(PATHS_DELIM);\n\nexport const getParticipantPropertyAtom = (\n  id: string,\n  property: Paths<ExtendedDailyParticipant>\n) => participantPropertyState(getPropertyParam(id, property));\n\n/**\n * Stores all property paths for a given participant.\n */\nexport const participantPropertyPathsState = atomFamily((id: string) => {\n  const participantPropertyPathsAtom = atom<Paths<ExtendedDailyParticipant>[]>(\n    []\n  );\n  participantPropertyPathsAtom.debugLabel = jotaiDebugLabel(\n    `participant-property-paths-${id}`\n  );\n  return participantPropertyPathsAtom;\n});\n\n/**\n * Stores resolved values for each participant and property path.\n */\nexport const participantPropertyState = atomFamily((param: string) => {\n  const participantPropertyAtom = atom<any>(null);\n  participantPropertyAtom.debugLabel = jotaiDebugLabel(\n    `participant-property-${param}`\n  );\n  return participantPropertyAtom;\n});\n\n/**\n * Stores resolved values for each participant and property path.\n */\nconst participantPropertiesState = equalAtomFamily<any[], string>({\n  equals: arraysDeepEqual,\n  get: (param: string) => (get) => {\n    const [id, paths] = param.split(DELIM);\n    const properties = paths.split(PATHS_DELIM);\n    return properties.map((path) =>\n      get(\n        getParticipantPropertyAtom(id, path as Paths<ExtendedDailyParticipant>)\n      )\n    );\n  },\n});\n\ntype UseParticipantPropertyReturnType<\n  T extends ExtendedDailyParticipant,\n  P extends Paths<T> | Paths<T>[]\n> = P extends Paths<T>[]\n  ? { [K in keyof P]: K extends NumericKeys ? PathValue<T, P[K]> : unknown }\n  : P extends Paths<T>\n  ? PathValue<T, P>\n  : never;\n\n/**\n * Returns a participant's property that you subscribe to.\n * @param participantId The participant's session_id.\n * @param propertyPaths the array of participant property that you want to subscribe to.\n */\nexport const useParticipantProperty = <\n  T extends ExtendedDailyParticipant = ExtendedDailyParticipant,\n  P extends Paths<T> | [Paths<T>, ...Paths<T>[]] =\n    | Paths<T>\n    | [Paths<T>, ...Paths<T>[]]\n>(\n  participantId: string,\n  propertyPaths: P\n): UseParticipantPropertyReturnType<T, P> => {\n  const properties = useAtomValue(\n    Array.isArray(propertyPaths)\n      ? participantPropertiesState(\n          getPropertiesParam(\n            participantId,\n            propertyPaths as Paths<ExtendedDailyParticipant>[]\n          )\n        )\n      : participantPropertyState(\n          getPropertyParam(\n            participantId,\n            propertyPaths as Paths<ExtendedDailyParticipant>\n          )\n        )\n  );\n\n  useDebugValue(\n    Array.isArray(propertyPaths)\n      ? propertyPaths.reduce(\n          (o: Record<any, any>, path: Paths<T>, i: number) => {\n            o[path] = properties[i];\n            return o;\n          },\n          {}\n        )\n      : {\n          [propertyPaths as any]: properties,\n        }\n  );\n\n  return properties;\n};\n","import { DailyEvent, DailyEventObject } from '@daily-co/daily-js';\nimport throttle from 'lodash.throttle';\nimport {\n  useCallback,\n  useContext,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react';\n\nimport { DailyEventContext } from '../DailyEventContext';\nimport { getPriorityUnique, getUnique, useDailyEvent } from './useDailyEvent';\n\ntype EnsureArray<T> = T extends DailyEvent ? [T] : T;\n\ntype EventObjectsFor<T> = EnsureArray<T> extends (infer U)[]\n  ? U extends DailyEvent\n    ? DailyEventObject<U>\n    : never\n  : never;\n\ntype EventCallback<T extends DailyEvent | DailyEvent[]> = (\n  events: EventObjectsFor<T>[]\n) => void;\n\n/**\n * Sets up a throttled daily event listener using [on](https://docs.daily.co/reference/daily-js/instance-methods/on) method.\n * When this hook is unmounted the event listener is unregistered using [off](https://docs.daily.co/reference/daily-js/instance-methods/off).\n *\n * In comparison to useDailyEvent the callback passed here will be called with an array of event objects.\n *\n * You can pass an array of DailyEvents to register multiple daily events with a single callback handler.\n * The events returned in the callback parameter are guaranteed to be in the same order as they were emitted.\n *\n * @param ev The DailyEvent to register or an array of DailyEvent to register.\n * @param callback A memoized callback reference to run when throttled events are emitted.\n * @param throttleTimeout The minimum waiting time until the callback is called again. Default: 500\n */\nexport const useThrottledDailyEvent = <T extends DailyEvent>(\n  ev: T | T[],\n  callback: EventCallback<EnsureArray<T>>,\n  throttleTimeout = 500,\n  INTERNAL_priority = false\n) => {\n  const { off, on } = useContext(DailyEventContext);\n  const eventId = useMemo(() => {\n    if (Array.isArray(ev))\n      return ev.reduce<Record<string, number>>((r, e) => {\n        r[e] = INTERNAL_priority ? getPriorityUnique() : getUnique();\n        return r;\n      }, {});\n    return { [ev]: INTERNAL_priority ? getPriorityUnique() : getUnique() };\n  }, [ev, INTERNAL_priority]);\n\n  const throttledEvents = useRef<EventObjectsFor<T>[]>([]);\n\n  useDailyEvent(\n    'call-instance-destroyed',\n    useCallback(() => {\n      throttledEvents.current.length = 0;\n    }, [])\n  );\n\n  const emitEvents = useMemo(\n    () =>\n      throttle(\n        () => {\n          if (throttledEvents.current.length === 0) return;\n          callback(throttledEvents.current);\n          throttledEvents.current.length = 0;\n        },\n        throttleTimeout,\n        {\n          trailing: true,\n        }\n      ),\n    [callback, throttleTimeout]\n  );\n\n  useEffect(() => {\n    if (!ev) return;\n    const addEvent = (ev: DailyEventObject) => {\n      throttledEvents.current.push(ev);\n      emitEvents();\n    };\n    if (Array.isArray(ev)) {\n      ev.forEach((e) => on(e, addEvent, eventId[e]));\n    } else {\n      on(ev, addEvent, eventId[ev]);\n    }\n    return () => {\n      if (Array.isArray(ev)) {\n        ev.forEach((e) => off(e, eventId[e]));\n      } else {\n        off(ev, eventId[ev]);\n      }\n    };\n  }, [emitEvents, ev, eventId, off, on]);\n\n  useDebugValue({\n    event: ev,\n    eventId,\n  });\n};\n","import { ExtendedDailyParticipant } from '../DailyParticipants';\nimport { Paths } from '../types/paths';\n\n/**\n * Returns all property paths for an object.\n */\nconst getPaths = (\n  o: Record<any, any>,\n  currentPath = '',\n  visited = new Set()\n): string[] => {\n  if (typeof o !== 'object' || o === null || visited.has(o)) {\n    return [currentPath];\n  }\n\n  visited.add(o);\n\n  const paths = [];\n  for (const key in o) {\n    if (Object.prototype.hasOwnProperty.call(o, key)) {\n      const newPath = currentPath ? `${currentPath}.${key}` : key;\n      paths.push(newPath, ...getPaths(o[key], newPath, visited));\n    }\n  }\n\n  visited.delete(o);\n\n  return paths;\n};\n\n/**\n * Returns all property paths for a given participant object.\n */\nexport const getParticipantPaths = (p: ExtendedDailyParticipant) => {\n  return getPaths(p) as Paths<ExtendedDailyParticipant>[];\n};\n","import { ExtendedDailyParticipant } from '../DailyParticipants';\nimport type { NumericKeys } from '../types/NumericKeys';\nimport type { Paths } from '../types/paths';\nimport type { PathValue } from '../types/pathValue';\n\nconst resolvePath = <T extends ExtendedDailyParticipant, P extends Paths<T>>(\n  participant: T | null,\n  path: P\n): PathValue<T, P> => {\n  return String(path)\n    .split('.')\n    .filter((key) => key.length)\n    .reduce((p: any, key) => p && p[key], participant);\n};\n\ntype ResolveParticipantPathsReturnType<\n  T extends ExtendedDailyParticipant,\n  P extends Paths<T>[]\n> = { [K in keyof P]: K extends NumericKeys ? PathValue<T, P[K]> : never };\n\nexport const resolveParticipantPaths = <\n  T extends ExtendedDailyParticipant,\n  P extends Paths<T>[]\n>(\n  participant: T | null,\n  paths: P\n): ResolveParticipantPathsReturnType<T, P> => {\n  return paths.map((path) =>\n    resolvePath(participant, path)\n  ) as ResolveParticipantPathsReturnType<T, P>;\n};\n","import {\n  DailyParticipant,\n  DailyParticipantsObject,\n  DailyParticipantTracks,\n  DailyWaitingParticipant,\n} from '@daily-co/daily-js';\nimport { atom } from 'jotai';\nimport { atomFamily, useAtomCallback } from 'jotai/utils';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport {\n  getParticipantPropertyAtom,\n  getPropertyParam,\n  participantPropertyPathsState,\n  participantPropertyState,\n} from './hooks/useParticipantProperty';\nimport { useThrottledDailyEvent } from './hooks/useThrottledDailyEvent';\nimport { arraysDeepEqual, customDeepEqual } from './lib/customDeepEqual';\nimport { equalAtomFamily, jotaiDebugLabel } from './lib/jotai-custom';\nimport { getParticipantPaths } from './utils/getParticipantPaths';\nimport { resolveParticipantPaths } from './utils/resolveParticipantPaths';\n\n/**\n * Extends DailyParticipant with convenient additional properties.\n * The `tracks` object needs to omit custom track keys, otherwise\n * autocomplete for `tracks` in useParticipantProperty doesn't work.\n */\nexport interface ExtendedDailyParticipant\n  extends Omit<DailyParticipant, 'tracks'> {\n  last_active?: Date;\n  tracks: DailyParticipantTracks;\n}\n\n/**\n * Stores the most recent peerId as reported from [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\n */\nexport const activeIdState = atom<string | null>(null);\nactiveIdState.debugLabel = jotaiDebugLabel('active-id');\n\nexport const localIdState = atom<string>('');\nlocalIdState.debugLabel = jotaiDebugLabel('local-id');\n\nexport const localJoinDateState = atom<Date | null>(null);\nlocalJoinDateState.debugLabel = jotaiDebugLabel('local-join-date');\n\nexport const participantIdsState = atom<string[]>([]);\nparticipantIdsState.debugLabel = jotaiDebugLabel('participant-ids');\n\nexport const participantState = atomFamily((id: string) => {\n  const participantAtom = atom<ExtendedDailyParticipant | null>(null);\n  participantAtom.debugLabel = jotaiDebugLabel(`participant-${id}`);\n  return participantAtom;\n});\nexport const waitingParticipantsState = atom<string[]>([]);\nwaitingParticipantsState.debugLabel = jotaiDebugLabel('waiting-participants');\n\nexport const waitingParticipantState = atomFamily((id: string) => {\n  const waitingParticipantAtom = atom<DailyWaitingParticipant>({\n    awaitingAccess: {\n      level: 'full',\n    },\n    id,\n    name: '',\n  });\n  waitingParticipantAtom.debugLabel = jotaiDebugLabel(\n    `waiting-participant-${id}`\n  );\n  return waitingParticipantAtom;\n});\n\nexport const allWaitingParticipantsSelector = equalAtomFamily<\n  any[],\n  DailyWaitingParticipant | undefined\n>({\n  equals: arraysDeepEqual,\n  get: () => (get) => {\n    const ids = get(waitingParticipantsState);\n    return ids.map((id) => get(waitingParticipantState(id)));\n  },\n});\n\nexport const DailyParticipants: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n  const [initialized, setInitialized] = useState(false);\n\n  const initParticipants = useAtomCallback(\n    useCallback((_get, set, participants: DailyParticipantsObject) => {\n      set(localIdState, participants.local.session_id);\n      const participantsArray = Object.values(participants);\n      const ids = participantsArray.map((p) => p.session_id);\n      set(participantIdsState, ids);\n      participantsArray.forEach((p) => {\n        set(participantState(p.session_id), p);\n        const paths = getParticipantPaths(p);\n        set(participantPropertyPathsState(p.session_id), paths);\n        paths.forEach((property) => {\n          const [value] = resolveParticipantPaths(\n            p as ExtendedDailyParticipant,\n            [property]\n          );\n          set(getParticipantPropertyAtom(p.session_id, property), value);\n        });\n      });\n      setInitialized(true);\n    }, [])\n  );\n\n  /**\n   * Initialize participants state based on daily.participants().\n   * Retries every 100ms to initialize the state, until daily is ready.\n   */\n  useEffect(() => {\n    if (!daily || initialized) return;\n    const interval = setInterval(() => {\n      const participants = daily.participants();\n      if (!('local' in participants)) return;\n      initParticipants(participants);\n      clearInterval(interval);\n    }, 100);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [daily, initialized, initParticipants]);\n  const handleInitEvent = useCallback(() => {\n    if (!daily) return;\n    const participants = daily?.participants();\n    if (!participants.local) return;\n    initParticipants(participants);\n  }, [daily, initParticipants]);\n  useDailyEvent('started-camera', handleInitEvent, true);\n  useDailyEvent('access-state-updated', handleInitEvent, true);\n  useDailyEvent(\n    'joining-meeting',\n    useAtomCallback(\n      useCallback(\n        (_get, set) => {\n          set(localJoinDateState, new Date());\n          handleInitEvent();\n        },\n        [handleInitEvent]\n      )\n    ),\n    true\n  );\n  useDailyEvent(\n    'joined-meeting',\n    useCallback(\n      (ev) => {\n        initParticipants(ev.participants);\n      },\n      [initParticipants]\n    ),\n    true\n  );\n\n  /**\n   * Reset stored participants, when meeting has ended.\n   */\n  const handleCleanup = useAtomCallback(\n    useCallback((get, set) => {\n      set(localIdState, '');\n      set(activeIdState, null);\n      const ids = get(participantIdsState);\n      ids.forEach((id) => participantState.remove(id));\n      set(participantIdsState, []);\n    }, [])\n  );\n  useDailyEvent('call-instance-destroyed', handleCleanup, true);\n  useDailyEvent('left-meeting', handleCleanup, true);\n\n  useThrottledDailyEvent(\n    [\n      'active-speaker-change',\n      'participant-joined',\n      'participant-updated',\n      'participant-left',\n    ],\n    useAtomCallback(\n      useCallback((get, set, evts) => {\n        if (!evts.length) return;\n        evts.forEach((ev) => {\n          switch (ev.action) {\n            case 'active-speaker-change': {\n              set(activeIdState, ev.activeSpeaker.peerId);\n              set(participantState(ev.activeSpeaker.peerId), (prev) => {\n                if (!prev) return null;\n                return {\n                  ...prev,\n                  last_active: new Date(),\n                };\n              });\n              break;\n            }\n            case 'participant-joined': {\n              // Update list of ids\n              set(participantIdsState, (prevIds) =>\n                prevIds.includes(ev.participant.session_id)\n                  ? prevIds\n                  : [...prevIds, ev.participant.session_id]\n              );\n              // Store entire object\n              set(participantState(ev.participant.session_id), ev.participant);\n\n              const paths = getParticipantPaths(ev.participant);\n              // Set list of property paths\n              set(\n                participantPropertyPathsState(ev.participant.session_id),\n                paths\n              );\n              // Set all property path values\n              paths.forEach((property) => {\n                const [value] = resolveParticipantPaths(\n                  ev.participant as ExtendedDailyParticipant,\n                  [property]\n                );\n                set(\n                  getParticipantPropertyAtom(\n                    ev.participant.session_id,\n                    property\n                  ),\n                  value\n                );\n              });\n              break;\n            }\n            case 'participant-updated': {\n              // Update entire object\n              set(participantState(ev.participant.session_id), ev.participant);\n              // Update local session_id\n              if (ev.participant.local) {\n                set(localIdState, ev.participant.session_id);\n              }\n\n              const paths = getParticipantPaths(ev.participant);\n              const oldPaths = get(\n                participantPropertyPathsState(ev.participant.session_id)\n              );\n              const pathsChanged =\n                paths.length !== oldPaths.length ||\n                paths.some((path) => !oldPaths.includes(path));\n              // Set list of property paths\n              if (pathsChanged) {\n                set(\n                  participantPropertyPathsState(ev.participant.session_id),\n                  paths\n                );\n              }\n\n              // Create a Set of oldPaths for quick lookup\n              const oldPathSet = new Set(oldPaths);\n\n              // Resolve all path values in one call\n              const resolvedValues = resolveParticipantPaths(\n                ev.participant as ExtendedDailyParticipant,\n                paths\n              );\n\n              paths.forEach((property, idx) => {\n                const value = resolvedValues[idx];\n\n                // Remove property from oldPathSet to mark it as processed\n                oldPathSet.delete(property);\n\n                // Only update if the new value differs from the current one\n                set(\n                  getParticipantPropertyAtom(\n                    ev.participant.session_id,\n                    property\n                  ),\n                  (prev: any) => (customDeepEqual(prev, value) ? prev : value)\n                );\n              });\n\n              // Set any remaining paths in oldPathSet to null\n              oldPathSet.forEach((property) => {\n                set(\n                  getParticipantPropertyAtom(\n                    ev.participant.session_id,\n                    property\n                  ),\n                  null\n                );\n              });\n              break;\n            }\n            case 'participant-left': {\n              // Remove from list of ids\n              set(participantIdsState, (prevIds) =>\n                prevIds.includes(ev.participant.session_id)\n                  ? prevIds.filter((id) => id !== ev.participant.session_id)\n                  : prevIds\n              );\n              // Remove entire object\n              participantState.remove(ev.participant.session_id);\n\n              const oldPaths = get(\n                participantPropertyPathsState(ev.participant.session_id)\n              );\n              // Remove property path values\n              oldPaths.forEach((property) => {\n                participantPropertyState.remove(\n                  getPropertyParam(ev.participant.session_id, property)\n                );\n              });\n              // Remove all property paths\n              participantPropertyPathsState.remove(ev.participant.session_id);\n              break;\n            }\n          }\n        });\n      }, [])\n    ),\n    100,\n    true\n  );\n\n  useThrottledDailyEvent(\n    [\n      'waiting-participant-added',\n      'waiting-participant-updated',\n      'waiting-participant-removed',\n    ],\n    useAtomCallback(\n      useCallback((_get, set, evts) => {\n        evts.forEach((ev) => {\n          switch (ev.action) {\n            case 'waiting-participant-added':\n              set(waitingParticipantsState, (wps) =>\n                wps.includes(ev.participant.id)\n                  ? wps\n                  : [...wps, ev.participant.id]\n              );\n              set(waitingParticipantState(ev.participant.id), ev.participant);\n              break;\n            case 'waiting-participant-updated':\n              set(waitingParticipantState(ev.participant.id), ev.participant);\n              break;\n            case 'waiting-participant-removed':\n              set(waitingParticipantsState, (wps) =>\n                wps.filter((wp) => wp !== ev.participant.id)\n              );\n              waitingParticipantState.remove(ev.participant.id);\n              break;\n          }\n        });\n      }, [])\n    ),\n    100,\n    true\n  );\n\n  return <>{children}</>;\n};\n","import { useAtomValue } from 'jotai';\nimport { useDebugValue } from 'react';\n\nimport { localIdState } from '../DailyParticipants';\n\n/**\n * Returns the local participant's session_id or empty string '',\n * if the local participant doesn't exist.\n */\nexport const useLocalSessionId = () => {\n  const localId = useAtomValue(localIdState);\n  useDebugValue(localId);\n  return localId;\n};\n","import { useAtomValue } from 'jotai';\nimport { useDebugValue, useEffect, useState } from 'react';\n\nimport { activeIdState } from '../DailyParticipants';\nimport { useLocalSessionId } from './useLocalSessionId';\n\ninterface UseActiveSpeakerIdArgs {\n  /**\n   * Anytime the active-speaker-change event emits a new id, this callback can be used\n   * to determine if the new speaker id should be ignored or not.\n   * Return false from the callback to ignore the new speaker id in this hook's instance.\n   */\n  filter?(id: string | null): boolean;\n  /**\n   * If set to true, useActiveParticipant will never return the local participant.\n   */\n  ignoreLocal?: boolean;\n}\n\nconst noopFilter = () => true;\n\n/**\n * Returns the most recent speaker id mentioned in an [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\n */\nexport const useActiveSpeakerId = ({\n  filter = noopFilter,\n  ignoreLocal = false,\n}: UseActiveSpeakerIdArgs = {}) => {\n  const localSessionId = useLocalSessionId();\n  const recentActiveId = useAtomValue(activeIdState);\n  const isIgnoredLocalId = ignoreLocal && recentActiveId === localSessionId;\n  const isFilteredOut = !filter?.(recentActiveId);\n  const isRecentIdRelevant = !isIgnoredLocalId && !isFilteredOut;\n  const [activeId, setActiveId] = useState<string | null>(\n    isRecentIdRelevant ? recentActiveId : null\n  );\n\n  useEffect(() => {\n    if (isIgnoredLocalId || isFilteredOut) return;\n    setActiveId(recentActiveId);\n  }, [isFilteredOut, isIgnoredLocalId, recentActiveId]);\n\n  useDebugValue(activeId);\n\n  return activeId;\n};\n","import { DailyTrackState } from '@daily-co/daily-js';\n\nexport const isTrackOff = (trackState: DailyTrackState['state']) =>\n  ['blocked', 'off'].includes(trackState);\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { Atom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport { useCallback, useDebugValue, useEffect, useState } from 'react';\n\nimport {\n  ExtendedDailyParticipant,\n  participantIdsState,\n  participantState,\n} from '../DailyParticipants';\nimport { customDeepEqual } from '../lib/customDeepEqual';\nimport { equalAtomFamily } from '../lib/jotai-custom';\nimport { isTrackOff } from '../utils/isTrackOff';\nimport { getParticipantPropertyAtom } from './useParticipantProperty';\nimport { useThrottledDailyEvent } from './useThrottledDailyEvent';\n\n// Define the type for the get function\ntype GetFunction = <T>(atom: Atom<T>) => T;\n\ntype FilterParticipantsFunction = (\n  p: ExtendedDailyParticipant,\n  index: number,\n  arr: ExtendedDailyParticipant[]\n) => boolean;\ntype SerializableFilterParticipants =\n  | 'local'\n  | 'remote'\n  | 'owner'\n  | 'record'\n  | 'screen';\ntype FilterParticipants =\n  | SerializableFilterParticipants\n  | FilterParticipantsFunction;\n\ntype SortParticipantsFunction = (\n  a: ExtendedDailyParticipant,\n  b: ExtendedDailyParticipant\n) => 1 | -1 | 0;\ntype SerializableSortParticipants =\n  | 'joined_at'\n  | 'session_id'\n  | 'user_id'\n  | 'user_name';\ntype SortParticipants = SerializableSortParticipants | SortParticipantsFunction;\n\nconst SERIALIZABLE_DELIM = ';';\nexport const getParticipantIdsFilterSortParam = (\n  filter: string | null,\n  sort: string | null\n) => `${filter}${SERIALIZABLE_DELIM}${sort}`;\n\n/**\n * Short-cut state selector for useParticipantIds({ filter: 'local' })\n */\nexport const participantIdsFilteredAndSortedState = equalAtomFamily<\n  string[],\n  string\n>({\n  equals: customDeepEqual,\n  get: (param) => (get) => {\n    const [filter, sort] = param.split(SERIALIZABLE_DELIM);\n    const ids = get(participantIdsState);\n    return ids\n      .filter((id) => {\n        switch (filter) {\n          /**\n           * Simple boolean fields first.\n           */\n          case 'local':\n          case 'owner':\n          case 'record': {\n            return get(getParticipantPropertyAtom(id, filter));\n          }\n          case 'remote': {\n            return !get(getParticipantPropertyAtom(id, 'local'));\n          }\n          case 'screen': {\n            const screenAudioState = get(\n              getParticipantPropertyAtom(id, 'tracks.screenAudio.state')\n            );\n            const screenVideoState = get(\n              getParticipantPropertyAtom(id, 'tracks.screenVideo.state')\n            );\n            return (\n              !isTrackOff(screenAudioState) || !isTrackOff(screenVideoState)\n            );\n          }\n          default:\n            return true;\n        }\n      })\n      .sort((idA, idB) => {\n        switch (sort) {\n          case 'joined_at':\n          case 'session_id':\n          case 'user_id':\n          case 'user_name': {\n            const aSort = get(getParticipantPropertyAtom(idA, sort));\n            const bSort = get(getParticipantPropertyAtom(idB, sort));\n            if (aSort !== undefined || bSort !== undefined) {\n              if (aSort === undefined) return -1;\n              if (bSort === undefined) return 1;\n              if (aSort > bSort) return 1;\n              if (aSort < bSort) return -1;\n            }\n            return 0;\n          }\n          default:\n            return 0;\n        }\n      });\n  },\n});\n\ninterface UseParticipantIdsArgs {\n  filter?: FilterParticipants;\n  onActiveSpeakerChange?(ev: DailyEventObject<'active-speaker-change'>): void;\n  onParticipantJoined?(ev: DailyEventObject<'participant-joined'>): void;\n  onParticipantLeft?(ev: DailyEventObject<'participant-left'>): void;\n  onParticipantUpdated?(ev: DailyEventObject<'participant-updated'>): void;\n  sort?: SortParticipants;\n}\n\n/**\n * Returns a list of participant ids (= session_id).\n * The list can optionally be filtered and sorted, using the filter and sort options.\n */\nexport const useParticipantIds = ({\n  filter,\n  onActiveSpeakerChange,\n  onParticipantJoined,\n  onParticipantLeft,\n  onParticipantUpdated,\n  sort,\n}: UseParticipantIdsArgs = {}) => {\n  /**\n   * For instances of useParticipantIds with string-based filter and sort,\n   * we can immediately return the correct ids from Jotai's state.\n   */\n  const preFilteredSortedIds = useAtomValue(\n    participantIdsFilteredAndSortedState(\n      getParticipantIdsFilterSortParam(\n        typeof filter === 'string' ? filter : null,\n        typeof sort === 'string' ? sort : null\n      )\n    )\n  );\n\n  const shouldUseCustomIds =\n    typeof filter === 'function' || typeof sort === 'function';\n\n  const getCustomFilteredIds = useCallback(\n    (get: GetFunction) => {\n      if (\n        // Ignore if both filter and sort are not functions.\n        typeof filter !== 'function' &&\n        typeof sort !== 'function'\n      )\n        return [];\n\n      const participants: (ExtendedDailyParticipant | null)[] =\n        preFilteredSortedIds.map((id) => get(participantState(id)));\n\n      return (\n        participants\n          // Make sure we don't accidentally try to filter/sort `null` participants\n          // This can happen when a participant's id is already present in store\n          // but the participant object is not stored, yet.\n          .filter((p): p is ExtendedDailyParticipant => Boolean(p))\n          // Run custom filter, if it's a function. Otherwise don't filter any participants.\n          .filter(typeof filter === 'function' ? filter : () => true)\n          // Run custom sort, if it's a function. Otherwise don't sort.\n          .sort(typeof sort === 'function' ? sort : () => 0)\n          // Map back to session_id.\n          .map((p) => p.session_id)\n          // Filter any potential null/undefined ids.\n          // This shouldn't really happen, but better safe than sorry.\n          .filter(Boolean)\n      );\n    },\n    [filter, preFilteredSortedIds, sort]\n  );\n\n  const [customIds, setCustomIds] = useState<string[]>([]);\n\n  const maybeUpdateCustomIds = useAtomCallback(\n    useCallback(\n      (get) => {\n        if (!shouldUseCustomIds) return;\n        const newIds = getCustomFilteredIds(get);\n        if (customDeepEqual(newIds, customIds)) return;\n        setCustomIds(newIds);\n      },\n      [customIds, getCustomFilteredIds, shouldUseCustomIds]\n    )\n  );\n\n  useEffect(() => {\n    maybeUpdateCustomIds();\n  }, [maybeUpdateCustomIds]);\n\n  useThrottledDailyEvent(\n    [\n      'participant-joined',\n      'participant-updated',\n      'active-speaker-change',\n      'participant-left',\n    ],\n    useCallback(\n      (evts) => {\n        if (!evts.length) return;\n        evts.forEach((ev) => {\n          switch (ev.action) {\n            case 'participant-joined':\n              onParticipantJoined?.(ev);\n              break;\n            case 'participant-updated':\n              onParticipantUpdated?.(ev);\n              break;\n            case 'active-speaker-change':\n              onActiveSpeakerChange?.(ev);\n              break;\n            case 'participant-left':\n              onParticipantLeft?.(ev);\n              break;\n          }\n        });\n        maybeUpdateCustomIds();\n      },\n      [\n        maybeUpdateCustomIds,\n        onActiveSpeakerChange,\n        onParticipantJoined,\n        onParticipantLeft,\n        onParticipantUpdated,\n      ]\n    )\n  );\n\n  const result =\n    typeof filter === 'function' || typeof sort === 'function'\n      ? customIds\n      : preFilteredSortedIds;\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObjectNonFatalError,\n  DailyTrackState,\n} from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport { arraysDeepEqual } from '../lib/customDeepEqual';\nimport { equalAtomFamily } from '../lib/jotai-custom';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport {\n  getParticipantIdsFilterSortParam,\n  participantIdsFilteredAndSortedState,\n} from './useParticipantIds';\nimport { getParticipantPropertyAtom } from './useParticipantProperty';\n\nexport interface ScreenShare {\n  local: boolean;\n  screenAudio: DailyTrackState;\n  screenVideo: DailyTrackState;\n  screenId: string;\n  session_id: string;\n}\n\nconst screenSharesState = equalAtomFamily<ScreenShare[], void>({\n  equals: arraysDeepEqual,\n  get: () => (get) => {\n    const screenIds = get(\n      participantIdsFilteredAndSortedState(\n        getParticipantIdsFilterSortParam('screen', null)\n      )\n    );\n    return screenIds.map<ScreenShare>((id) => {\n      return {\n        local: get(getParticipantPropertyAtom(id, 'local')),\n        screenAudio: get(getParticipantPropertyAtom(id, 'tracks.screenAudio')),\n        screenVideo: get(getParticipantPropertyAtom(id, 'tracks.screenVideo')),\n        screenId: `${id}-screen`,\n        session_id: id,\n      };\n    });\n  },\n});\n\ntype DailyEventObjectScreenShareError = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'screen-share-error'\n>;\n\ninterface UseScreenShareArgs {\n  onError?(ev: DailyEventObjectScreenShareError): void;\n  onLocalScreenShareStarted?(): void;\n  onLocalScreenShareStopped?(): void;\n}\n\n/**\n * Allows access to information about shared screens, and methods to start or stop a local screen share.\n */\nexport const useScreenShare = ({\n  onError,\n  onLocalScreenShareStarted,\n  onLocalScreenShareStopped,\n}: UseScreenShareArgs = {}) => {\n  const daily = useDaily();\n\n  const startScreenShare = useCallback(\n    (...args: Parameters<DailyCall['startScreenShare']>) => {\n      daily?.startScreenShare(...args);\n    },\n    [daily]\n  );\n\n  const stopScreenShare = useCallback(\n    (...args: Parameters<DailyCall['stopScreenShare']>) => {\n      daily?.stopScreenShare(...args);\n    },\n    [daily]\n  );\n\n  useDailyEvent(\n    'local-screen-share-started',\n    useCallback(\n      () => onLocalScreenShareStarted?.(),\n      [onLocalScreenShareStarted]\n    )\n  );\n  useDailyEvent(\n    'local-screen-share-stopped',\n    useCallback(\n      () => onLocalScreenShareStopped?.(),\n      [onLocalScreenShareStopped]\n    )\n  );\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'screen-share-error') return;\n        onError?.(ev as DailyEventObjectScreenShareError);\n      },\n      [onError]\n    )\n  );\n\n  const screens = useAtomValue(screenSharesState(undefined));\n\n  const result = {\n    isSharingScreen: screens.some((s) => s.local),\n    screens,\n    startScreenShare,\n    stopScreenShare,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyParticipantTracks, DailyTrackState } from '@daily-co/daily-js';\nimport { useDebugValue } from 'react';\n\nimport { isTrackOff } from '../utils/isTrackOff';\nimport { useParticipantProperty } from './useParticipantProperty';\n\ntype MediaType = keyof DailyParticipantTracks;\n\nexport interface MediaTrackState extends DailyTrackState {\n  isOff: boolean;\n}\n\n/**\n * Returns a participant's track and state, based on the given MediaType.\n *\n * Equivalent to daily.participants()[participantId].tracks[type].\n *\n * @param participantId The participant's session_id.\n * @param type The track type. Default: \"video\"\n */\nexport const useMediaTrack = (\n  participantId: string,\n  type: MediaType = 'video'\n): MediaTrackState => {\n  const trackState = useParticipantProperty(participantId, `tracks.${type}`);\n\n  const result: MediaTrackState = trackState\n    ? {\n        ...trackState,\n        isOff: isTrackOff(trackState.state),\n      }\n    : {\n        isOff: true,\n        persistentTrack: undefined,\n        state: 'off',\n        subscribed: false,\n      };\n\n  useDebugValue(result);\n\n  return result;\n};\n","/**\n * Original source: https://github.com/jaredLunde/react-hook/blob/master/packages/merged-ref/src/index.tsx\n * Original author: Jared Lunde (https://github.com/jaredLunde)\n * Originally published under the MIT license: https://github.com/jaredLunde/react-hook/blob/master/LICENSE\n */\n\nimport React, { useCallback } from 'react';\n\nfunction useMergedRef<T>(...refs: React.Ref<T>[]): React.RefCallback<T> {\n  return useCallback(\n    (element: T) => {\n      for (let i = 0; i < refs.length; i++) {\n        const ref = refs[i];\n        if (typeof ref === 'function') ref(element);\n        else if (ref && typeof ref === 'object')\n          (ref as React.MutableRefObject<T>).current = element;\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n\nexport default useMergedRef;\n","import React, { forwardRef, memo, useEffect, useRef } from 'react';\n\nimport { useMediaTrack } from '../hooks/useMediaTrack';\nimport useMergedRef from '../hooks/useMergedRef';\n\nexport interface DailyAudioPlayException {\n  name?: string;\n  message?: string;\n  sessionId: string;\n  target: HTMLAudioElement;\n  type: string;\n}\n\ninterface Props extends React.AudioHTMLAttributes<HTMLAudioElement> {\n  /**\n   * Callback to handle failed attempt to play audio.\n   */\n  onPlayFailed?(e: DailyAudioPlayException): void;\n  sessionId: string;\n  type?: 'audio' | 'screenAudio' | 'rmpAudio';\n}\n\nexport const DailyAudioTrack = memo(\n  forwardRef<HTMLAudioElement, Props>(\n    ({ onPlayFailed, sessionId, type = 'audio', ...props }, ref) => {\n      const audioEl = useRef<HTMLAudioElement>(null);\n      const audio = useMediaTrack(sessionId, type);\n      const audioRef = useMergedRef<HTMLAudioElement>(audioEl, ref);\n      const subscribedState = audio?.subscribed;\n\n      /**\n       * Setup audio tag.\n       */\n      useEffect(() => {\n        const audioTag = audioEl.current;\n        if (!audioTag || !audio?.persistentTrack) return;\n        let playTimeout: ReturnType<typeof setTimeout>;\n        const handleCanPlay = () => {\n          audioTag.play().catch((e) => {\n            onPlayFailed?.({\n              sessionId,\n              target: audioTag,\n              type,\n              message: e.message,\n              name: e.name,\n            });\n          });\n        };\n        const handlePlay = () => {\n          clearTimeout(playTimeout);\n        };\n        if (!MediaStream) {\n          console.warn(\n            `MediaStream API not available. Can't setup ${type} for ${sessionId}`\n          );\n          onPlayFailed?.({\n            sessionId,\n            target: audioTag,\n            type,\n            message: 'MediaStream API not available',\n            name: 'MediaStream API not available',\n          });\n          return;\n        }\n        audioTag.addEventListener('canplay', handleCanPlay);\n        audioTag.addEventListener('play', handlePlay);\n        audioTag.srcObject = new MediaStream([audio?.persistentTrack]);\n\n        return () => {\n          audioTag?.removeEventListener('canplay', handleCanPlay);\n          audioTag?.removeEventListener('play', handlePlay);\n        };\n      }, [audio?.persistentTrack, onPlayFailed, sessionId, type]);\n\n      return (\n        <audio\n          autoPlay\n          ref={audioRef}\n          {...props}\n          data-session-id={sessionId}\n          data-audio-type={type}\n          data-subscribed={subscribedState}\n        />\n      );\n    }\n  )\n);\nDailyAudioTrack.displayName = 'DailyAudioTrack';\n","import { useAtomCallback } from 'jotai/utils';\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\n\nimport { ExtendedDailyParticipant } from '../DailyParticipants';\nimport { useActiveSpeakerId } from '../hooks/useActiveSpeakerId';\nimport { useDaily } from '../hooks/useDaily';\nimport { useLocalSessionId } from '../hooks/useLocalSessionId';\nimport { useParticipantIds } from '../hooks/useParticipantIds';\nimport { getParticipantPropertyAtom } from '../hooks/useParticipantProperty';\nimport { useScreenShare } from '../hooks/useScreenShare';\nimport { useThrottledDailyEvent } from '../hooks/useThrottledDailyEvent';\nimport { isTrackOff } from '../utils/isTrackOff';\nimport { DailyAudioPlayException, DailyAudioTrack } from './DailyAudioTrack';\n\ninterface Props {\n  /**\n   * When enabled and the call is configured for manual track subscriptions,\n   * DailyAudio will automatically subscribe to the active speaker's audio track.\n   */\n  autoSubscribeActiveSpeaker?: boolean;\n  /**\n   * Maximum amount of parallel speakers. Default: 5.\n   */\n  maxSpeakers?: number;\n  /**\n   * Callback to handle failed attempt to play audio.\n   */\n  onPlayFailed?(e: DailyAudioPlayException): void;\n  /**\n   * When enabled, plays audio from a local screenAudio track.\n   */\n  playLocalScreenAudio?: boolean;\n}\n\nexport interface DailyAudioHandle {\n  /**\n   * Returns all rendered audio elements.\n   */\n  getAllAudio(): HTMLAudioElement[];\n  /**\n   * Returns the audio element assigned to the current active speaker.\n   */\n  getActiveSpeakerAudio(): HTMLAudioElement | null;\n  /**\n   * Returns all rendered audio elements for rmpAudio tracks.\n   */\n  getRmpAudio(): HTMLAudioElement[];\n  /**\n   * Returns all rendered audio elements for screenAudio tracks.\n   */\n  getScreenAudio(): HTMLAudioElement[];\n  /**\n   * Returns the audio track for the given sessionId.\n   */\n  getAudioBySessionId(sessionId: string): HTMLAudioElement | null;\n  /**\n   * Returns the rmpAudio track for the given sessionId.\n   */\n  getRmpAudioBySessionId(sessionId: string): HTMLAudioElement | null;\n  /**\n   * Returns the screenAudio track for the given sessionId.\n   */\n  getScreenAudioBySessionId(sessionId: string): HTMLAudioElement | null;\n}\n\nexport const DailyAudio = memo(\n  forwardRef<DailyAudioHandle, Props>(\n    (\n      {\n        autoSubscribeActiveSpeaker = false,\n        maxSpeakers = 5,\n        onPlayFailed,\n        playLocalScreenAudio = false,\n      },\n      ref\n    ) => {\n      const daily = useDaily();\n      const [speakers, setSpeakers] = useState<string[]>(\n        new Array(maxSpeakers).fill('')\n      );\n      const { screens } = useScreenShare();\n      const localSessionId = useLocalSessionId();\n      const activeSpeakerId = useActiveSpeakerId({\n        ignoreLocal: true,\n      });\n\n      const containerRef = useRef<HTMLDivElement>(null);\n      useImperativeHandle(\n        ref,\n        () => ({\n          getActiveSpeakerAudio: () => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${activeSpeakerId}\"][data-audio-type=\"audio\"]`\n              ) ?? null\n            );\n          },\n          getAllAudio: () => {\n            return Array.from(\n              containerRef.current?.querySelectorAll('audio') ?? []\n            );\n          },\n          getAudioBySessionId: (id) => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${id}\"][data-audio-type=\"audio\"]`\n              ) ?? null\n            );\n          },\n          getRmpAudio: () => {\n            return Array.from(\n              containerRef.current?.querySelectorAll(\n                'audio[data-audio-type=\"rmpAudio\"]'\n              ) ?? []\n            );\n          },\n          getScreenAudio: () => {\n            return Array.from(\n              containerRef.current?.querySelectorAll(\n                'audio[data-audio-type=\"screenAudio\"]'\n              ) ?? []\n            );\n          },\n          getRmpAudioBySessionId: (id) => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${id}\"][data-audio-type=\"rmpAudio\"]`\n              ) ?? null\n            );\n          },\n          getScreenAudioBySessionId: (id) => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${id}\"][data-audio-type=\"screenAudio\"]`\n              ) ?? null\n            );\n          },\n        }),\n        [activeSpeakerId]\n      );\n\n      const assignSpeaker = useAtomCallback(\n        useCallback(\n          async (get, _set, sessionId: string) => {\n            /**\n             * Only consider remote participants with subscribed or staged audio.\n             */\n            const subscribedParticipants = Object.values(\n              daily?.participants() ?? {}\n            ).filter((p) => !p.local && Boolean(p.tracks.audio.subscribed));\n\n            const isSubscribed = (id: string) =>\n              subscribedParticipants.some((p) => p.session_id === id);\n\n            if (!isSubscribed(sessionId)) {\n              if (\n                daily &&\n                !daily.isDestroyed() &&\n                autoSubscribeActiveSpeaker &&\n                !daily.subscribeToTracksAutomatically()\n              ) {\n                daily.updateParticipant(sessionId, {\n                  setSubscribedTracks: {\n                    audio: true,\n                  },\n                });\n              } else {\n                return;\n              }\n            }\n\n            setSpeakers((prevSpeakers) => {\n              // New speaker is already present\n              if (prevSpeakers.includes(sessionId)) return prevSpeakers;\n\n              // Try to find a free slot: either unassigned or unsubscribed\n              const freeSlotCheck = (id: string) => !id || !isSubscribed(id);\n              if (prevSpeakers.some(freeSlotCheck)) {\n                const idx = prevSpeakers.findIndex(freeSlotCheck);\n                prevSpeakers[idx] = sessionId;\n                return [...prevSpeakers];\n              }\n\n              // From here on we can assume that all assigned audio tracks are subscribed.\n\n              // Try to find muted recent speaker\n              const mutedIdx = prevSpeakers.findIndex((id) =>\n                subscribedParticipants.some(\n                  (p) => p.session_id === id && isTrackOff(p.tracks.audio.state)\n                )\n              );\n              if (mutedIdx >= 0) {\n                prevSpeakers[mutedIdx] = sessionId;\n                return [...prevSpeakers];\n              }\n\n              // Find least recent non-active speaker and replace with new speaker\n              const speakerObjects = subscribedParticipants\n                .filter(\n                  (p) =>\n                    // Only consider participants currently assigned to speaker slots\n                    prevSpeakers.includes(p.session_id) &&\n                    // Don't replace current active participant, to avoid audio drop-outs\n                    p.session_id !== activeSpeakerId\n                )\n                .sort((a, b) => {\n                  const lastActiveA =\n                    get(\n                      getParticipantPropertyAtom(a.session_id, 'last_active')\n                    ) ?? new Date('1970-01-01');\n                  const lastActiveB =\n                    get(\n                      getParticipantPropertyAtom(b.session_id, 'last_active')\n                    ) ?? new Date('1970-01-01');\n                  if (lastActiveA > lastActiveB) return 1;\n                  if (lastActiveA < lastActiveB) return -1;\n                  return 0;\n                });\n\n              // No previous speaker in call anymore. Assign first free slot.\n              if (!speakerObjects.length) {\n                // Don't replace the active speaker. Instead find first non-active speaker slot.\n                const replaceIdx = prevSpeakers.findIndex(\n                  (id) => id !== activeSpeakerId\n                );\n                prevSpeakers[replaceIdx] = sessionId;\n                return [...prevSpeakers];\n              }\n\n              // Replace least recent speaker with new speaker\n              const replaceIdx = prevSpeakers.indexOf(\n                speakerObjects[0]?.session_id\n              );\n              prevSpeakers[replaceIdx] = sessionId;\n              return [...prevSpeakers];\n            });\n          },\n          [activeSpeakerId, autoSubscribeActiveSpeaker, daily]\n        )\n      );\n\n      /**\n       * Unassigns speaker from speaker slot, e.g. because participant left the call.\n       */\n      const removeSpeaker = useCallback((sessionId: string) => {\n        setSpeakers((prevSpeakers) => {\n          if (!prevSpeakers.includes(sessionId)) return prevSpeakers;\n          const newSpeakers = [...prevSpeakers];\n          const idx = newSpeakers.indexOf(sessionId);\n          newSpeakers[idx] = '';\n          return newSpeakers;\n        });\n      }, []);\n\n      useThrottledDailyEvent(\n        ['active-speaker-change', 'track-started', 'participant-left'],\n        useCallback(\n          (evts) => {\n            evts.forEach((ev) => {\n              switch (ev.action) {\n                case 'active-speaker-change':\n                  if (ev.activeSpeaker.peerId === localSessionId) return;\n                  assignSpeaker(ev.activeSpeaker.peerId);\n                  break;\n                case 'track-started':\n                  if (\n                    ev.track.kind === 'audio' &&\n                    ev.participant &&\n                    !ev.participant.local\n                  ) {\n                    assignSpeaker(ev.participant.session_id);\n                  }\n                  break;\n                case 'participant-left':\n                  removeSpeaker(ev.participant.session_id);\n                  break;\n              }\n            });\n          },\n          [assignSpeaker, localSessionId, removeSpeaker]\n        ),\n        200\n      );\n\n      const rmpAudioIds = useParticipantIds({\n        filter: useCallback(\n          (p: ExtendedDailyParticipant) => Boolean(p?.tracks?.rmpAudio),\n          []\n        ),\n      });\n\n      return (\n        <div ref={containerRef}>\n          {speakers.map((sessionId, idx) => (\n            <DailyAudioTrack\n              key={`speaker-slot-${idx}`}\n              onPlayFailed={onPlayFailed}\n              sessionId={sessionId}\n              type=\"audio\"\n            />\n          ))}\n          {screens\n            .filter((screen) => (playLocalScreenAudio ? true : !screen.local))\n            .map((screen) => (\n              <DailyAudioTrack\n                key={screen.screenId}\n                onPlayFailed={onPlayFailed}\n                sessionId={screen.session_id}\n                type=\"screenAudio\"\n              />\n            ))}\n          {rmpAudioIds.map((id) => (\n            <DailyAudioTrack\n              key={`${id}-rmp`}\n              onPlayFailed={onPlayFailed}\n              sessionId={id}\n              type=\"rmpAudio\"\n            />\n          ))}\n        </div>\n      );\n    }\n  )\n);\nDailyAudio.displayName = 'DailyAudio';\n","import React, { forwardRef, useEffect, useMemo, useRef } from 'react';\n\nimport { useLocalSessionId } from '../hooks/useLocalSessionId';\nimport { useMediaTrack } from '../hooks/useMediaTrack';\nimport useMergedRef from '../hooks/useMergedRef';\nimport { useParticipantProperty } from '../hooks/useParticipantProperty';\n\ninterface DailyVideoDimensions {\n  aspectRatio: number;\n  height: number;\n  width: number;\n}\n\ninterface Props\n  extends Omit<React.VideoHTMLAttributes<HTMLVideoElement>, 'onResize'> {\n  /**\n   * For local user-facing camera streams, we'll automatically mirror the video.\n   */\n  automirror?: boolean;\n  /**\n   * Defines whether the video should be fully contained or cover the box. Default: 'contain'.\n   */\n  fit?: 'contain' | 'cover';\n  /**\n   * Forces the video to be mirrored, if set.\n   */\n  mirror?: boolean;\n  /**\n   * Optional styles to apply, when video is playable.\n   */\n  playableStyle?: React.CSSProperties;\n  /**\n   * Optional callback, which is triggered whenever the video's rendered width or height changes.\n   * Returns the video's native width, height and aspectRatio.\n   */\n  onResize?(dimensions: DailyVideoDimensions): void;\n  /**\n   * Identifies the participant for which a video stream should be rendered.\n   */\n  sessionId: string;\n  /**\n   * Defines the track type being used.\n   */\n  type: 'video' | 'screenVideo' | 'rmpVideo';\n}\n\nexport const DailyVideo = forwardRef<HTMLVideoElement, Props>(\n  function DailyVideo(\n    {\n      automirror,\n      fit = 'contain',\n      mirror,\n      onResize,\n      playableStyle = {},\n      sessionId,\n      style = {},\n      type = 'video',\n      ...props\n    },\n    ref\n  ) {\n    const localSessionId = useLocalSessionId();\n    const isLocal = localSessionId === sessionId;\n    const isScreen = type === 'screenVideo';\n    const isLocalCam = isLocal && !isScreen;\n\n    const videoEl = useRef<HTMLVideoElement>(null);\n    const videoRef = useMergedRef<HTMLVideoElement>(videoEl, ref);\n\n    const videoState = useMediaTrack(sessionId, type);\n    const videoTrack = videoState.persistentTrack;\n    /**\n     * Considered as playable video:\n     * - local cam feed\n     * - any screen share\n     * - remote cam feed that is subscribed and reported as playable\n     */\n    const isPlayable = isLocalCam || isScreen || !videoState.isOff;\n    const trackState = useParticipantProperty(sessionId, `tracks.${type}`);\n    const subscribedState = trackState?.subscribed;\n\n    /**\n     * Determine if video needs to be mirrored.\n     */\n    const isMirrored = useMemo(() => {\n      if (typeof mirror === 'boolean') return mirror;\n      if (!automirror) return false;\n      if (!videoTrack) return isLocalCam;\n\n      const videoTrackSettings = videoTrack.getSettings();\n      const isUsersFrontCamera =\n        'facingMode' in videoTrackSettings\n          ? isLocalCam && videoTrackSettings.facingMode === 'user'\n          : isLocalCam;\n      // only apply mirror effect to user facing camera\n      return isUsersFrontCamera;\n    }, [automirror, isLocalCam, mirror, videoTrack]);\n\n    /**\n     * Handle canplay & picture-in-picture events.\n     */\n    useEffect(function setupVideoEvents() {\n      const video = videoEl.current;\n      if (!video) return;\n\n      const playVideo = () => {\n        const promise = video.play();\n        if (promise !== undefined) {\n          promise\n            .then(() => {\n              // All good, playback started.\n              video.controls = false;\n            })\n            .catch((error) => {\n              // Auto-play was prevented. Show video controls, so user can play video manually.\n              video.controls = true;\n              console.warn('Failed to play video', error);\n            });\n        }\n      };\n\n      const handleCanPlay = () => {\n        if (!video.paused) return;\n        playVideo();\n      };\n      const handleEnterPIP = () => {\n        video.style.transform = 'scale(1)';\n      };\n      const handleLeavePIP = () => {\n        video.style.transform = '';\n        setTimeout(() => {\n          if (video.paused) playVideo();\n        }, 100);\n      };\n      const handleVisibilityChange = () => {\n        if (document.visibilityState === 'hidden') return;\n        if (!video.paused) return;\n        playVideo();\n      };\n      video.addEventListener('canplay', handleCanPlay);\n      video.addEventListener('enterpictureinpicture', handleEnterPIP);\n      video.addEventListener('leavepictureinpicture', handleLeavePIP);\n\n      // Videos can be paused if media was played in another app on iOS.\n      // Resuming here, when returning back to Daily call.\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n      return () => {\n        video.removeEventListener('canplay', handleCanPlay);\n        video.removeEventListener('enterpictureinpicture', handleEnterPIP);\n        video.removeEventListener('leavepictureinpicture', handleLeavePIP);\n        document.removeEventListener(\n          'visibilitychange',\n          handleVisibilityChange\n        );\n      };\n    }, []);\n\n    /**\n     * Update srcObject.\n     */\n    useEffect(\n      function updateSrcObject() {\n        const video = videoEl.current;\n        if (!video || !videoTrack) return;\n        if (!MediaStream) {\n          console.warn(\n            `MediaStream API not available. Can't setup ${type} for ${sessionId}`\n          );\n          return;\n        }\n        video.srcObject = new MediaStream([videoTrack]);\n        video.load();\n        return () => {\n          // clean up when unmounted\n          video.srcObject = null;\n          video.load();\n        };\n      },\n      [sessionId, type, videoTrack, videoTrack?.id]\n    );\n\n    /**\n     * Add optional event listener for resize event so the parent component\n     * can know the video's native aspect ratio.\n     */\n    useEffect(\n      function reportVideoDimensions() {\n        const video = videoEl.current;\n        if (!onResize || !video) return;\n\n        let frame: ReturnType<typeof requestAnimationFrame>;\n        function handleResize() {\n          if (frame) cancelAnimationFrame(frame);\n          frame = requestAnimationFrame(() => {\n            const video = videoEl.current;\n            if (!video || document.hidden) return;\n            const videoWidth = video.videoWidth;\n            const videoHeight = video.videoHeight;\n            if (videoWidth && videoHeight) {\n              onResize?.({\n                aspectRatio: videoWidth / videoHeight,\n                height: videoHeight,\n                width: videoWidth,\n              });\n            }\n          });\n        }\n\n        handleResize();\n        video.addEventListener('loadedmetadata', handleResize);\n        video.addEventListener('resize', handleResize);\n\n        return () => {\n          if (frame) cancelAnimationFrame(frame);\n          video.removeEventListener('loadedmetadata', handleResize);\n          video.removeEventListener('resize', handleResize);\n        };\n      },\n      [onResize]\n    );\n\n    return (\n      <video\n        autoPlay\n        muted\n        playsInline\n        ref={videoRef}\n        data-local={isLocal}\n        // Only set data-mirrored and data-playable when true\n        data-mirrored={isMirrored || undefined}\n        data-playable={isPlayable || undefined}\n        data-session-id={sessionId}\n        data-subscribed={subscribedState}\n        data-video-type={type}\n        style={{\n          objectFit: fit,\n          transform: isMirrored ? 'scale(-1, 1)' : '',\n          ...style,\n          ...(isPlayable ? playableStyle : {}),\n        }}\n        {...props}\n      />\n    );\n  }\n);\nDailyVideo.displayName = 'DailyVideo';\n","import { createContext } from 'react';\n\ninterface DevicesContextValue {\n  refreshDevices(): Promise<void>;\n}\n\nexport const DailyDevicesContext = createContext<DevicesContextValue>({\n  refreshDevices: () => Promise.resolve(),\n});\n","import {\n  DailyCameraErrorObject,\n  DailyCameraErrorType,\n} from '@daily-co/daily-js';\nimport { atom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport React, { useCallback } from 'react';\n\nimport { DailyDevicesContext } from './DailyDevicesContext';\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { jotaiDebugLabel } from './lib/jotai-custom';\n\ntype GeneralState =\n  | 'idle'\n  | 'pending'\n  | 'not-supported'\n  | 'granted'\n  | 'blocked'\n  | 'in-use'\n  | 'not-found'\n  | 'constraints-invalid'\n  | 'constraints-none-specified'\n  | 'undefined-mediadevices'\n  | 'unknown';\n\ntype DeviceState = 'granted' | 'in-use';\nexport interface StatefulDevice {\n  device: MediaDeviceInfo;\n  selected: boolean;\n  state: DeviceState;\n}\n\nexport const generalCameraState = atom<GeneralState>('idle');\ngeneralCameraState.debugLabel = jotaiDebugLabel('camera-state');\nexport const generalMicrophoneState = atom<GeneralState>('idle');\ngeneralMicrophoneState.debugLabel = jotaiDebugLabel('microphone-state');\nexport const cameraDevicesState = atom<StatefulDevice[]>([]);\ncameraDevicesState.debugLabel = jotaiDebugLabel('camera-devices');\nexport const microphoneDevicesState = atom<StatefulDevice[]>([]);\nmicrophoneDevicesState.debugLabel = jotaiDebugLabel('microphone-devices');\nexport const speakerDevicesState = atom<StatefulDevice[]>([]);\nspeakerDevicesState.debugLabel = jotaiDebugLabel('speaker-devices');\nexport const lastCameraErrorState =\n  atom<DailyCameraErrorObject<DailyCameraErrorType> | null>(null);\nlastCameraErrorState.debugLabel = jotaiDebugLabel('last-camera-error');\n\nexport const DailyDevices: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n\n  /**\n   * Refreshes list of available devices using enumerateDevices.\n   * Previous device states are kept in place, otherwise states are initialized as 'granted'.\n   */\n  const refreshDevices = useAtomCallback(\n    useCallback(\n      async (_get, set) => {\n        /**\n         * Check for legacy browsers.\n         */\n        if (\n          typeof navigator?.mediaDevices?.getUserMedia === 'undefined' ||\n          typeof navigator?.mediaDevices?.enumerateDevices === 'undefined'\n        ) {\n          set(generalCameraState, 'not-supported');\n          set(generalMicrophoneState, 'not-supported');\n          return;\n        }\n\n        if (!daily) return;\n\n        try {\n          const { devices } = await daily.enumerateDevices();\n          /**\n           * Filter out \"empty\" devices for when device access has not been granted (yet).\n           */\n          const cams = devices.filter(\n            (d) => d.kind === 'videoinput' && d.deviceId !== ''\n          );\n          const mics = devices.filter(\n            (d) => d.kind === 'audioinput' && d.deviceId !== ''\n          );\n          const speakers = devices.filter(\n            (d) => d.kind === 'audiooutput' && d.deviceId !== ''\n          );\n          const { camera, mic, speaker } = await daily.getInputDevices();\n\n          const mapDevice = (\n            device: {} | MediaDeviceInfo,\n            d: MediaDeviceInfo,\n            prevDevices: StatefulDevice[]\n          ) => ({\n            device: d,\n            selected: 'deviceId' in device && d.deviceId === device.deviceId,\n            state:\n              prevDevices.find((p) => p.device.deviceId === d.deviceId)\n                ?.state ?? 'granted',\n          });\n          const sortDeviceByLabel = (a: StatefulDevice, b: StatefulDevice) => {\n            if (a.device.deviceId === 'default') return -1;\n            if (b.device.deviceId === 'default') return 1;\n            if (a.device.label < b.device.label) return -1;\n            if (a.device.label > b.device.label) return 1;\n            return 0;\n          };\n\n          set(cameraDevicesState, (prevCams) =>\n            cams\n              .filter(Boolean)\n              .map<StatefulDevice>((d) => mapDevice(camera, d, prevCams))\n              .sort(sortDeviceByLabel)\n          );\n          set(microphoneDevicesState, (prevMics) =>\n            mics\n              .filter(Boolean)\n              .map<StatefulDevice>((d) => mapDevice(mic, d, prevMics))\n              .sort(sortDeviceByLabel)\n          );\n          set(speakerDevicesState, (prevSpeakers) =>\n            speakers\n              .filter(Boolean)\n              .map<StatefulDevice>((d) => mapDevice(speaker, d, prevSpeakers))\n              .sort(sortDeviceByLabel)\n          );\n        } catch (e) {\n          set(generalCameraState, 'not-supported');\n          set(generalMicrophoneState, 'not-supported');\n        }\n      },\n      [daily]\n    )\n  );\n\n  /**\n   * Updates general and specific device states, based on blocked status.\n   */\n  const updateDeviceStates = useAtomCallback(\n    useCallback(\n      async (get, set) => {\n        if (!daily) return;\n\n        const currentCamState = get(generalCameraState);\n        const currentMicState = get(generalMicrophoneState);\n\n        const participants = daily.participants();\n        // Guard against potentially uninitialized local participant\n        if (!participants.local) return;\n\n        const { tracks } = participants.local;\n\n        let camPermissionState: PermissionState = 'prompt';\n        let micPermissionState: PermissionState = 'prompt';\n        if (navigator.permissions) {\n          try {\n            const camPermission = await navigator.permissions.query({\n              // @ts-ignore\n              name: 'camera',\n            });\n            camPermissionState = camPermission.state;\n            const micPermission = await navigator.permissions.query({\n              // @ts-ignore\n              name: 'microphone',\n            });\n            micPermissionState = micPermission.state;\n          } catch {\n            // Permissions query not available\n          }\n        }\n\n        const awaitingCamAccess =\n          camPermissionState === 'prompt' &&\n          ['idle', 'pending'].includes(currentCamState) &&\n          tracks.video.state === 'interrupted' &&\n          !tracks.video.persistentTrack;\n        const initialCamOff =\n          ['idle', 'pending'].includes(currentCamState) &&\n          !tracks.video.persistentTrack &&\n          Boolean(tracks.video.off?.byUser);\n        const awaitingMicAccess =\n          micPermissionState === 'prompt' &&\n          ['idle', 'pending'].includes(currentMicState) &&\n          tracks.audio.state === 'interrupted' &&\n          !tracks.audio.persistentTrack;\n        const initialMicOff =\n          ['idle', 'pending'].includes(currentMicState) &&\n          !tracks.audio.persistentTrack &&\n          Boolean(tracks.audio.off?.byUser);\n\n        if (tracks.audio?.blocked?.byDeviceInUse) {\n          set(generalMicrophoneState, 'in-use');\n          set(microphoneDevicesState, (mics) =>\n            mics.map<StatefulDevice>((m) =>\n              m.selected ? { ...m, state: 'in-use' } : m\n            )\n          );\n        } else if (tracks.audio?.blocked?.byDeviceMissing) {\n          set(generalMicrophoneState, 'not-found');\n        } else if (\n          tracks.audio?.blocked?.byPermissions ||\n          micPermissionState === 'denied'\n        ) {\n          set(generalMicrophoneState, 'blocked');\n        } else if (awaitingMicAccess) {\n          set(generalMicrophoneState, 'pending');\n        } else if (initialMicOff) {\n          set(generalMicrophoneState, 'idle');\n        } else {\n          set(generalMicrophoneState, 'granted');\n          set(microphoneDevicesState, (mics) =>\n            mics.map<StatefulDevice>((m) =>\n              m.selected ? { ...m, state: 'granted' } : m\n            )\n          );\n        }\n\n        if (tracks.video?.blocked?.byDeviceInUse) {\n          set(generalCameraState, 'in-use');\n          set(cameraDevicesState, (cams) =>\n            cams.map<StatefulDevice>((m) =>\n              m.selected ? { ...m, state: 'in-use' } : m\n            )\n          );\n        } else if (tracks.video?.blocked?.byDeviceMissing) {\n          set(generalCameraState, 'not-found');\n        } else if (\n          tracks.video?.blocked?.byPermissions ||\n          camPermissionState === 'denied'\n        ) {\n          set(generalCameraState, 'blocked');\n        } else if (awaitingCamAccess) {\n          set(generalCameraState, 'pending');\n        } else if (initialCamOff) {\n          set(generalCameraState, 'idle');\n        } else {\n          set(generalCameraState, 'granted');\n          set(cameraDevicesState, (cams) =>\n            cams.map<StatefulDevice>((m) =>\n              m.selected ? { ...m, state: 'granted' } : m\n            )\n          );\n        }\n        refreshDevices();\n      },\n      [daily, refreshDevices]\n    )\n  );\n\n  useDailyEvent(\n    'participant-updated',\n    useCallback(\n      (ev) => {\n        if (!ev.participant.local) return;\n        updateDeviceStates();\n      },\n      [updateDeviceStates]\n    )\n  );\n\n  useDailyEvent('available-devices-updated', refreshDevices);\n  useDailyEvent('selected-devices-updated', refreshDevices);\n\n  useDailyEvent(\n    'camera-error',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(lastCameraErrorState, ev.error);\n        switch (ev.error?.type) {\n          case 'cam-in-use':\n            set(generalCameraState, 'in-use');\n            break;\n          case 'mic-in-use':\n            set(generalMicrophoneState, 'in-use');\n            break;\n          case 'cam-mic-in-use':\n            set(generalCameraState, 'in-use');\n            set(generalMicrophoneState, 'in-use');\n            break;\n          case 'not-found':\n            if (ev.error?.missingMedia.includes('video'))\n              set(generalCameraState, 'not-found');\n            if (ev.error?.missingMedia.includes('audio'))\n              set(generalMicrophoneState, 'not-found');\n            break;\n          case 'permissions':\n            if (ev.error?.blockedMedia.includes('video'))\n              set(generalCameraState, 'blocked');\n            if (ev.error?.blockedMedia.includes('audio'))\n              set(generalMicrophoneState, 'blocked');\n            break;\n          case 'constraints':\n            if (ev.error?.reason === 'invalid') {\n              set(generalCameraState, 'constraints-invalid');\n              set(generalMicrophoneState, 'constraints-invalid');\n            } else if (ev.error?.reason === 'none-specified') {\n              set(generalCameraState, 'constraints-none-specified');\n              set(generalMicrophoneState, 'constraints-none-specified');\n            }\n            break;\n          case 'undefined-mediadevices':\n            set(generalCameraState, 'undefined-mediadevices');\n            set(generalMicrophoneState, 'undefined-mediadevices');\n            break;\n          case 'unknown':\n          default:\n            set(generalCameraState, 'unknown');\n            set(generalMicrophoneState, 'unknown');\n            break;\n        }\n      }, [])\n    )\n  );\n\n  /**\n   * Update all device state, when camera is started.\n   */\n  useDailyEvent(\n    'started-camera',\n    useAtomCallback(\n      useCallback(\n        (_get, set) => {\n          set(generalCameraState, 'granted');\n          set(generalMicrophoneState, 'granted');\n          updateDeviceStates();\n        },\n        [updateDeviceStates]\n      )\n    )\n  );\n\n  return (\n    <DailyDevicesContext.Provider value={{ refreshDevices }}>\n      {children}\n    </DailyDevicesContext.Provider>\n  );\n};\n","import { DailyStreamingLayoutConfig } from '@daily-co/daily-js';\nimport { atom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport React, { useCallback } from 'react';\n\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { jotaiDebugLabel } from './lib/jotai-custom';\n\ninterface LiveStreamingState {\n  errorMsg?: string;\n  isLiveStreaming: boolean;\n  layout?: DailyStreamingLayoutConfig;\n}\n\nexport const liveStreamingState = atom<LiveStreamingState>({\n  errorMsg: undefined,\n  isLiveStreaming: false,\n  layout: undefined,\n});\nliveStreamingState.debugLabel = jotaiDebugLabel('live-streaming');\n\nexport const DailyLiveStreaming: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  useDailyEvent(\n    'live-streaming-started',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(liveStreamingState, {\n          isLiveStreaming: true,\n          layout: ev?.layout,\n        });\n      }, [])\n    )\n  );\n\n  useDailyEvent(\n    'live-streaming-stopped',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(liveStreamingState, (prevState) => ({\n          ...prevState,\n          isLiveStreaming: false,\n          layout: undefined,\n        }));\n      }, [])\n    )\n  );\n\n  useDailyEvent(\n    'live-streaming-error',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(liveStreamingState, (prevState: LiveStreamingState) => ({\n          ...prevState,\n          errorMsg: ev.errorMsg,\n        }));\n      }, [])\n    )\n  );\n\n  useDailyEvent(\n    'left-meeting',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(liveStreamingState, {\n          errorMsg: undefined,\n          isLiveStreaming: false,\n          layout: undefined,\n        });\n      }, [])\n    )\n  );\n\n  return <>{children}</>;\n};\n","import {\n  DailyEventObjectFatalError,\n  DailyEventObjectNonFatalError,\n  DailyMeetingSessionState,\n  DailyMeetingState,\n} from '@daily-co/daily-js';\nimport { atom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport React, { useCallback } from 'react';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { jotaiDebugLabel } from './lib/jotai-custom';\n\nexport const meetingStateState = atom<DailyMeetingState>('new');\nmeetingStateState.debugLabel = jotaiDebugLabel('meeting-state');\n\nexport const meetingErrorState = atom<DailyEventObjectFatalError | null>(null);\nmeetingErrorState.debugLabel = jotaiDebugLabel('meeting-error');\n\nexport const nonFatalErrorState = atom<DailyEventObjectNonFatalError | null>(\n  null\n);\nnonFatalErrorState.debugLabel = jotaiDebugLabel('non-fatal-error');\n\nexport const meetingSessionDataState = atom<DailyMeetingSessionState>({\n  data: undefined,\n  topology: 'none',\n});\nmeetingSessionDataState.debugLabel = jotaiDebugLabel('meeting-session-data');\n\nexport const DailyMeeting: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n\n  /**\n   * Updates meeting state.\n   */\n  const updateMeetingState = useAtomCallback(\n    useCallback(\n      (_get, set) => {\n        if (!daily) return;\n        const meetingState = daily.meetingState();\n        set(meetingStateState, meetingState);\n        return meetingState;\n      },\n      [daily]\n    )\n  );\n\n  useDailyEvent('loading', updateMeetingState);\n  useDailyEvent('loaded', updateMeetingState);\n  useDailyEvent('joining-meeting', updateMeetingState);\n  useDailyEvent('joined-meeting', updateMeetingState);\n  useDailyEvent('left-meeting', updateMeetingState);\n  useDailyEvent(\n    'error',\n    useAtomCallback(\n      useCallback(\n        (_get, set, ev) => {\n          set(meetingErrorState, ev);\n          updateMeetingState();\n        },\n        [updateMeetingState]\n      )\n    )\n  );\n  useDailyEvent(\n    'nonfatal-error',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(nonFatalErrorState, ev);\n      }, [])\n    )\n  );\n\n  /**\n   * Updates meeting session state.\n   */\n  const initMeetingSessionState = useAtomCallback(\n    useCallback(\n      (_get, set) => {\n        if (!daily) return;\n        set(meetingSessionDataState, daily.meetingSessionState());\n      },\n      [daily]\n    )\n  );\n\n  /**\n   * Initialize state when joined meeting or setting up the hook.\n   */\n  useDailyEvent('joined-meeting', initMeetingSessionState);\n\n  /**\n   * Update Jotai state whenever meeting session state is updated.\n   */\n  useDailyEvent(\n    'meeting-session-state-updated',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(meetingSessionDataState, ev.meetingSessionState);\n      }, [])\n    )\n  );\n\n  /**\n   * Reset Jotai state when meeting ends.\n   */\n  useDailyEvent(\n    'left-meeting',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(meetingSessionDataState, {\n          data: undefined,\n          topology: 'none',\n        });\n      }, [])\n    )\n  );\n\n  /**\n   * Reset Jotai state when call instance is destroyed.\n   */\n  useDailyEvent(\n    'call-instance-destroyed',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(meetingStateState, 'new');\n        set(meetingErrorState, null);\n        set(nonFatalErrorState, null);\n        set(meetingSessionDataState, {\n          data: undefined,\n          topology: 'none',\n        });\n      }, [])\n    )\n  );\n\n  return <>{children}</>;\n};\n","import { DailyNetworkStats, DailyNetworkTopology } from '@daily-co/daily-js';\nimport { atom, useAtomValue } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport React, { useCallback, useEffect } from 'react';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { jotaiDebugLabel } from './lib/jotai-custom';\n\nexport const topologyState = atom<DailyNetworkTopology | 'none'>('none');\ntopologyState.debugLabel = jotaiDebugLabel('topology');\nexport const networkQualityState = atom<DailyNetworkStats['quality']>(100);\nnetworkQualityState.debugLabel = jotaiDebugLabel('network-quality');\nexport const networkThresholdState =\n  atom<DailyNetworkStats['threshold']>('good');\nnetworkThresholdState.debugLabel = jotaiDebugLabel('network-threshold');\n\nexport const DailyNetwork: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n\n  const topology = useAtomValue(topologyState);\n\n  const initTopology = useAtomCallback(\n    useCallback(\n      async (_get, set) => {\n        if (!daily) return;\n        const topology = await daily.getNetworkTopology();\n        if (!topology || topology?.topology === 'none') return;\n        set(topologyState, topology.topology);\n      },\n      [daily]\n    )\n  );\n\n  useDailyEvent('joined-meeting', initTopology);\n  useDailyEvent(\n    'network-connection',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        switch (ev.event) {\n          case 'connected':\n            if (ev.type === 'peer-to-peer') set(topologyState, 'peer');\n            if (ev.type === 'sfu') set(topologyState, 'sfu');\n            break;\n        }\n      }, [])\n    )\n  );\n  useDailyEvent(\n    'network-quality-change',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(networkQualityState, (prevQuality: DailyNetworkStats['quality']) =>\n          prevQuality !== ev.quality ? ev.quality : prevQuality\n        );\n        set(\n          networkThresholdState,\n          (prevThreshold: DailyNetworkStats['threshold']) =>\n            prevThreshold !== ev.threshold ? ev.threshold : prevThreshold\n        );\n      }, [])\n    )\n  );\n\n  useDailyEvent(\n    'left-meeting',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(topologyState, 'none');\n        set(networkQualityState, 100);\n        set(networkThresholdState, 'good');\n      }, [])\n    )\n  );\n\n  useEffect(() => {\n    if (!daily || topology !== 'none') return;\n    initTopology();\n  }, [daily, initTopology, topology]);\n\n  return <>{children}</>;\n};\n","import { DailyStreamingLayoutConfig } from '@daily-co/daily-js';\nimport { atom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport React, { useCallback, useEffect } from 'react';\n\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { useLocalSessionId } from './hooks/useLocalSessionId';\nimport { useParticipantIds } from './hooks/useParticipantIds';\nimport { customDeepEqual } from './lib/customDeepEqual';\nimport { jotaiDebugLabel } from './lib/jotai-custom';\n\ninterface RecordingState {\n  /**\n   * Determines whether an error occurred during the last recording attempt.\n   */\n  error?: boolean;\n  /**\n   * Determines whether the local participant is being recorded, based on the recording settings.\n   */\n  isLocalParticipantRecorded: boolean;\n  /**\n   * Determines whether a recording is currently running or not.\n   */\n  isRecording: boolean;\n  /**\n   * Contains the last applied cloud recording layout config.\n   */\n  layout?: DailyStreamingLayoutConfig;\n  /**\n   * Determines whether the recording is running locally.\n   * See [enable_recording](https://docs.daily.co/reference/rest-api/rooms/config#enable_recording).\n   */\n  local?: boolean;\n  /**\n   * Contains the recording id.\n   */\n  recordingId?: string;\n  /**\n   * Contains the date when the 'recording-started' event was received.\n   * This doesn't necessarily match the date the recording was actually started.\n   */\n  recordingStartedDate?: Date;\n  /**\n   * Contains the session_id of the participant who started the recording.\n   */\n  startedBy?: string;\n  /**\n   * Contains the recording type.\n   * See [enable_recording](https://docs.daily.co/reference/rest-api/rooms/config#enable_recording).\n   */\n  type?: string;\n}\n\nexport const recordingState = atom<RecordingState>({\n  isLocalParticipantRecorded: false,\n  isRecording: false,\n});\nrecordingState.debugLabel = jotaiDebugLabel('recording-state');\n\nexport const DailyRecordings: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const localSessionId = useLocalSessionId();\n\n  const recordingParticipantIds = useParticipantIds({\n    filter: 'record',\n  });\n\n  const maybeUpdateRecordingState = useAtomCallback(\n    useCallback(\n      (\n        get,\n        set,\n        hasRecordingParticipants: boolean,\n        isLocalParticipantRecording: boolean\n      ) => {\n        const oldState = get(recordingState);\n        const s: RecordingState = {\n          isLocalParticipantRecorded: oldState.isLocalParticipantRecorded,\n          isRecording: oldState.isRecording,\n          local: oldState.local,\n          type: oldState.type,\n        };\n        const newState: RecordingState = {\n          // In case type is local or not set, determine based on recording participants\n          isLocalParticipantRecorded:\n            s?.type === 'local' || !s?.type\n              ? hasRecordingParticipants\n              : s.isLocalParticipantRecorded,\n          isRecording:\n            s?.type === 'local' || !s?.type\n              ? hasRecordingParticipants\n              : s.isRecording,\n          local:\n            (s?.type === 'local' || !s?.type) && hasRecordingParticipants\n              ? isLocalParticipantRecording\n              : s?.local,\n          /**\n           * Set type in case recording participants are detected.\n           * We only set `record` on participants, when recording type is 'local'.\n           */\n          type: hasRecordingParticipants ? 'local' : oldState?.type,\n        };\n\n        if (customDeepEqual(s, newState)) return;\n        set(recordingState, {\n          ...s,\n          ...newState,\n        });\n      },\n      []\n    )\n  );\n\n  /**\n   * Update recording state, whenever amount of recording participants changes.\n   */\n  useEffect(() => {\n    const hasRecordingParticipants = recordingParticipantIds.length > 0;\n    const isLocalParticipantRecording = recordingParticipantIds.includes(\n      localSessionId || 'local'\n    );\n    maybeUpdateRecordingState(\n      hasRecordingParticipants,\n      isLocalParticipantRecording\n    );\n  }, [localSessionId, maybeUpdateRecordingState, recordingParticipantIds]);\n\n  useDailyEvent(\n    'recording-started',\n    useAtomCallback(\n      useCallback(\n        (_get, set, ev) => {\n          let isLocalParticipantRecorded = true;\n          switch (ev.type) {\n            case 'cloud-beta':\n            case 'cloud': {\n              if (\n                localSessionId &&\n                ev.layout?.preset === 'single-participant' &&\n                ev.layout.session_id !== localSessionId\n              ) {\n                isLocalParticipantRecorded = false;\n              }\n              break;\n            }\n          }\n          set(recordingState, {\n            error: false,\n            isLocalParticipantRecorded,\n            isRecording: true,\n            layout: ev?.layout,\n            local: ev?.local,\n            recordingId: ev?.recordingId,\n            recordingStartedDate: new Date(),\n            startedBy: ev?.startedBy,\n            type: ev?.type,\n          });\n        },\n        [localSessionId]\n      )\n    )\n  );\n  useDailyEvent(\n    'recording-stopped',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(recordingState, (prevState) => ({\n          ...prevState,\n          isLocalParticipantRecorded: false,\n          isRecording: false,\n        }));\n      }, [])\n    )\n  );\n  useDailyEvent(\n    'recording-error',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(recordingState, (prevState: RecordingState) => ({\n          ...prevState,\n          error: true,\n          isLocalParticipantRecorded: false,\n          isRecording: false,\n        }));\n      }, [])\n    )\n  );\n  useDailyEvent(\n    'left-meeting',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(recordingState, {\n          isLocalParticipantRecorded: false,\n          isRecording: false,\n        });\n      }, [])\n    )\n  );\n  return <>{children}</>;\n};\n","import { DailyMeetingState } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useDebugValue } from 'react';\n\nimport { meetingStateState } from '../DailyMeeting';\n\n/**\n * Returns a meeting's current state.\n */\nexport const useMeetingState = (): DailyMeetingState | null => {\n  const meetingState = useAtomValue(meetingStateState);\n  useDebugValue(meetingState);\n  return meetingState;\n};\n","import { DailyRoomInfo } from '@daily-co/daily-js';\nimport { atom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport React, { useCallback } from 'react';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { useMeetingState } from './hooks/useMeetingState';\nimport { jotaiDebugLabel } from './lib/jotai-custom';\n\nexport const roomState = atom<DailyRoomInfo | null>(null);\nroomState.debugLabel = jotaiDebugLabel('room-state');\n\nexport const DailyRoom: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n  const meetingState = useMeetingState();\n\n  const updateRoom = useAtomCallback(\n    useCallback(\n      async (_get, set) => {\n        if (!daily || meetingState === 'left-meeting') return;\n        const room = await daily.room();\n        if (room && 'id' in room) {\n          set(roomState, room);\n        }\n        return room;\n      },\n      [daily, meetingState]\n    )\n  );\n\n  useDailyEvent('access-state-updated', updateRoom);\n\n  useDailyEvent(\n    'left-meeting',\n    useAtomCallback(\n      useCallback(\n        (_get, set) => () => {\n          set(roomState, null);\n        },\n        []\n      )\n    )\n  );\n\n  return <>{children}</>;\n};\n","import {\n  DailyEventObjectAppMessage,\n  DailyTranscriptionDeepgramOptions,\n} from '@daily-co/daily-js';\nimport { atom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport React, { useCallback } from 'react';\n\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { jotaiDebugLabel } from './lib/jotai-custom';\n\nexport interface Transcription {\n  session_id: string;\n  user_id: string;\n  text: string;\n  timestamp: string;\n  // Deprecated\n  is_final: boolean;\n}\n\ninterface TranscriptionState extends DailyTranscriptionDeepgramOptions {\n  /**\n   * Determines whether an error occurred during the last transcription attempt.\n   */\n  error?: boolean;\n  /**\n   * Determines whether a transcription is currently running or not.\n   */\n  isTranscribing: boolean;\n  /**\n   * Contains the date when the 'transcription-started' event was received.\n   * This doesn't necessarily match the date the transcription was actually started.\n   */\n  transcriptionStartDate?: Date;\n  /**\n   * Contains the session_id of the participant who started the transcription.\n   */\n  startedBy?: string;\n  /**\n   * Contains the session_id of the participant who updated the transcription.\n   */\n  updatedBy?: string;\n  /**\n   * Contains the transcriptions that we received.\n   */\n  transcriptions: Transcription[];\n}\n\nexport const transcriptionState = atom<TranscriptionState>({\n  isTranscribing: false,\n  model: 'general',\n  language: 'en',\n  transcriptions: [],\n});\ntranscriptionState.debugLabel = jotaiDebugLabel('transcription-state');\n\nexport const DailyTranscriptions: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  useDailyEvent(\n    'transcription-started',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(transcriptionState, {\n          error: false,\n          transcriptionStartDate: new Date(),\n          isTranscribing: true,\n          transcriptions: [],\n          endpointing: ev.endpointing,\n          extra: ev.extra,\n          includeRawResponse: ev.includeRawResponse,\n          instanceId: ev.instanceId,\n          language: ev.language,\n          model: ev.model,\n          profanity_filter: ev.profanity_filter,\n          punctuate: ev.punctuate,\n          redact: ev.redact,\n          startedBy: ev.startedBy,\n          tier: ev.tier,\n        });\n      }, [])\n    )\n  );\n  useDailyEvent(\n    'transcription-stopped',\n    useAtomCallback(\n      useCallback((_get, set, ev) => {\n        set(transcriptionState, (prevState: TranscriptionState) => ({\n          ...prevState,\n          updatedBy: ev.updatedBy,\n          isTranscribing: false,\n        }));\n      }, [])\n    )\n  );\n  useDailyEvent(\n    'transcription-error',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(transcriptionState, (prevState) => ({\n          ...prevState,\n          error: true,\n          isTranscribing: false,\n        }));\n      }, [])\n    )\n  );\n  useDailyEvent(\n    'left-meeting',\n    useAtomCallback(\n      useCallback((_get, set) => {\n        set(transcriptionState, (prevState) => ({\n          ...prevState,\n          isTranscribing: false,\n        }));\n      }, [])\n    )\n  );\n  useDailyEvent(\n    'app-message',\n    useAtomCallback(\n      useCallback(\n        (_get, set, ev: DailyEventObjectAppMessage<Transcription>) => {\n          if (ev?.fromId === 'transcription') {\n            set(transcriptionState, (prevState) => ({\n              ...prevState,\n              // setting it to true whenever a new message is received\n              // as the participants who joined after the transcription-started event\n              // won't be knowing if transcription is started or not\n              isTranscribing: true,\n              transcriptions: [...prevState.transcriptions, ev.data],\n            }));\n          }\n        },\n        []\n      )\n    )\n  );\n\n  return <>{children}</>;\n};\n","import Daily, { DailyCall, DailyFactoryOptions } from '@daily-co/daily-js';\nimport { MutableRefObject, useEffect, useRef, useState } from 'react';\n\nimport { customDeepEqual } from '../lib/customDeepEqual';\n\ntype InstanceType = 'callFrame' | 'callObject';\n\nconst defaultOptions: DailyFactoryOptions = {};\nconst defaultShouldCreateInstance = () => true;\n\nexport interface Props {\n  parentElRef?: MutableRefObject<HTMLElement>;\n  options?: DailyFactoryOptions;\n  shouldCreateInstance?(): boolean;\n}\n\nconst defaultProps: Props = {\n  options: defaultOptions,\n  shouldCreateInstance: defaultShouldCreateInstance,\n};\n\n/**\n * Helper hook to maintain custom call instances in React codebases.\n */\nexport const useCallInstance = (\n  type: InstanceType,\n  {\n    parentElRef,\n    options = defaultOptions,\n    shouldCreateInstance = defaultShouldCreateInstance,\n  }: Props = defaultProps\n) => {\n  const [callInstance, setCallInstance] = useState<DailyCall | null>(null);\n\n  /**\n   * Holds last used props when callObject instance was created.\n   */\n  const lastUsedOptions = useRef<DailyFactoryOptions>();\n  useEffect(() => {\n    /**\n     * Call frame instances with a defined parentEl likely pass a ref.\n     * Typically a DOM ref is initialized with useRef(null).\n     * We'll want to wait until parentEl is defined, meaning that the ref is\n     * correctly wired up with a DOM element.\n     * Otherwise we'll just check shouldCreateInstance().\n     */\n    if (\n      (type === 'callFrame' && parentElRef?.current === null) ||\n      !shouldCreateInstance()\n    )\n      return;\n\n    async function destroyCallInstance(co: DailyCall) {\n      await co.destroy();\n    }\n\n    /**\n     * Once instance is destroyed, nullify callInstance, so a new one can be created.\n     */\n    const handleDestroyedInstance = () => {\n      /**\n       * Setting a timeout makes sure the destruction and creation\n       * of call instances happen in separate call stacks.\n       * Otherwise there's a risk for duplicate call instances.\n       */\n      setTimeout(() => setCallInstance(null), 0);\n    };\n\n    let co = Daily.getCallInstance();\n\n    /**\n     * In case a call instance exists outside of this hook instance's knowledge,\n     * store it in state.\n     */\n    if (!callInstance && co && !co.isDestroyed()) {\n      co.once('call-instance-destroyed', handleDestroyedInstance);\n      setCallInstance(co);\n      return;\n    }\n\n    /**\n     * callInstance exists.\n     */\n    if (callInstance) {\n      /**\n       * Props have changed. Destroy current instance, so a new one can be created.\n       */\n      if (!customDeepEqual(lastUsedOptions.current, options)) {\n        destroyCallInstance(callInstance);\n      }\n      /**\n       * Return early.\n       */\n      return;\n    }\n\n    if (!co || co.isDestroyed()) {\n      /**\n       * callInstance doesn't exist or is destroyed (TODO: Check why getCallInstance() can return a destroyed instance),\n       * but should be created.\n       * Important to spread props, because createCallObject/createFrame alters the passed object (adds layout and dailyJsVersion).\n       */\n      switch (type) {\n        case 'callFrame':\n          co = parentElRef?.current\n            ? Daily.createFrame(parentElRef.current, { ...options })\n            : Daily.createFrame({ ...options });\n          break;\n        case 'callObject':\n          co = Daily.createCallObject({ ...options });\n          break;\n      }\n      lastUsedOptions.current = options;\n    }\n\n    setCallInstance(co);\n\n    co.once('call-instance-destroyed', handleDestroyedInstance);\n\n    /**\n     * No cleanup phase here, because callObject.destroy() returns a Promise.\n     * We can't have asynchronous cleanups in a useEffect.\n     * To avoid infinite render loops we compare the props when creating call object instances.\n     */\n  }, [callInstance, options, parentElRef, shouldCreateInstance, type]);\n\n  return callInstance;\n};\n","import { Props, useCallInstance } from './useCallInstance';\n\ntype CallObjectProps = Omit<Props, 'parentEl'>;\n\n/**\n * Helper hook to maintain custom callObject instances in React codebases.\n */\nexport const useCallObject = (props: CallObjectProps) =>\n  useCallInstance('callObject', props);\n","import {\n  DailyCall,\n  DailyEvent,\n  DailyEventObject,\n  DailyFactoryOptions,\n} from '@daily-co/daily-js';\n// Import Jotai Provider if you are using middleware that requires it\nimport { Provider } from 'jotai';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { DailyContext } from './DailyContext';\nimport { DailyDevices } from './DailyDevices';\nimport { DailyEventContext } from './DailyEventContext';\nimport { DailyLiveStreaming } from './DailyLiveStreaming';\nimport { DailyMeeting } from './DailyMeeting';\nimport { DailyNetwork } from './DailyNetwork';\nimport { DailyParticipants } from './DailyParticipants';\nimport { DailyRecordings } from './DailyRecordings';\nimport { DailyRoom } from './DailyRoom';\nimport { DailyTranscriptions } from './DailyTranscriptions';\nimport { useCallObject } from './hooks/useCallObject';\n\ntype BaseProps =\n  | DailyFactoryOptions\n  | {\n      callObject: DailyCall | null;\n    };\n\ntype Props = BaseProps & {\n  jotaiStore?: React.ComponentProps<typeof Provider>['store'];\n};\n\ntype EventsMap = Partial<Record<DailyEvent, Map<number, Function>>>;\n\nexport const DailyProvider: React.FC<React.PropsWithChildren<Props>> = ({\n  children,\n  jotaiStore,\n  ...props\n}) => {\n  const eventsMap = useRef<EventsMap>({});\n\n  /**\n   * Generic event handler to loop through registered event callbacks.\n   */\n  const handleEvent = useCallback((ev: DailyEventObject) => {\n    if (!('action' in ev)) return;\n    const event = ev.action as DailyEvent;\n    const allHandlers = Array.from(eventsMap.current?.[event] ?? []);\n    const priorityHandlers = allHandlers.filter(([key]) => key < 0);\n    const normalHandlers = allHandlers.filter(([key]) => key > 0);\n    const sortedHandlers = [...priorityHandlers, ...normalHandlers];\n    for (let [, cb] of sortedHandlers) {\n      cb(ev);\n    }\n  }, []);\n\n  /**\n   * In case events are set up via useDailyEvent before a DailyCall instance is available,\n   * we'll register the events whenever daily is set.\n   */\n  const initEventHandlers = useCallback(\n    (daily: DailyCall) => {\n      if (!daily) return;\n      (Object.keys(eventsMap.current) as DailyEvent[]).forEach((event) => {\n        daily.off(event as DailyEvent, handleEvent);\n        if (!daily.isDestroyed()) {\n          daily.on(event as DailyEvent, handleEvent);\n        }\n      });\n    },\n    [handleEvent]\n  );\n\n  const externalCallObject = 'callObject' in props ? props.callObject : null;\n\n  const memoizedOptions = useMemo(\n    () => ('callObject' in props ? {} : props),\n    [props]\n  );\n  const internalCallObject = useCallObject({\n    options: memoizedOptions,\n    shouldCreateInstance: useCallback(() => {\n      return !('callObject' in props);\n    }, [props]),\n  });\n\n  const callObject = externalCallObject ?? internalCallObject;\n\n  useEffect(() => {\n    if (!callObject) return;\n    initEventHandlers(callObject);\n  }, [callObject, initEventHandlers]);\n\n  /**\n   * Registers event callback.\n   */\n  const on = useCallback(\n    (ev: DailyEvent, cb: Function, key: number) => {\n      if (!eventsMap.current[ev]) {\n        eventsMap.current[ev] = new Map();\n        if (callObject) {\n          /**\n           * Make sure only 1 event listener is registered at any time for handleEvent.\n           * Otherwise, events sent from daily-js might be handled multiple times.\n           */\n          callObject.off(ev, handleEvent);\n          if (!callObject.isDestroyed()) {\n            callObject.on(ev, handleEvent);\n          }\n        }\n      }\n      if (!eventsMap.current[ev]?.has(key)) {\n        eventsMap.current[ev]?.set(key, cb);\n      }\n    },\n    [callObject, handleEvent]\n  );\n\n  /**\n   * Unregisters event callback.\n   */\n  const off = useCallback(\n    (ev: DailyEvent, key: number) => {\n      eventsMap.current[ev]?.delete(key);\n      if (eventsMap.current[ev]?.size === 0) {\n        callObject?.off(ev, handleEvent);\n        delete eventsMap.current[ev];\n      }\n    },\n    [callObject, handleEvent]\n  );\n\n  return (\n    <Provider store={jotaiStore}>\n      <DailyContext.Provider value={callObject}>\n        <DailyEventContext.Provider value={{ on, off }}>\n          <DailyRoom>\n            <DailyMeeting>\n              <DailyNetwork>\n                <DailyParticipants>\n                  <DailyRecordings>\n                    <DailyLiveStreaming>\n                      <DailyTranscriptions>\n                        <DailyDevices>{children}</DailyDevices>\n                      </DailyTranscriptions>\n                    </DailyLiveStreaming>\n                  </DailyRecordings>\n                </DailyParticipants>\n              </DailyNetwork>\n            </DailyMeeting>\n          </DailyRoom>\n        </DailyEventContext.Provider>\n      </DailyContext.Provider>\n    </Provider>\n  );\n};\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport { participantState } from '../DailyParticipants';\nimport { useThrottledDailyEvent } from './useThrottledDailyEvent';\n\ninterface UseParticipantArgs {\n  onParticipantLeft?(ev: DailyEventObject<'participant-left'>): void;\n  onParticipantUpdated?(ev: DailyEventObject<'participant-updated'>): void;\n}\n\n/**\n * Returns the participant identified by the given sessionId.\n * @param sessionId – The participant's session_id or \"local\".\n * @deprecated Use [useParticipantProperty](https://docs.daily.co/reference/daily-react/use-participant-property) instead to only subscribe to required participant properties.\n */\nexport const useParticipant = (\n  sessionId: string,\n  { onParticipantLeft, onParticipantUpdated }: UseParticipantArgs = {}\n) => {\n  const participant = useAtomValue(participantState(sessionId));\n\n  useThrottledDailyEvent(\n    ['participant-updated', 'participant-left'],\n    useCallback(\n      (evts) => {\n        const filteredEvts = evts.filter(\n          (ev) => ev.participant.session_id === sessionId\n        );\n        if (!filteredEvts.length) return;\n        filteredEvts.forEach((ev) => {\n          switch (ev.action) {\n            case 'participant-updated':\n              onParticipantUpdated?.(ev);\n              break;\n            case 'participant-left':\n              onParticipantLeft?.(ev);\n              break;\n          }\n        });\n      },\n      [onParticipantLeft, onParticipantUpdated, sessionId]\n    )\n  );\n\n  useDebugValue(participant);\n\n  return participant;\n};\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue, useEffect, useState } from 'react';\n\nimport { activeIdState } from '../DailyParticipants';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useParticipant } from './useParticipant';\n\ninterface UseActiveParticipantArgs {\n  /**\n   * If set to true, useActiveParticipant will never return the local participant.\n   */\n  ignoreLocal?: boolean;\n  /**\n   * Optional event callback for [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event listener.\n   */\n  onActiveSpeakerChange?(ev: DailyEventObject<'active-speaker-change'>): void;\n}\n\n/**\n * Returns the most recent participant mentioned in an [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\n * @deprecated Use [useActiveSpeakerId](https://docs.daily.co/reference/daily-react/use-active-speaker-id) instead.\n */\nexport const useActiveParticipant = ({\n  ignoreLocal = false,\n  onActiveSpeakerChange,\n}: UseActiveParticipantArgs = {}) => {\n  const daily = useDaily();\n  const recentActiveId = useAtomValue(activeIdState);\n  const [activeId, setActiveId] = useState('');\n  const activeParticipant = useParticipant(activeId);\n\n  useEffect(() => {\n    if (!daily) return;\n    const local = daily?.participants()?.local;\n    if (ignoreLocal && recentActiveId === local?.session_id) return;\n\n    // setting activeId as string to avoid passing null to useParticipant hook\n    setActiveId(recentActiveId ?? '');\n  }, [daily, ignoreLocal, recentActiveId]);\n\n  useDailyEvent(\n    'active-speaker-change',\n    useCallback(\n      (ev) => {\n        onActiveSpeakerChange?.(ev);\n      },\n      [onActiveSpeakerChange]\n    )\n  );\n\n  useDebugValue(activeParticipant);\n\n  return activeParticipant;\n};\n","import { DailyEventObjectAppMessage } from '@daily-co/daily-js';\nimport { useCallback } from 'react';\n\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype SendAppMessage<Data = any> = (data: Data, to?: string) => void;\n\ninterface UseAppMessageArgs<Data> {\n  /**\n   * Optional event callback for [app-message](https://docs.daily.co/reference/daily-js/events/participant-events#app-message) event listener.\n   * Receives this hook's sendAppMessage as an additional argument to avoid circular dependencies.\n   */\n  onAppMessage?(\n    ev: DailyEventObjectAppMessage<Data>,\n    sendAppMessage?: SendAppMessage<Data>\n  ): void;\n}\n\n/**\n * React hook to setup [app-message](https://docs.daily.co/reference/daily-js/events/participant-events#app-message) listeners and\n * to send messages via [sendAppMessage](https://docs.daily.co/reference/daily-js/instance-methods/send-app-message).\n */\nexport const useAppMessage = <Data = any>({\n  onAppMessage,\n}: UseAppMessageArgs<Data> = {}) => {\n  const daily = useDaily();\n\n  const sendAppMessage: SendAppMessage<Data> = useCallback(\n    (data, to = '*') => {\n      if (!daily) return;\n      daily.sendAppMessage(data, to);\n    },\n    [daily]\n  );\n\n  const handleAppMessage = useCallback(\n    (ev: DailyEventObjectAppMessage<Data>) => {\n      onAppMessage?.(ev, sendAppMessage);\n    },\n    [onAppMessage, sendAppMessage]\n  );\n\n  useDailyEvent('app-message', handleAppMessage);\n\n  return sendAppMessage;\n};\n","const audioLevelProcessor = `\n    class AudioLevelProcessor extends AudioWorkletProcessor {\n    volume;\n    interval;\n    nextFrame;\n    \n    constructor() {\n      super();\n      this.volume = 0;\n      this.interval = 25;\n      this.nextFrame = this.interval;\n    }\n    \n    get intervalInFrames() {\n      // sampleRate is globally defined in AudioWorklets.\n      // See https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletGlobalScope\n      // eslint-disable-next-line no-undef\n      return (this.interval / 1000) * sampleRate;\n    }\n    \n    process(inputList) {\n      const firstInput = inputList[0];\n    \n      if (firstInput.length > 0) {\n        const inputData = firstInput[0];\n        let total = 0;\n    \n        for (let i = 0; i < inputData.length; ++i) {\n          total += Math.abs(inputData[i]);\n        }\n    \n        const rms = Math.sqrt(total / inputData.length);\n        this.volume = Math.max(0, Math.min(1, rms));\n    \n        this.nextFrame -= inputData.length;\n        if (this.nextFrame < 0) {\n          this.nextFrame += this.intervalInFrames;\n          this.port.postMessage({ volume: this.volume });\n        }\n      }\n    \n      return true;\n    }\n    }\n    \n    registerProcessor('audiolevel', AudioLevelProcessor);              \n`;\n\nexport const inlineAudioWorklet = `data:application/javascript;charset=utf8,${encodeURIComponent(\n  audioLevelProcessor\n)}`;\n","import { useEffect, useRef } from 'react';\n\nimport { inlineAudioWorklet } from '../lib/inlineAudioWorklet';\n/**\n * Returns the volume level of a given MediaStreamTrack.\n * @param mediaTrack The MediaStreamTrack to be analysed.\n * @param onVolumeChange The function to execute when the volume changes. Can be used to visualise audio output.\n * @deprecated Use useAudioLevelObserver() instead.\n */\nexport const useAudioLevel = (\n  mediaTrack: MediaStreamTrack | undefined,\n  onVolumeChange: (volume: number) => void\n) => {\n  const audioCtx = useRef<AudioContext>();\n\n  useEffect(\n    function setupStreamAndStartProcessing() {\n      // No mediaTrack. Stop immediately.\n      if (!mediaTrack) return;\n      const AudioCtx =\n        typeof AudioContext !== 'undefined'\n          ? AudioContext\n          : typeof window.webkitAudioContext !== 'undefined'\n          ? window.webkitAudioContext\n          : null;\n      // No AudioContext available in browser. Can't measure audio volume.\n      if (!AudioCtx) return;\n      if (!audioCtx.current) {\n        // No audio context initialized. Initializing now.\n        audioCtx.current = new AudioCtx();\n      }\n      const audioContext = audioCtx.current;\n      // Audio context could not be initialized. Stopping.\n      if (!audioContext) return;\n\n      // No MediaStream API available (e.g. WebRTC disabled)\n      if (!MediaStream) return;\n\n      const mediaStreamSource = audioContext.createMediaStreamSource(\n        new MediaStream([mediaTrack])\n      );\n      let node: AudioWorkletNode | null;\n      let gainNode: GainNode;\n\n      const startProcessing = async () => {\n        /**\n         * Try to add the module only once.\n         * In case it's not added to the audio context, yet, trying to initialize it will fail.\n         * There's only one real reason for `new AudioWorkletNode` to fail and that is\n         * when the corresponding module isn't added to the audio context, yet.\n         * This makes sure we only add the module once.\n         *\n         * We're inlining the worklet instead of loading it via a URL as not to complicate bundling\n         * this package.\n         */\n        try {\n          node = new AudioWorkletNode(audioContext, 'audiolevel');\n          gainNode = audioContext.createGain();\n        } catch {\n          try {\n            await audioContext.audioWorklet.addModule(inlineAudioWorklet);\n            node = new AudioWorkletNode(audioContext, 'audiolevel');\n            gainNode = audioContext.createGain();\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!(node && gainNode)) return;\n\n        node.port.onmessage = (event) => {\n          let volume = 0;\n          if (event.data.volume) volume = event.data.volume;\n          if (!node) return;\n          onVolumeChange(volume);\n        };\n\n        gainNode.gain.value = 0;\n\n        try {\n          mediaStreamSource\n            .connect(node)\n            .connect(gainNode)\n            .connect(audioContext.destination);\n        } catch (e) {\n          console.warn(e);\n        }\n      };\n\n      startProcessing();\n\n      return () => {\n        node?.disconnect();\n        node = null;\n        mediaStreamSource?.disconnect();\n      };\n    },\n    [onVolumeChange, mediaTrack]\n  );\n};\n","import { useCallback, useEffect } from 'react';\n\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useLocalSessionId } from './useLocalSessionId';\n\ntype AudioLevelCallback = (volume: number) => void;\ntype ErrorCallback = (errorMsg: string) => void;\n\n/**\n * Observes the volume level for a given participant.\n * @param id The session_id of the participant to observe.\n * @param cb The function to execute when the volume changes. Can be used to visualise audio output.\n * @param errorCb Error callback. Called when local audio level observer is not available in browser.\n */\nexport const useAudioLevelObserver = (\n  id: string,\n  cb: AudioLevelCallback,\n  errorCb?: ErrorCallback\n) => {\n  const daily = useDaily();\n  const localSessionId = useLocalSessionId();\n  const isLocal = id === localSessionId;\n\n  useDailyEvent(\n    'local-audio-level',\n    useCallback(\n      (ev) => {\n        if (!isLocal) return;\n        cb(ev.audioLevel);\n      },\n      [cb, isLocal]\n    )\n  );\n\n  useDailyEvent(\n    'remote-participants-audio-level',\n    useCallback(\n      (ev) => {\n        if (isLocal) return;\n        cb(ev.participantsAudioLevel[id]);\n      },\n      [cb, id, isLocal]\n    )\n  );\n\n  useEffect(\n    function maybeStartLocalAudioObserver() {\n      if (!daily || daily.isDestroyed() || !isLocal) return;\n      if (daily.isLocalAudioLevelObserverRunning()) return;\n      try {\n        daily.startLocalAudioLevelObserver();\n      } catch {\n        errorCb?.('Local audio level observer not supported in this browser');\n      }\n    },\n    [daily, errorCb, isLocal]\n  );\n\n  useEffect(\n    function maybeStartRemoteAudioObserver() {\n      if (!daily || daily.isDestroyed() || isLocal) return;\n      if (daily.isRemoteParticipantsAudioLevelObserverRunning()) return;\n      daily.startRemoteParticipantsAudioLevelObserver();\n    },\n    [daily, isLocal]\n  );\n};\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's audio track and state.\n * @param participantId The participant's session_id.\n */\nexport const useAudioTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'audio');\n","import { useCallInstance } from './useCallInstance';\n\ntype Props = Parameters<typeof useCallInstance>[1];\n\n/**\n * Helper hook to maintain custom callFrame instances in React codebases.\n */\nexport const useCallFrame = (props: Props) =>\n  useCallInstance('callFrame', props);\n","import { DailyCpuLoadStats, DailyEventObject } from '@daily-co/daily-js';\nimport deepEqual from 'fast-deep-equal';\nimport { atom, useAtomValue } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport { useCallback, useDebugValue, useEffect } from 'react';\n\nimport { jotaiDebugLabel } from '../lib/jotai-custom';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useMeetingState } from './useMeetingState';\n\ninterface CPULoad {\n  state: DailyCpuLoadStats['cpuLoadState'];\n  reason: DailyCpuLoadStats['cpuLoadStateReason'];\n}\n\nconst CPULoadState = atom<CPULoad>({\n  state: 'low',\n  reason: 'none',\n});\nCPULoadState.debugLabel = jotaiDebugLabel('cpu-load');\n\ninterface Props {\n  onCPULoadChange?(ev: DailyEventObject<'cpu-load-change'>): void;\n}\n\n/**\n * Returns the current CPU load as reported by daily-js [cpu-load-change](https://docs.daily.co/reference/daily-js/events/quality-events#cpu-load-change) events\n * and [getCpuLoadStats](https://docs.daily.co/reference/daily-js/instance-methods/get-cpu-load-stats).\n */\nexport const useCPULoad = ({ onCPULoadChange }: Props = {}) => {\n  const cpu = useAtomValue(CPULoadState);\n  const daily = useDaily();\n  const meetingState = useMeetingState();\n\n  const updateCPULoadState = useAtomCallback(\n    useCallback((get, set, cpu: CPULoad) => {\n      const prev = get(CPULoadState); // Get the current CPU load state\n      if (deepEqual(prev, cpu)) return; // Check if the previous state is equal to the current one\n      set(CPULoadState, cpu); // Update the state if different\n    }, [])\n  );\n\n  useEffect(() => {\n    let mounted = true;\n    if (!daily || daily.isDestroyed() || meetingState !== 'joined-meeting')\n      return;\n    daily.getCpuLoadStats().then((stats) => {\n      if (!mounted) return;\n      updateCPULoadState({\n        state: stats.cpuLoadState,\n        reason: stats.cpuLoadStateReason,\n      });\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [daily, meetingState, updateCPULoadState]);\n\n  useDailyEvent(\n    'cpu-load-change',\n    useCallback(\n      (ev) => {\n        updateCPULoadState({\n          state: ev.cpuLoadState,\n          reason: ev.cpuLoadStateReason,\n        });\n        onCPULoadChange?.(ev);\n      },\n      [onCPULoadChange, updateCPULoadState]\n    )\n  );\n\n  useDebugValue(cpu);\n\n  return cpu;\n};\n","import { useAtomValue } from 'jotai';\nimport { useDebugValue } from 'react';\n\nimport { meetingErrorState, nonFatalErrorState } from '../DailyMeeting';\n\n/**\n * Returns a meeting's last known errors.\n */\nexport const useDailyError = () => {\n  const meetingError = useAtomValue(meetingErrorState);\n  const nonFatalError = useAtomValue(nonFatalErrorState);\n  const result = {\n    meetingError,\n    nonFatalError,\n  };\n  useDebugValue(result);\n  return result;\n};\n","import { useAtomValue } from 'jotai';\nimport { useCallback, useContext, useDebugValue } from 'react';\n\nimport {\n  cameraDevicesState,\n  generalCameraState,\n  generalMicrophoneState,\n  lastCameraErrorState,\n  microphoneDevicesState,\n  speakerDevicesState,\n} from '../DailyDevices';\nimport { DailyDevicesContext } from '../DailyDevicesContext';\nimport { useDaily } from './useDaily';\n\n/**\n * This hook allows access to information about the user's devices and their state.\n */\nexport const useDevices = () => {\n  const daily = useDaily();\n\n  const camState = useAtomValue(generalCameraState);\n  const micState = useAtomValue(generalMicrophoneState);\n  const camDevices = useAtomValue(cameraDevicesState);\n  const micDevices = useAtomValue(microphoneDevicesState);\n  const speakerDevices = useAtomValue(speakerDevicesState);\n  const cameraError = useAtomValue(lastCameraErrorState);\n\n  const { refreshDevices } = useContext(DailyDevicesContext);\n\n  /**\n   * Sets video input device to given deviceId.\n   */\n  const setCamera = useCallback(\n    async (deviceId: string) => {\n      await daily?.setInputDevicesAsync({\n        audioDeviceId: null,\n        videoDeviceId: deviceId,\n      });\n    },\n    [daily]\n  );\n\n  /**\n   * Sets audio input device to given deviceId.\n   */\n  const setMicrophone = useCallback(\n    async (deviceId: string) => {\n      await daily?.setInputDevicesAsync({\n        audioDeviceId: deviceId,\n        videoDeviceId: null,\n      });\n    },\n    [daily]\n  );\n\n  /**\n   * Sets audio output device to given deviceId.\n   */\n  const setSpeaker = useCallback(\n    async (deviceId: string) => {\n      await daily?.setOutputDeviceAsync({\n        outputDeviceId: deviceId,\n      });\n    },\n    [daily]\n  );\n\n  const errorStates: typeof camState[] = [\n    'blocked',\n    'in-use',\n    'not-found',\n    'constraints-invalid',\n    'constraints-none-specified',\n    'undefined-mediadevices',\n    'unknown',\n  ];\n\n  const result = {\n    /**\n     * Most recent error object emitted via [camera-error event](https://docs.daily.co/reference/daily-js/events/meeting-events#camera-error).\n     */\n    cameraError,\n    /**\n     * A list of the user's camera (videoinput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\n     */\n    cameras: camDevices,\n    /**\n     * The general state for camera access.\n     */\n    camState,\n    /**\n     * Holds the currently selected camera.\n     */\n    currentCam: camDevices.find((cam) => cam.selected),\n    /**\n     * Holds the currently selected microphone.\n     */\n    currentMic: micDevices.find((mic) => mic.selected),\n    /**\n     * Holds the currently selected speaker.\n     */\n    currentSpeaker: speakerDevices.find((speaker) => speaker.selected),\n    /**\n     * Indicates that there's an issue with camera devices.\n     */\n    hasCamError: errorStates.includes(camState),\n    /**\n     * Indicates that there's an issue with microphone devices.\n     */\n    hasMicError: errorStates.includes(micState),\n    /**\n     * A list of the user's microphone (audioinput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\n     */\n    microphones: micDevices,\n    /**\n     * The general state for microphone access.\n     */\n    micState,\n    /**\n     * Refreshes the list of devices using [enumerateDevices](https://docs.daily.co/reference/daily-js/instance-methods/enumerate-devices).\n     */\n    refreshDevices,\n    /**\n     * Allows to switch to the camera with the specified deviceId. Calls [setInputDevicesAsync](https://docs.daily.co/reference/daily-js/instance-methods/set-input-devices-async) internally.\n     */\n    setCamera,\n    /**\n     * Allows to switch to the microphone with the specified deviceId. Calls [setInputDevicesAsync](https://docs.daily.co/reference/daily-js/instance-methods/set-input-devices-async) internally.\n     */\n    setMicrophone,\n    /**\n     * Allows to switch to the speaker with the specified deviceId. Calls [setOutputDevice](https://docs.daily.co/reference/daily-js/instance-methods/set-output-device) internally.\n     */\n    setSpeaker,\n    /**\n     * A list of the user's speaker (audiooutput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\n     */\n    speakers: speakerDevices,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyEventObjectNonFatalError,\n  DailyInputSettings,\n} from '@daily-co/daily-js';\nimport { atom, useAtomValue } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport { useCallback, useDebugValue, useEffect } from 'react';\n\nimport { jotaiDebugLabel } from '../lib/jotai-custom';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDaily } from './useDaily';\nimport { useDailyError } from './useDailyError';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype DailyEventObjectInputSettingsError = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'input-settings-error'\n>;\n\ninterface UseInputSettingsArgs {\n  onError?(ev: DailyEventObjectInputSettingsError): void;\n  onInputSettingsUpdated?(ev: DailyEventObject<'input-settings-updated'>): void;\n}\n\nconst inputSettingsState = atom<DailyInputSettings | null>(null);\ninputSettingsState.debugLabel = jotaiDebugLabel('input-settings');\n\nexport const useInputSettings = ({\n  onError,\n  onInputSettingsUpdated,\n}: UseInputSettingsArgs = {}) => {\n  const inputSettings = useAtomValue(inputSettingsState);\n  const { nonFatalError } = useDailyError();\n  const daily = useDaily();\n\n  const updateInputSettingsState = useAtomCallback(\n    useCallback((_get, set, inputSettings: DailyInputSettings) => {\n      set(inputSettingsState, inputSettings);\n    }, [])\n  );\n\n  useEffect(() => {\n    if (!daily) return;\n    daily.getInputSettings().then(updateInputSettingsState);\n  }, [daily, updateInputSettingsState]);\n\n  /**\n   * Handle 'input-settings-updated' events.\n   */\n  useDailyEvent(\n    'input-settings-updated',\n    useCallback(\n      (ev) => {\n        updateInputSettingsState(ev.inputSettings);\n        onInputSettingsUpdated?.(ev);\n      },\n      [onInputSettingsUpdated, updateInputSettingsState]\n    )\n  );\n\n  /**\n   * Handle nonfatal errors of type 'input-settings-error'.\n   */\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'input-settings-error') return;\n        onError?.(ev as DailyEventObjectInputSettingsError);\n      },\n      [onError]\n    )\n  );\n\n  /**\n   * Calls daily.updateInputSettings internally.\n   */\n  const updateInputSettings = useCallback(\n    (...args: Parameters<DailyCall['updateInputSettings']>) => {\n      return daily?.updateInputSettings(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    errorMsg:\n      nonFatalError?.type === 'input-settings-error'\n        ? nonFatalError.errorMsg\n        : null,\n    inputSettings,\n    updateInputSettings,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyEventObjectNonFatalError,\n} from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport { liveStreamingState } from '../DailyLiveStreaming';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype DailyEventObjectLiveStreamingWarning = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'live-streaming-warning'\n>;\n\ninterface UseLiveStreamingArgs {\n  onLiveStreamingStarted?(ev: DailyEventObject<'live-streaming-started'>): void;\n  onLiveStreamingStopped?(ev: DailyEventObject<'live-streaming-stopped'>): void;\n  onLiveStreamingUpdated?(ev: DailyEventObject<'live-streaming-updated'>): void;\n  onLiveStreamingError?(ev: DailyEventObject<'live-streaming-error'>): void;\n  onLiveStreamingWarning?(ev: DailyEventObjectLiveStreamingWarning): void;\n}\n\n/**\n * This hook allows to setup [live streaming events](https://docs.daily.co/reference/daily-js/events/live-streaming-events),\n * as well as starting, stopping and updating live streams.\n *\n * Returns the current live streaming state, incl. the current layout and potential errorMsg.\n */\nexport const useLiveStreaming = ({\n  onLiveStreamingError,\n  onLiveStreamingStarted,\n  onLiveStreamingStopped,\n  onLiveStreamingUpdated,\n  onLiveStreamingWarning,\n}: UseLiveStreamingArgs = {}) => {\n  const daily = useDaily();\n  const state = useAtomValue(liveStreamingState);\n\n  useDailyEvent(\n    'live-streaming-started',\n    useCallback(\n      (ev) => {\n        onLiveStreamingStarted?.(ev);\n      },\n      [onLiveStreamingStarted]\n    )\n  );\n  useDailyEvent(\n    'live-streaming-stopped',\n    useCallback(\n      (ev) => {\n        onLiveStreamingStopped?.(ev);\n      },\n      [onLiveStreamingStopped]\n    )\n  );\n  useDailyEvent(\n    'live-streaming-updated',\n    useCallback(\n      (ev) => {\n        onLiveStreamingUpdated?.(ev);\n      },\n      [onLiveStreamingUpdated]\n    )\n  );\n  useDailyEvent(\n    'live-streaming-error',\n    useCallback(\n      (ev) => {\n        onLiveStreamingError?.(ev);\n      },\n      [onLiveStreamingError]\n    )\n  );\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'live-streaming-warning') return;\n        onLiveStreamingWarning?.(ev as DailyEventObjectLiveStreamingWarning);\n      },\n      [onLiveStreamingWarning]\n    )\n  );\n\n  const startLiveStreaming = useCallback(\n    (...args: Parameters<DailyCall['startLiveStreaming']>) => {\n      if (!daily) return;\n      daily.startLiveStreaming(...args);\n    },\n    [daily]\n  );\n\n  const stopLiveStreaming = useCallback(\n    (...args: Parameters<DailyCall['stopLiveStreaming']>) => {\n      if (!daily) return;\n      daily.stopLiveStreaming(...args);\n    },\n    [daily]\n  );\n\n  const updateLiveStreaming = useCallback(\n    (...args: Parameters<DailyCall['updateLiveStreaming']>) => {\n      if (!daily) return;\n      daily.updateLiveStreaming(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    ...state,\n    startLiveStreaming,\n    stopLiveStreaming,\n    updateLiveStreaming,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { useAtomValue } from 'jotai';\nimport { useDebugValue } from 'react';\n\nimport { localIdState } from '../DailyParticipants';\nimport { useParticipant } from './useParticipant';\n\n/**\n * Returns the [participants() object](https://docs.daily.co/reference/daily-js/instance-methods/participants) for the local user.\n * @deprecated Use [useLocalSessionId](https://docs.daily.co/reference/daily-react/use-local-session-id) instead.\n */\nexport const useLocalParticipant = (): ReturnType<typeof useParticipant> => {\n  const localId = useAtomValue(localIdState);\n  const localParticipant = useParticipant(localId);\n  useDebugValue(localParticipant);\n  return localParticipant;\n};\n","import { DailyEventObjectNonFatalError } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport { meetingSessionDataState } from '../DailyMeeting';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype DailyEventObjectMeetingSessionDataError = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'meeting-session-data-error'\n>;\n\ninterface Props {\n  onError?(ev: DailyEventObjectMeetingSessionDataError): void;\n}\n\n/**\n * Returns a meeting's current session data and topology.\n */\nexport const useMeetingSessionState = <T = any>({ onError }: Props = {}) => {\n  const meetingSessionState = useAtomValue(meetingSessionDataState);\n\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'meeting-session-data-error') return;\n        onError?.(ev as DailyEventObjectMeetingSessionDataError);\n      },\n      [onError]\n    )\n  );\n\n  const result = {\n    data: meetingSessionState?.data as T,\n    topology: meetingSessionState?.topology,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport {\n  networkQualityState,\n  networkThresholdState,\n  topologyState,\n} from '../DailyNetwork';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseNetworkArgs {\n  onNetworkConnection?(ev: DailyEventObject<'network-connection'>): void;\n  onNetworkQualityChange?(ev: DailyEventObject<'network-quality-change'>): void;\n}\n\n/**\n * Returns current information about network quality and topology.\n * Allows to setup event listeners for daily's [network events](https://docs.daily.co/reference/daily-js/events/network-events).\n */\nexport const useNetwork = ({\n  onNetworkConnection,\n  onNetworkQualityChange,\n}: UseNetworkArgs = {}) => {\n  const daily = useDaily();\n\n  const topology = useAtomValue(topologyState);\n  const quality = useAtomValue(networkQualityState);\n  const threshold = useAtomValue(networkThresholdState);\n\n  useDailyEvent(\n    'network-connection',\n    useCallback(\n      (ev) => {\n        onNetworkConnection?.(ev);\n      },\n      [onNetworkConnection]\n    )\n  );\n  useDailyEvent(\n    'network-quality-change',\n    useCallback(\n      (ev) => {\n        onNetworkQualityChange?.(ev);\n      },\n      [onNetworkQualityChange]\n    )\n  );\n\n  const getStats = useCallback(async () => {\n    const newStats = await daily?.getNetworkStats();\n    return newStats?.stats;\n  }, [daily]);\n\n  const result = {\n    getStats,\n    quality,\n    threshold,\n    topology,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyEventObject, DailyParticipantCounts } from '@daily-co/daily-js';\nimport { atom, useAtomValue } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport { useCallback, useDebugValue, useEffect } from 'react';\n\nimport { jotaiDebugLabel } from '../lib/jotai-custom';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\nconst participantCountsState = atom<DailyParticipantCounts>({\n  hidden: 0,\n  present: 0,\n});\nparticipantCountsState.debugLabel = jotaiDebugLabel('participant-counts');\n\ninterface Props {\n  onParticipantCountsUpdated?(\n    ev: DailyEventObject<'participant-counts-updated'>\n  ): void;\n}\n\n/**\n * Returns participant counts for hidden and present participants.\n */\nexport const useParticipantCounts = ({\n  onParticipantCountsUpdated,\n}: Props = {}) => {\n  const daily = useDaily();\n  const participantCounts = useAtomValue(participantCountsState);\n\n  const updateCounts = useAtomCallback(\n    useCallback((_get, set, counts: DailyParticipantCounts) => {\n      set(participantCountsState, counts);\n    }, [])\n  );\n\n  useDailyEvent(\n    'participant-counts-updated',\n    useCallback(\n      (ev) => {\n        updateCounts(ev.participantCounts);\n        onParticipantCountsUpdated?.(ev);\n      },\n      [onParticipantCountsUpdated, updateCounts]\n    )\n  );\n\n  useEffect(() => {\n    if (!daily || daily.isDestroyed()) return;\n    updateCounts(daily.participantCounts());\n  }, [daily, updateCounts]);\n\n  useDebugValue(participantCounts);\n\n  return participantCounts;\n};\n","import { useDebugValue } from 'react';\n\nimport { useLocalSessionId } from './useLocalSessionId';\nimport { useParticipantProperty } from './useParticipantProperty';\n\n/**\n * Returns parsed permissions for a given participant.\n * In case no `sessionId` is passed, the hook returns permissions for the local participant.\n * @param sessionId The participant's session_id (optional)\n */\nexport const usePermissions = (sessionId?: string) => {\n  const localSessionId = useLocalSessionId();\n  const permissions = useParticipantProperty(\n    sessionId ?? localSessionId,\n    'permissions'\n  );\n\n  const canSendAudio =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('audio'));\n  const canSendVideo =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('video'));\n  const canSendCustomAudio =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('customAudio'));\n  const canSendCustomVideo =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('customVideo'));\n  const canSendScreenAudio =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('screenAudio'));\n  const canSendScreenVideo =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('screenVideo'));\n  const canAdminParticipants =\n    typeof permissions?.canAdmin === 'boolean'\n      ? permissions?.canAdmin\n      : Boolean(permissions?.canAdmin?.has('participants'));\n  const canAdminStreaming =\n    typeof permissions?.canAdmin === 'boolean'\n      ? permissions?.canAdmin\n      : Boolean(permissions?.canAdmin?.has('streaming'));\n  const canAdminTranscription =\n    typeof permissions?.canAdmin === 'boolean'\n      ? permissions?.canAdmin\n      : Boolean(permissions?.canAdmin?.has('transcription'));\n\n  const result = {\n    canAdminParticipants,\n    canAdminStreaming,\n    canAdminTranscription,\n    canSendAudio,\n    canSendCustomAudio,\n    canSendCustomVideo,\n    canSendScreenAudio,\n    canSendScreenVideo,\n    canSendVideo,\n    hasPresence: permissions?.hasPresence,\n    permissions,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyReceiveSettings,\n  DailySingleParticipantReceiveSettings,\n} from '@daily-co/daily-js';\nimport { atom, Getter, Setter, useAtom, WritableAtom } from 'jotai';\nimport { useAtomCallback } from 'jotai/utils';\nimport { atomFamily } from 'jotai/utils';\nimport { useCallback, useDebugValue, useEffect } from 'react';\n\nimport { jotaiDebugLabel } from '../lib/jotai-custom';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useMeetingState } from './useMeetingState';\n\nconst participantReceiveSettingsState = atomFamily<\n  string,\n  WritableAtom<\n    DailySingleParticipantReceiveSettings,\n    [DailySingleParticipantReceiveSettings],\n    void\n  >\n>((id) => {\n  const participantReceiveSettingsAtom = atom<\n    DailySingleParticipantReceiveSettings,\n    [DailySingleParticipantReceiveSettings],\n    void\n  >({}, (_get, set, newValue) => {\n    set(participantReceiveSettingsState(id), newValue);\n  });\n  participantReceiveSettingsAtom.debugLabel = jotaiDebugLabel(\n    `participant-receive-settings-${id}`\n  );\n  return participantReceiveSettingsAtom;\n});\n\ninterface UseReceiveSettingsArgs {\n  id?: string;\n  onReceiveSettingsUpdated?(\n    ev: DailyEventObject<'receive-settings-updated'>\n  ): void;\n}\n\n/**\n * Allows to read and set receiveSettings.\n * In case receiveSettings for participant specified by id are empty, not set or 'inherit',\n * base receiveSettings will be returned.\n * In case meeting is not in joined state, calls to updateReceiveSettings will be silently ignored.\n */\nexport const useReceiveSettings = ({\n  id = 'base',\n  onReceiveSettingsUpdated,\n}: UseReceiveSettingsArgs = {}) => {\n  const [baseSettings] = useAtom(participantReceiveSettingsState('base'));\n  const [receiveSettings] = useAtom(participantReceiveSettingsState(id));\n  const daily = useDaily();\n  const meetingState = useMeetingState();\n\n  const updateReceiveSettingsState = useAtomCallback(\n    useCallback(\n      (_get: Getter, set: Setter, receiveSettings: DailyReceiveSettings) => {\n        const { ...ids } = receiveSettings;\n        for (let [id, settings] of Object.entries(ids)) {\n          set(participantReceiveSettingsState(id), settings);\n        }\n        if (!(id in ids)) {\n          participantReceiveSettingsState.remove(id);\n        }\n      },\n      [id] // Dependencies\n    )\n  );\n\n  useDailyEvent(\n    'receive-settings-updated',\n    useCallback(\n      (ev) => {\n        updateReceiveSettingsState(ev.receiveSettings);\n        onReceiveSettingsUpdated?.(ev);\n      },\n      [onReceiveSettingsUpdated, updateReceiveSettingsState]\n    )\n  );\n\n  useEffect(() => {\n    if (!daily || daily.isDestroyed()) return;\n    daily.getReceiveSettings().then(updateReceiveSettingsState);\n  }, [daily, updateReceiveSettingsState]);\n\n  const updateReceiveSettings = useCallback(\n    (...args: Parameters<DailyCall['updateReceiveSettings']>) => {\n      if (!daily || meetingState !== 'joined-meeting') return;\n      daily?.updateReceiveSettings?.(...args);\n    },\n    [daily, meetingState]\n  );\n\n  const result = {\n    receiveSettings:\n      id === 'base' || Object.keys(receiveSettings).length === 0\n        ? baseSettings\n        : receiveSettings,\n    updateReceiveSettings,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyCall, DailyEventObject } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport { recordingState } from '../DailyRecordings';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseRecordingArgs {\n  onRecordingData?(ev: DailyEventObject<'recording-data'>): void;\n  onRecordingError?(ev: DailyEventObject<'recording-error'>): void;\n  onRecordingStarted?(ev: DailyEventObject<'recording-started'>): void;\n  onRecordingStopped?(ev: DailyEventObject<'recording-stopped'>): void;\n}\n\nexport const useRecording = ({\n  onRecordingData,\n  onRecordingError,\n  onRecordingStarted,\n  onRecordingStopped,\n}: UseRecordingArgs = {}) => {\n  const daily = useDaily();\n  const state = useAtomValue(recordingState);\n\n  useDailyEvent(\n    'recording-started',\n    useCallback(\n      (ev) => {\n        onRecordingStarted?.(ev);\n      },\n      [onRecordingStarted]\n    )\n  );\n  useDailyEvent(\n    'recording-stopped',\n    useCallback(\n      (ev) => {\n        onRecordingStopped?.(ev);\n      },\n      [onRecordingStopped]\n    )\n  );\n  useDailyEvent(\n    'recording-error',\n    useCallback(\n      (ev) => {\n        onRecordingError?.(ev);\n      },\n      [onRecordingError]\n    )\n  );\n  useDailyEvent(\n    'recording-data',\n    useCallback(\n      (ev) => {\n        onRecordingData?.(ev);\n      },\n      [onRecordingData]\n    )\n  );\n\n  /**\n   * Starts the recording with the given optional options.\n   */\n  const startRecording = useCallback(\n    (...args: Parameters<DailyCall['startRecording']>) => {\n      if (!daily) return;\n      daily.startRecording(...args);\n    },\n    [daily]\n  );\n\n  /**\n   * Stops a recording.\n   */\n  const stopRecording = useCallback(\n    (...args: Parameters<DailyCall['stopRecording']>) => {\n      if (!daily) return;\n      daily.stopRecording(...args);\n    },\n    [daily]\n  );\n\n  /**\n   * Updates a running recording's layout configuration.\n   */\n  const updateRecording = useCallback(\n    (...args: Parameters<DailyCall['updateRecording']>) => {\n      if (!daily) return;\n      daily.updateRecording(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    ...state,\n    startRecording,\n    stopRecording,\n    updateRecording,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyRoomInfo } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useDebugValue } from 'react';\n\nimport { roomState } from '../DailyRoom';\n\n/**\n * Stateful hook to work with room, domain and token configuration for a daily room.\n * Includes room default values.\n */\nexport const useRoom = (): DailyRoomInfo | null => {\n  const room = useAtomValue(roomState);\n  useDebugValue(room);\n  return room;\n};\n","import { useAtomValue } from 'jotai';\nimport { useDebugValue, useEffect, useState } from 'react';\n\nimport { localJoinDateState } from '../DailyParticipants';\nimport { useRoom } from './useRoom';\n\ninterface Countdown {\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\ninterface Props {\n  onCountdown?(countdown: Countdown): void;\n}\n\nexport const useRoomExp = ({ onCountdown }: Props = {}) => {\n  const localJoinDate = useAtomValue(localJoinDateState);\n  const room = useRoom();\n\n  const [ejectDate, setEjectDate] = useState<Date | null>(null);\n\n  useEffect(() => {\n    const expCandidates: number[] = [];\n\n    const ejectAfterElapsed =\n      room?.tokenConfig?.eject_after_elapsed ??\n      room?.config?.eject_after_elapsed ??\n      0;\n\n    if (ejectAfterElapsed && localJoinDate) {\n      expCandidates.push(localJoinDate.getTime() + 1000 * ejectAfterElapsed);\n    }\n    if (room?.tokenConfig?.exp && room?.tokenConfig?.eject_at_token_exp) {\n      expCandidates.push(room.tokenConfig.exp * 1000);\n    }\n    if (room?.config?.exp && room?.config?.eject_at_room_exp) {\n      expCandidates.push(room.config.exp * 1000);\n    }\n\n    const newEjectDate =\n      expCandidates.length > 0\n        ? new Date(Math.min(...expCandidates))\n        : new Date(0);\n\n    if (newEjectDate.getTime() === 0) return;\n\n    setEjectDate((oldEjectDate) =>\n      oldEjectDate?.getTime() !== newEjectDate.getTime()\n        ? newEjectDate\n        : oldEjectDate\n    );\n  }, [\n    localJoinDate,\n    room?.config?.eject_after_elapsed,\n    room?.config?.eject_at_room_exp,\n    room?.config?.exp,\n    room?.tokenConfig?.eject_after_elapsed,\n    room?.tokenConfig?.eject_at_token_exp,\n    room?.tokenConfig?.exp,\n  ]);\n\n  useEffect(() => {\n    if (!ejectDate || ejectDate.getTime() === 0) return;\n\n    const interval = setInterval(() => {\n      const eject = (ejectDate?.getTime() ?? 0) / 1000;\n      const now = Date.now() / 1000;\n      const diff = eject - now;\n      if (diff < 0) return;\n      const hours = Math.max(0, Math.floor(diff / 3600));\n      const minutes = Math.max(0, Math.floor((diff % 3600) / 60));\n      const seconds = Math.max(0, Math.floor(diff % 60));\n      onCountdown?.({\n        hours,\n        minutes,\n        seconds,\n      });\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [ejectDate, onCountdown]);\n\n  const result = {\n    ejectDate,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's screenAudio track and state.\n * @param participantId The participant's session_id.\n */\nexport const useScreenAudioTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'screenAudio');\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's screenVideo track and state.\n * @param participantId The participant's session_id.\n */\nexport const useScreenVideoTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'screenVideo');\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailySendSettings,\n} from '@daily-co/daily-js';\nimport { atom, useAtom } from 'jotai';\nimport { useCallback, useDebugValue, useEffect } from 'react';\n\nimport { jotaiDebugLabel } from '../lib/jotai-custom';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\nconst sendSettingsState = atom<DailySendSettings | null>(null);\nsendSettingsState.debugLabel = jotaiDebugLabel('send-settings');\n\ninterface Props {\n  onSendSettingsUpdated?(ev: DailyEventObject<'send-settings-updated'>): void;\n}\n\n/**\n * Returns the current media send settings and an updater function to change the settings.\n */\nexport const useSendSettings = ({ onSendSettingsUpdated }: Props = {}) => {\n  const daily = useDaily();\n  const [sendSettings, setSendSettings] = useAtom(sendSettingsState);\n\n  useDailyEvent(\n    'send-settings-updated',\n    useCallback(\n      (ev: DailyEventObject<'send-settings-updated'>) => {\n        setSendSettings(ev.sendSettings);\n        onSendSettingsUpdated?.(ev);\n      },\n      [onSendSettingsUpdated, setSendSettings]\n    )\n  );\n\n  const storeSendSettings = useCallback(\n    (sendSettings: DailySendSettings | null) => {\n      setSendSettings(sendSettings);\n    },\n    [setSendSettings]\n  );\n\n  useEffect(() => {\n    if (!daily || daily.isDestroyed()) return;\n    storeSendSettings(daily.getSendSettings());\n  }, [daily, storeSendSettings]);\n\n  /**\n   * Updates the local clients send settings.\n   * See https://docs.daily.co/reference/daily-js/instance-methods/update-send-settings for details.\n   */\n  const updateSendSettings = useCallback(\n    async (...args: Parameters<DailyCall['updateSendSettings']>) => {\n      const newSendSettings = await daily?.updateSendSettings(...args);\n      if (!newSendSettings) return;\n      storeSendSettings(newSendSettings);\n      return newSendSettings;\n    },\n    [daily, storeSendSettings]\n  );\n\n  const result = {\n    sendSettings,\n    updateSendSettings,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyEventObjectAppMessage,\n} from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport { Transcription, transcriptionState } from '../DailyTranscriptions';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseTranscriptionArgs {\n  onTranscriptionStarted?(ev: DailyEventObject<'transcription-started'>): void;\n  onTranscriptionStopped?(ev: DailyEventObject<'transcription-stopped'>): void;\n  onTranscriptionError?(ev: DailyEventObject<'transcription-error'>): void;\n  /**\n   * @deprecated Please use onTranscriptionMessage instead.\n   */\n  onTranscriptionAppData?(ev: DailyEventObjectAppMessage<Transcription>): void;\n  onTranscriptionMessage?(ev: DailyEventObject<'transcription-message'>): void;\n}\n\nexport const useTranscription = ({\n  onTranscriptionAppData,\n  onTranscriptionError,\n  onTranscriptionMessage,\n  onTranscriptionStarted,\n  onTranscriptionStopped,\n}: UseTranscriptionArgs = {}) => {\n  const daily = useDaily();\n\n  const state = useAtomValue(transcriptionState);\n\n  useDailyEvent(\n    'transcription-started',\n    useCallback(\n      (ev) => {\n        onTranscriptionStarted?.(ev);\n      },\n      [onTranscriptionStarted]\n    )\n  );\n  useDailyEvent(\n    'transcription-stopped',\n    useCallback(\n      (ev) => {\n        onTranscriptionStopped?.(ev);\n      },\n      [onTranscriptionStopped]\n    )\n  );\n  useDailyEvent(\n    'transcription-error',\n    useCallback(\n      (ev) => {\n        onTranscriptionError?.(ev);\n      },\n      [onTranscriptionError]\n    )\n  );\n  useDailyEvent(\n    'transcription-message',\n    useCallback(\n      (ev) => {\n        onTranscriptionMessage?.(ev);\n      },\n      [onTranscriptionMessage]\n    )\n  );\n  useDailyEvent(\n    'app-message',\n    useCallback(\n      (ev: DailyEventObjectAppMessage<Transcription>) => {\n        if (ev?.fromId === 'transcription') {\n          onTranscriptionAppData?.(ev);\n        }\n      },\n      [onTranscriptionAppData]\n    )\n  );\n\n  /**\n   * Starts the transcription with the given optional options.\n   */\n  const startTranscription = useCallback(\n    (...args: Parameters<DailyCall['startTranscription']>) => {\n      if (!daily) return;\n      daily.startTranscription(...args);\n    },\n    [daily]\n  );\n\n  /**\n   * Stops a transcription.\n   */\n  const stopTranscription = useCallback(\n    (...args: Parameters<DailyCall['stopTranscription']>) => {\n      if (!daily) return;\n      daily.stopTranscription(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    ...state,\n    startTranscription,\n    stopTranscription,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's video track and state.\n * @param participantId The participant's session_id.\n */\nexport const useVideoTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'video');\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useAtomValue } from 'jotai';\nimport { useCallback, useDebugValue } from 'react';\n\nimport { allWaitingParticipantsSelector } from '../DailyParticipants';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseWaitingParticipantsArgs {\n  onWaitingParticipantAdded?(\n    ev: DailyEventObject<'waiting-participant-added'>\n  ): void;\n  onWaitingParticipantUpdated?(\n    ev: DailyEventObject<'waiting-participant-updated'>\n  ): void;\n  onWaitingParticipantRemoved?(\n    ev: DailyEventObject<'waiting-participant-removed'>\n  ): void;\n}\n\n/**\n * Hook to access and manage waiting participants.\n */\nexport const useWaitingParticipants = ({\n  onWaitingParticipantAdded,\n  onWaitingParticipantRemoved,\n  onWaitingParticipantUpdated,\n}: UseWaitingParticipantsArgs = {}) => {\n  const daily = useDaily();\n\n  const waitingParticipants = useAtomValue(\n    allWaitingParticipantsSelector(undefined)\n  );\n\n  useDailyEvent(\n    'waiting-participant-added',\n    useCallback(\n      (ev) => {\n        onWaitingParticipantAdded?.(ev);\n      },\n      [onWaitingParticipantAdded]\n    )\n  );\n  useDailyEvent(\n    'waiting-participant-removed',\n    useCallback(\n      (ev) => {\n        onWaitingParticipantRemoved?.(ev);\n      },\n      [onWaitingParticipantRemoved]\n    )\n  );\n  useDailyEvent(\n    'waiting-participant-updated',\n    useCallback(\n      (ev) => {\n        onWaitingParticipantUpdated?.(ev);\n      },\n      [onWaitingParticipantUpdated]\n    )\n  );\n\n  const updateWaitingParticipantAccess = useCallback(\n    (id: '*' | string, grantRequestedAccess: boolean) => {\n      if (id === '*') {\n        daily?.updateWaitingParticipants({\n          '*': {\n            grantRequestedAccess,\n          },\n        });\n        return;\n      }\n      daily?.updateWaitingParticipant(id, {\n        grantRequestedAccess,\n      });\n    },\n    [daily]\n  );\n\n  const grantAccess = useCallback(\n    (id: '*' | string) => {\n      updateWaitingParticipantAccess(id, true);\n    },\n    [updateWaitingParticipantAccess]\n  );\n\n  const denyAccess = useCallback(\n    (id: '*' | string) => {\n      updateWaitingParticipantAccess(id, false);\n    },\n    [updateWaitingParticipantAccess]\n  );\n\n  const result = {\n    waitingParticipants,\n    grantAccess,\n    denyAccess,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n"],"names":["DailyContext","createContext","useDaily","daily","useContext","useDebugValue","DailyEventContext","on","off","priorityCounter","getPriorityUnique","uniqueCounter","getUnique","useDailyEvent","ev","callback","INTERNAL_priority","_useContext","_useState","useState","isBlocked","setIsBlocked","reassignCount","useRef","eventId","useMemo","useEffect","current","console","error","timeout","setTimeout","clearTimeout","event","customDeepEqual","a","b","Array","isArray","length","i","MediaStream","id","active","getTracks","every","track","idx","MediaStreamTrack","kind","readyState","Date","getTime","RegExp","source","flags","Set","size","arrA","from","sort","arrB","val","Map","_iterator","_createForOfIteratorHelperLoose","entries","_step","done","_step$value","value","key","has","get","keysA","Object","keys","keysB","prototype","hasOwnProperty","call","arraysDeepEqual","valueA","valueB","isComplexTypeA","isComplexTypeB","jotaiDebugLabel","label","equalAtomFamily","options","atomCache","priorValues","param","baseAtom","atom","derivedValue","prior","equals","set","DELIM","PATHS_DELIM","getPropertyParam","property","getPropertiesParam","properties","join","getParticipantPropertyAtom","participantPropertyState","participantPropertyPathsState","atomFamily","participantPropertyPathsAtom","debugLabel","participantPropertyAtom","participantPropertiesState","_param$split","split","paths","map","path","useParticipantProperty","participantId","propertyPaths","useAtomValue","reduce","o","_ref","useThrottledDailyEvent","throttleTimeout","r","e","throttledEvents","useCallback","emitEvents","throttle","trailing","addEvent","push","forEach","getPaths","currentPath","visited","add","newPath","apply","concat","getParticipantPaths","p","resolvePath","participant","String","filter","resolveParticipantPaths","activeIdState","localIdState","localJoinDateState","participantIdsState","participantState","participantAtom","waitingParticipantsState","waitingParticipantState","waitingParticipantAtom","awaitingAccess","level","name","allWaitingParticipantsSelector","ids","DailyParticipants","children","initialized","setInitialized","initParticipants","useAtomCallback","_get","participants","local","session_id","participantsArray","values","_resolveParticipantPa","interval","setInterval","clearInterval","handleInitEvent","handleCleanup","remove","evts","action","activeSpeaker","peerId","prev","_extends","last_active","prevIds","includes","_resolveParticipantPa2","oldPaths","pathsChanged","some","oldPathSet","resolvedValues","wps","wp","React","useLocalSessionId","localId","noopFilter","useActiveSpeakerId","_temp","_ref$filter","_ref$ignoreLocal","ignoreLocal","localSessionId","recentActiveId","isIgnoredLocalId","isFilteredOut","isRecentIdRelevant","activeId","setActiveId","isTrackOff","trackState","SERIALIZABLE_DELIM","getParticipantIdsFilterSortParam","participantIdsFilteredAndSortedState","screenAudioState","screenVideoState","idA","idB","aSort","bSort","undefined","useParticipantIds","onActiveSpeakerChange","onParticipantJoined","onParticipantLeft","onParticipantUpdated","preFilteredSortedIds","shouldUseCustomIds","getCustomFilteredIds","Boolean","customIds","setCustomIds","maybeUpdateCustomIds","newIds","result","screenSharesState","screenIds","screenAudio","screenVideo","screenId","useScreenShare","onError","onLocalScreenShareStarted","onLocalScreenShareStopped","startScreenShare","args","_len","_key","arguments","stopScreenShare","_len2","_key2","type","screens","isSharingScreen","s","useMediaTrack","isOff","state","persistentTrack","subscribed","useMergedRef","refs","element","ref","DailyAudioTrack","memo","forwardRef","onPlayFailed","sessionId","_ref$type","props","_objectWithoutPropertiesLoose","_excluded","audioEl","audio","audioRef","subscribedState","audioTag","playTimeout","handleCanPlay","play","target","message","handlePlay","warn","addEventListener","srcObject","removeEventListener","autoPlay","displayName","DailyAudio","autoSubscribeActiveSpeaker","_ref$autoSubscribeAct","_ref$maxSpeakers","maxSpeakers","_ref$playLocalScreenA","playLocalScreenAudio","fill","speakers","setSpeakers","_useScreenShare","activeSpeakerId","containerRef","useImperativeHandle","getActiveSpeakerAudio","_containerRef$current","_containerRef$current2","querySelector","getAllAudio","_containerRef$current3","_containerRef$current4","querySelectorAll","getAudioBySessionId","_containerRef$current5","_containerRef$current6","getRmpAudio","_containerRef$current7","_containerRef$current8","getScreenAudio","_containerRef$current9","_containerRef$current10","getRmpAudioBySessionId","_containerRef$current11","_containerRef$current12","getScreenAudioBySessionId","_containerRef$current13","_containerRef$current14","assignSpeaker","_ref2","_asyncToGenerator","_set","subscribedParticipants","_daily$participants","tracks","isSubscribed","isDestroyed","subscribeToTracksAutomatically","updateParticipant","setSubscribedTracks","prevSpeakers","freeSlotCheck","findIndex","mutedIdx","speakerObjects","lastActiveA","lastActiveB","_get2","replaceIdx","indexOf","_speakerObjects$","_x","_x2","_x3","removeSpeaker","newSpeakers","rmpAudioIds","_p$tracks","rmpAudio","screen","DailyVideo","automirror","_ref$fit","fit","mirror","onResize","_ref$playableStyle","playableStyle","_ref$style","style","isLocal","isScreen","isLocalCam","videoEl","videoRef","videoState","videoTrack","isPlayable","isMirrored","videoTrackSettings","getSettings","isUsersFrontCamera","facingMode","setupVideoEvents","video","playVideo","promise","then","controls","paused","handleEnterPIP","transform","handleLeavePIP","handleVisibilityChange","document","visibilityState","updateSrcObject","load","reportVideoDimensions","frame","handleResize","cancelAnimationFrame","requestAnimationFrame","hidden","videoWidth","videoHeight","aspectRatio","height","width","muted","playsInline","objectFit","DailyDevicesContext","refreshDevices","Promise","resolve","generalCameraState","generalMicrophoneState","cameraDevicesState","microphoneDevicesState","speakerDevicesState","lastCameraErrorState","DailyDevices","_navigator","navigator","_navigator$mediaDevic","mediaDevices","getUserMedia","_navigator2","_navigator2$mediaDevi","enumerateDevices","_yield$daily$enumerat","devices","cams","d","deviceId","mics","_yield$daily$getInput","getInputDevices","camera","mic","speaker","mapDevice","device","prevDevices","_prevDevices$find$sta","_prevDevices$find","selected","find","sortDeviceByLabel","prevCams","prevMics","updateDeviceStates","_ref3","currentCamState","currentMicState","camPermissionState","micPermissionState","permissions","camPermission","query","micPermission","_unused","awaitingCamAccess","initialCamOff","_tracks$video$off","byUser","awaitingMicAccess","initialMicOff","_tracks$audio$off","_tracks$audio","_tracks$audio$blocked","blocked","byDeviceInUse","m","_tracks$audio2","_tracks$audio2$blocke","byDeviceMissing","_tracks$audio3","_tracks$audio3$blocke","byPermissions","_tracks$video","_tracks$video$blocked","_tracks$video2","_tracks$video2$blocke","_tracks$video3","_tracks$video3$blocke","_x4","_ev$error","_ev$error2","missingMedia","_ev$error3","_ev$error4","blockedMedia","_ev$error5","_ev$error6","reason","_ev$error7","Provider","liveStreamingState","errorMsg","isLiveStreaming","layout","DailyLiveStreaming","prevState","meetingStateState","meetingErrorState","nonFatalErrorState","meetingSessionDataState","data","topology","DailyMeeting","updateMeetingState","meetingState","initMeetingSessionState","meetingSessionState","topologyState","networkQualityState","networkThresholdState","DailyNetwork","initTopology","getNetworkTopology","prevQuality","quality","prevThreshold","threshold","recordingState","isLocalParticipantRecorded","isRecording","DailyRecordings","recordingParticipantIds","maybeUpdateRecordingState","hasRecordingParticipants","isLocalParticipantRecording","oldState","newState","_ev$layout","preset","recordingId","recordingStartedDate","startedBy","useMeetingState","roomState","DailyRoom","updateRoom","room","transcriptionState","isTranscribing","model","language","transcriptions","DailyTranscriptions","transcriptionStartDate","endpointing","extra","includeRawResponse","instanceId","profanity_filter","punctuate","redact","tier","updatedBy","fromId","defaultOptions","defaultShouldCreateInstance","defaultProps","shouldCreateInstance","useCallInstance","parentElRef","_ref$options","_ref$shouldCreateInst","callInstance","setCallInstance","lastUsedOptions","destroyCallInstance","_destroyCallInstance","co","destroy","handleDestroyedInstance","Daily","getCallInstance","once","createFrame","createCallObject","useCallObject","DailyProvider","jotaiStore","eventsMap","handleEvent","allHandlers","_eventsMap$current$ev","_eventsMap$current","priorityHandlers","normalHandlers","sortedHandlers","cb","initEventHandlers","externalCallObject","callObject","memoizedOptions","internalCallObject","_eventsMap$current$ev2","_eventsMap$current$ev3","_eventsMap$current$ev4","_eventsMap$current$ev5","store","useParticipant","filteredEvts","useActiveParticipant","activeParticipant","useAppMessage","onAppMessage","sendAppMessage","to","handleAppMessage","audioLevelProcessor","inlineAudioWorklet","encodeURIComponent","useAudioLevel","mediaTrack","onVolumeChange","audioCtx","setupStreamAndStartProcessing","AudioCtx","AudioContext","window","webkitAudioContext","audioContext","mediaStreamSource","createMediaStreamSource","node","gainNode","startProcessing","AudioWorkletNode","createGain","audioWorklet","addModule","port","onmessage","volume","gain","connect","destination","_node","disconnect","useAudioLevelObserver","errorCb","audioLevel","participantsAudioLevel","maybeStartLocalAudioObserver","isLocalAudioLevelObserverRunning","startLocalAudioLevelObserver","maybeStartRemoteAudioObserver","isRemoteParticipantsAudioLevelObserverRunning","startRemoteParticipantsAudioLevelObserver","useAudioTrack","useCallFrame","CPULoadState","useCPULoad","onCPULoadChange","cpu","updateCPULoadState","deepEqual","mounted","getCpuLoadStats","stats","cpuLoadState","cpuLoadStateReason","useDailyError","meetingError","nonFatalError","useDevices","camState","micState","camDevices","micDevices","speakerDevices","cameraError","setCamera","setInputDevicesAsync","audioDeviceId","videoDeviceId","setMicrophone","setSpeaker","setOutputDeviceAsync","outputDeviceId","errorStates","cameras","currentCam","cam","currentMic","currentSpeaker","hasCamError","hasMicError","microphones","inputSettingsState","useInputSettings","onInputSettingsUpdated","inputSettings","_useDailyError","updateInputSettingsState","getInputSettings","updateInputSettings","useLiveStreaming","onLiveStreamingError","onLiveStreamingStarted","onLiveStreamingStopped","onLiveStreamingUpdated","onLiveStreamingWarning","startLiveStreaming","stopLiveStreaming","updateLiveStreaming","useLocalParticipant","localParticipant","useMeetingSessionState","useNetwork","onNetworkConnection","onNetworkQualityChange","getStats","newStats","getNetworkStats","participantCountsState","present","useParticipantCounts","onParticipantCountsUpdated","participantCounts","updateCounts","counts","usePermissions","canSendAudio","canSend","_permissions$canSend","canSendVideo","_permissions$canSend2","canSendCustomAudio","_permissions$canSend3","canSendCustomVideo","_permissions$canSend4","canSendScreenAudio","_permissions$canSend5","canSendScreenVideo","_permissions$canSend6","canAdminParticipants","canAdmin","_permissions$canAdmin","canAdminStreaming","_permissions$canAdmin2","canAdminTranscription","_permissions$canAdmin3","hasPresence","participantReceiveSettingsState","participantReceiveSettingsAtom","newValue","useReceiveSettings","_ref$id","onReceiveSettingsUpdated","_useAtom","useAtom","baseSettings","_useAtom2","receiveSettings","updateReceiveSettingsState","_i","_Object$entries","_Object$entries$_i","settings","getReceiveSettings","updateReceiveSettings","useRecording","onRecordingData","onRecordingError","onRecordingStarted","onRecordingStopped","startRecording","stopRecording","updateRecording","useRoom","useRoomExp","onCountdown","localJoinDate","ejectDate","setEjectDate","expCandidates","ejectAfterElapsed","_room$tokenConfig$eje","_room$tokenConfig","tokenConfig","eject_after_elapsed","_room$config","config","_room$tokenConfig2","exp","_room$tokenConfig3","eject_at_token_exp","_room$config2","_room$config3","eject_at_room_exp","newEjectDate","Math","min","oldEjectDate","_room$config4","_room$config5","_room$config6","_room$tokenConfig4","_room$tokenConfig5","_room$tokenConfig6","eject","_ejectDate$getTime","now","diff","hours","max","floor","minutes","seconds","useScreenAudioTrack","useScreenVideoTrack","sendSettingsState","useSendSettings","onSendSettingsUpdated","sendSettings","setSendSettings","storeSendSettings","getSendSettings","updateSendSettings","newSendSettings","useTranscription","onTranscriptionAppData","onTranscriptionError","onTranscriptionMessage","onTranscriptionStarted","onTranscriptionStopped","startTranscription","stopTranscription","useVideoTrack","useWaitingParticipants","onWaitingParticipantAdded","onWaitingParticipantRemoved","onWaitingParticipantUpdated","waitingParticipants","updateWaitingParticipantAccess","grantRequestedAccess","updateWaitingParticipants","updateWaitingParticipant","grantAccess","denyAccess"],"mappings":"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"}