import { Static } from "@sinclair/typebox";
export declare const LinkedinCompanyProfileResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"CompanyProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    profile_url: import("@sinclair/typebox").TString;
    description: import("@sinclair/typebox").TString;
    messaging: import("@sinclair/typebox").TObject<{
        is_enabled: import("@sinclair/typebox").TBoolean;
        id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        entity_urn: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    public_identifier: import("@sinclair/typebox").TString;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    followers_count: import("@sinclair/typebox").TNumber;
    entity_urn: import("@sinclair/typebox").TString;
    tagline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    is_following: import("@sinclair/typebox").TBoolean;
    is_employee: import("@sinclair/typebox").TBoolean;
    default_locale: import("@sinclair/typebox").TString;
    viewer_permissions: import("@sinclair/typebox").TObject<{
        canMembersInviteToFollow: import("@sinclair/typebox").TBoolean;
        canReadContentSuggestions: import("@sinclair/typebox").TBoolean;
        canReadMessages: import("@sinclair/typebox").TBoolean;
        canUpdateOrganizationProfile: import("@sinclair/typebox").TBoolean;
        canCreateOrganicShare: import("@sinclair/typebox").TBoolean;
        canReadAdminDashboard: import("@sinclair/typebox").TBoolean;
        canReadOrganizationActivity: import("@sinclair/typebox").TBoolean;
        canEditCurators: import("@sinclair/typebox").TBoolean;
        canManageOrganizationalPageFollow: import("@sinclair/typebox").TBoolean;
        canReadOrganizationFollowerAnalytics: import("@sinclair/typebox").TBoolean;
        canInviteMemberToFollow: import("@sinclair/typebox").TBoolean;
        canReadOrganizationLeadsAnalytics: import("@sinclair/typebox").TBoolean;
        canEditPendingAdministrators: import("@sinclair/typebox").TBoolean;
        canManageMessagingAccess: import("@sinclair/typebox").TBoolean;
        canSeeEmployeeExperienceAsMember: import("@sinclair/typebox").TBoolean;
        canEmployeesInviteToFollow: import("@sinclair/typebox").TBoolean;
        canSeeOrganizationAdministrativePage: import("@sinclair/typebox").TBoolean;
    }>;
    organization_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"PUBLIC_COMPANY">, import("@sinclair/typebox").TLiteral<"EDUCATIONAL">, import("@sinclair/typebox").TLiteral<"SELF_EMPLOYED">, import("@sinclair/typebox").TLiteral<"GOVERNMENT_AGENCY">, import("@sinclair/typebox").TLiteral<"NON_PROFIT">, import("@sinclair/typebox").TLiteral<"SELF_OWNED">, import("@sinclair/typebox").TLiteral<"PRIVATELY_HELD">, import("@sinclair/typebox").TLiteral<"PARTNERSHIP">]>;
    locations: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        is_headquarter: import("@sinclair/typebox").TBoolean;
        country: import("@sinclair/typebox").TString;
        city: import("@sinclair/typebox").TString;
        postalCode: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        street: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
        description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        area: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>;
    logo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    localized_description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    localized_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    localized_tagline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    industry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    activities: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    employee_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    website: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    foundation_date: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    insights: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        employeesCount: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            totalCount: import("@sinclair/typebox").TNumber;
            averageTenure: import("@sinclair/typebox").TString;
            employeesCountGraph: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                date: import("@sinclair/typebox").TString;
                count: import("@sinclair/typebox").TNumber;
            }>>;
            growthGraph: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                monthRange: import("@sinclair/typebox").TNumber;
                growthPercentage: import("@sinclair/typebox").TNumber;
            }>>;
        }>>;
    }>>;
}>;
export type LinkedinCompanyProfileApiResponse = Static<typeof LinkedinCompanyProfileResponseSchema>;
/**  */
export declare const LinkedinCompanyProfileApiResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"CompanyProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    profile_url: import("@sinclair/typebox").TString;
    description: import("@sinclair/typebox").TString;
    messaging: import("@sinclair/typebox").TObject<{
        is_enabled: import("@sinclair/typebox").TBoolean;
        id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        entity_urn: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    public_identifier: import("@sinclair/typebox").TString;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    followers_count: import("@sinclair/typebox").TNumber;
    entity_urn: import("@sinclair/typebox").TString;
    tagline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    is_following: import("@sinclair/typebox").TBoolean;
    is_employee: import("@sinclair/typebox").TBoolean;
    default_locale: import("@sinclair/typebox").TString;
    viewer_permissions: import("@sinclair/typebox").TObject<{
        canMembersInviteToFollow: import("@sinclair/typebox").TBoolean;
        canReadContentSuggestions: import("@sinclair/typebox").TBoolean;
        canReadMessages: import("@sinclair/typebox").TBoolean;
        canUpdateOrganizationProfile: import("@sinclair/typebox").TBoolean;
        canCreateOrganicShare: import("@sinclair/typebox").TBoolean;
        canReadAdminDashboard: import("@sinclair/typebox").TBoolean;
        canReadOrganizationActivity: import("@sinclair/typebox").TBoolean;
        canEditCurators: import("@sinclair/typebox").TBoolean;
        canManageOrganizationalPageFollow: import("@sinclair/typebox").TBoolean;
        canReadOrganizationFollowerAnalytics: import("@sinclair/typebox").TBoolean;
        canInviteMemberToFollow: import("@sinclair/typebox").TBoolean;
        canReadOrganizationLeadsAnalytics: import("@sinclair/typebox").TBoolean;
        canEditPendingAdministrators: import("@sinclair/typebox").TBoolean;
        canManageMessagingAccess: import("@sinclair/typebox").TBoolean;
        canSeeEmployeeExperienceAsMember: import("@sinclair/typebox").TBoolean;
        canEmployeesInviteToFollow: import("@sinclair/typebox").TBoolean;
        canSeeOrganizationAdministrativePage: import("@sinclair/typebox").TBoolean;
    }>;
    organization_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"PUBLIC_COMPANY">, import("@sinclair/typebox").TLiteral<"EDUCATIONAL">, import("@sinclair/typebox").TLiteral<"SELF_EMPLOYED">, import("@sinclair/typebox").TLiteral<"GOVERNMENT_AGENCY">, import("@sinclair/typebox").TLiteral<"NON_PROFIT">, import("@sinclair/typebox").TLiteral<"SELF_OWNED">, import("@sinclair/typebox").TLiteral<"PRIVATELY_HELD">, import("@sinclair/typebox").TLiteral<"PARTNERSHIP">]>;
    locations: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        is_headquarter: import("@sinclair/typebox").TBoolean;
        country: import("@sinclair/typebox").TString;
        city: import("@sinclair/typebox").TString;
        postalCode: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        street: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
        description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        area: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>;
    logo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    localized_description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    localized_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    localized_tagline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    industry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    activities: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    employee_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    website: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    foundation_date: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    insights: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        employeesCount: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            totalCount: import("@sinclair/typebox").TNumber;
            averageTenure: import("@sinclair/typebox").TString;
            employeesCountGraph: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                date: import("@sinclair/typebox").TString;
                count: import("@sinclair/typebox").TNumber;
            }>>;
            growthGraph: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                monthRange: import("@sinclair/typebox").TNumber;
                growthPercentage: import("@sinclair/typebox").TNumber;
            }>>;
        }>>;
    }>>;
}>>;
