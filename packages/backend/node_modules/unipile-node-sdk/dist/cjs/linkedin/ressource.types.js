"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinkedinSearchResultSchema = exports.LinkedinPostSearchResultSchema = exports.LinkedinCompanySearchResultSchema = exports.LinkedinPeopleSearchResultSchema = exports.LinkedinSearchItemSchema = exports.LinkedinHiringProjectSchema = exports.LinkedinCompanyProfileSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const common_types_js_1 = require("../common/common.types.js");
const ressource_types_js_1 = require("../users/ressource.types.js");
exports.LinkedinCompanyProfileSchema = typebox_1.Type.Object({
    id: typebox_1.Type.String(),
    name: typebox_1.Type.String(),
    description: typebox_1.Type.String(),
    entity_urn: typebox_1.Type.String(),
    public_identifier: typebox_1.Type.String(),
    profile_url: typebox_1.Type.String(),
    tagline: typebox_1.Type.Optional(typebox_1.Type.String()),
    followers_count: typebox_1.Type.Number(),
    is_following: typebox_1.Type.Boolean(),
    is_employee: typebox_1.Type.Boolean(),
    messaging: typebox_1.Type.Object({
        is_enabled: typebox_1.Type.Boolean(),
        id: typebox_1.Type.Optional(typebox_1.Type.String()),
        entity_urn: typebox_1.Type.Optional(typebox_1.Type.String()),
    }),
    default_locale: typebox_1.Type.String(),
    viewer_permissions: typebox_1.Type.Object({
        canMembersInviteToFollow: typebox_1.Type.Boolean(),
        canReadContentSuggestions: typebox_1.Type.Boolean(),
        canReadMessages: typebox_1.Type.Boolean(),
        canUpdateOrganizationProfile: typebox_1.Type.Boolean(),
        canCreateOrganicShare: typebox_1.Type.Boolean(),
        canReadAdminDashboard: typebox_1.Type.Boolean(),
        canReadOrganizationActivity: typebox_1.Type.Boolean(),
        canEditCurators: typebox_1.Type.Boolean(),
        canManageOrganizationalPageFollow: typebox_1.Type.Boolean(),
        canReadOrganizationFollowerAnalytics: typebox_1.Type.Boolean(),
        canInviteMemberToFollow: typebox_1.Type.Boolean(),
        canReadOrganizationLeadsAnalytics: typebox_1.Type.Boolean(),
        canEditPendingAdministrators: typebox_1.Type.Boolean(),
        canManageMessagingAccess: typebox_1.Type.Boolean(),
        canSeeEmployeeExperienceAsMember: typebox_1.Type.Boolean(),
        canEmployeesInviteToFollow: typebox_1.Type.Boolean(),
        canSeeOrganizationAdministrativePage: typebox_1.Type.Boolean(),
    }),
    organization_type: typebox_1.Type.Union([
        typebox_1.Type.Literal('PUBLIC_COMPANY'),
        typebox_1.Type.Literal('EDUCATIONAL'),
        typebox_1.Type.Literal('SELF_EMPLOYED'),
        typebox_1.Type.Literal('GOVERNMENT_AGENCY'),
        typebox_1.Type.Literal('NON_PROFIT'),
        typebox_1.Type.Literal('SELF_OWNED'),
        typebox_1.Type.Literal('PRIVATELY_HELD'),
        typebox_1.Type.Literal('PARTNERSHIP'),
    ]),
    locations: typebox_1.Type.Array(typebox_1.Type.Object({
        is_headquarter: typebox_1.Type.Boolean(),
        country: typebox_1.Type.String(),
        city: typebox_1.Type.String(),
        postalCode: typebox_1.Type.Optional(typebox_1.Type.String()),
        street: typebox_1.Type.Array(typebox_1.Type.String()),
        description: typebox_1.Type.Optional(typebox_1.Type.String()),
        area: typebox_1.Type.Optional(typebox_1.Type.String()),
    })),
    logo: typebox_1.Type.Optional(typebox_1.Type.String()),
    localized_description: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.String(), {
        description: 'In this localized object, the key corresponds to the locale of the value e.g. fr_FR, en_US...',
    }))),
    localized_name: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.String(), {
        description: 'In this localized object, the key corresponds to the locale of the value e.g. fr_FR, en_US...',
    }))),
    localized_tagline: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.String(), {
        description: 'In this localized object, the key corresponds to the locale of the value e.g. fr_FR, en_US...',
    }))),
    industry: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())),
    activities: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())),
    employee_count: typebox_1.Type.Optional(typebox_1.Type.Number()),
    website: typebox_1.Type.Optional(typebox_1.Type.String()),
    foundation_date: typebox_1.Type.Optional(typebox_1.Type.String()),
    phone: typebox_1.Type.Optional(typebox_1.Type.String()),
    insights: typebox_1.Type.Optional(typebox_1.Type.Object({
        employeesCount: typebox_1.Type.Optional(typebox_1.Type.Object({
            totalCount: typebox_1.Type.Number(),
            averageTenure: typebox_1.Type.String(),
            employeesCountGraph: typebox_1.Type.Array(typebox_1.Type.Object({ date: typebox_1.Type.String(), count: typebox_1.Type.Number() })),
            growthGraph: typebox_1.Type.Array(typebox_1.Type.Object({
                monthRange: typebox_1.Type.Number(),
                growthPercentage: typebox_1.Type.Number(),
            })),
        })),
    })),
});
/**
 *
 */
exports.LinkedinHiringProjectSchema = typebox_1.Type.Object({
    id: typebox_1.Type.String(),
    name: typebox_1.Type.String(),
    owner_name: typebox_1.Type.String(),
    owner_id: typebox_1.Type.String(),
    created_at: typebox_1.Type.String(),
});
/**
 *
 */
exports.LinkedinSearchItemSchema = typebox_1.Type.Object({
    id: common_types_js_1.UniqueIdSchema,
    title: typebox_1.Type.String(),
    additional_data: typebox_1.Type.Optional(typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Number(), typebox_1.Type.Boolean()]))),
});
exports.LinkedinPeopleSearchResultSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('PEOPLE'),
    id: typebox_1.Type.String(),
    public_identifier: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    public_profile_url: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    profile_url: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    profile_picture_url: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    member_urn: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    name: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    first_name: typebox_1.Type.Optional(typebox_1.Type.String()),
    last_name: typebox_1.Type.Optional(typebox_1.Type.String()),
    network_distance: typebox_1.Type.Union([
        typebox_1.Type.Literal('DISTANCE_1'),
        typebox_1.Type.Literal('DISTANCE_2'),
        typebox_1.Type.Literal('DISTANCE_3'),
        typebox_1.Type.Literal('OUT_OF_NETWORK'),
    ]),
    location: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    industry: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    headline: typebox_1.Type.String(),
    connections_count: typebox_1.Type.Optional(typebox_1.Type.Number()),
    pending_invitation: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    can_send_inmail: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    recruiter_candidate_id: typebox_1.Type.Optional(typebox_1.Type.String()),
    premium: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    open_profile: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    shared_connections_count: typebox_1.Type.Optional(typebox_1.Type.Number()),
    last_outreach_activity: typebox_1.Type.Optional(typebox_1.Type.Object({
        type: typebox_1.Type.Union([typebox_1.Type.Literal('SEND_MESSAGE'), typebox_1.Type.Literal('ACCEPT_INVITATION')]),
        performed_at: typebox_1.Type.String(),
    })),
    current_positions: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.Object({
        company: typebox_1.Type.String(),
        company_id: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
        description: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
        role: typebox_1.Type.String(),
        location: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
        tenure_at_role: typebox_1.Type.Optional(typebox_1.Type.Object({
            years: typebox_1.Type.Optional(typebox_1.Type.Number()),
            months: typebox_1.Type.Optional(typebox_1.Type.Number()),
        })),
        tenure_at_company: typebox_1.Type.Optional(typebox_1.Type.Object({
            years: typebox_1.Type.Optional(typebox_1.Type.Number()),
            months: typebox_1.Type.Optional(typebox_1.Type.Number()),
        })),
        start: typebox_1.Type.Optional(typebox_1.Type.Object({
            year: typebox_1.Type.Optional(typebox_1.Type.Number()),
            month: typebox_1.Type.Optional(typebox_1.Type.Number()),
        })),
        end: typebox_1.Type.Optional(typebox_1.Type.Object({
            year: typebox_1.Type.Optional(typebox_1.Type.Number()),
            month: typebox_1.Type.Optional(typebox_1.Type.Number()),
        })),
    }))),
    education: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.Object({
        degree: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
        school: typebox_1.Type.String(),
        school_id: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
        start: typebox_1.Type.Object({
            year: typebox_1.Type.Optional(typebox_1.Type.Number()),
            month: typebox_1.Type.Optional(typebox_1.Type.Number()),
        }),
        end: typebox_1.Type.Optional(typebox_1.Type.Object({
            year: typebox_1.Type.Optional(typebox_1.Type.Number()),
            month: typebox_1.Type.Optional(typebox_1.Type.Number()),
        })),
    }))),
    work_experience: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.Object({
        company: typebox_1.Type.String(),
        company_id: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
        role: typebox_1.Type.String(),
        industry: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
        start: typebox_1.Type.Object({
            year: typebox_1.Type.Optional(typebox_1.Type.Number()),
            month: typebox_1.Type.Optional(typebox_1.Type.Number()),
        }),
        end: typebox_1.Type.Optional(typebox_1.Type.Object({
            year: typebox_1.Type.Optional(typebox_1.Type.Number()),
            month: typebox_1.Type.Optional(typebox_1.Type.Number()),
        })),
    }))),
});
exports.LinkedinCompanySearchResultSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('COMPANY'),
    id: typebox_1.Type.String(),
    name: typebox_1.Type.String(),
    location: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    profile_url: typebox_1.Type.String(),
    industry: typebox_1.Type.String(),
    summary: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    followers_count: typebox_1.Type.Optional(typebox_1.Type.Number()),
    job_offers_count: typebox_1.Type.Optional(typebox_1.Type.Number()),
    headcount: typebox_1.Type.Optional(typebox_1.Type.String()),
});
exports.LinkedinPostSearchResultSchema = typebox_1.Type.Composite([
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal('POST'),
    }),
    ressource_types_js_1.PostSchema,
]);
exports.LinkedinSearchResultSchema = typebox_1.Type.Union([
    exports.LinkedinPeopleSearchResultSchema,
    exports.LinkedinCompanySearchResultSchema,
    exports.LinkedinPostSearchResultSchema,
]);
