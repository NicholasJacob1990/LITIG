import { Static } from "@sinclair/typebox";
/**
 *
 */
export declare const FolderRoleSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
/**
 *
 */
export declare const FolderUnsyncedSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"UNSYNC">, import("@sinclair/typebox").TLiteral<"NEVER">]>;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
}>;
/**
 *
 */
export declare const FolderSyncedSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TLiteral<"SYNC">;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    last_synced: import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>;
}>;
/**
 *
 */
export declare const FolderSyncingSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TLiteral<"FETCHING">;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    offset: import("@sinclair/typebox").TNumber;
}>;
/**
 *
 */
export declare const FolderSyncErrorSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TLiteral<"ERROR">;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    offset: import("@sinclair/typebox").TNumber;
    error: import("@sinclair/typebox").TString;
    attempts: import("@sinclair/typebox").TNumber;
}>;
/**
 *
 */
export declare const FolderSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"UNSYNC">, import("@sinclair/typebox").TLiteral<"NEVER">]>;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
}>, import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TLiteral<"SYNC">;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    last_synced: import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>;
}>, import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TLiteral<"FETCHING">;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    offset: import("@sinclair/typebox").TNumber;
}>, import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    provider_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    status: import("@sinclair/typebox").TLiteral<"ERROR">;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    offset: import("@sinclair/typebox").TNumber;
    error: import("@sinclair/typebox").TString;
    attempts: import("@sinclair/typebox").TNumber;
}>]>;
export type Folder = Static<typeof FolderSchema>;
/**
 *
 */
export declare const FolderListApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"FolderList">;
    items: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Folder">;
    }>, import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        account_id: import("@sinclair/typebox").TString;
        role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
        nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        provider_id: import("@sinclair/typebox").TString;
    }>]>>;
}>;
/**
 *
 */
export type FolderListApiResponse = Static<typeof FolderListApiResponseSchema>;
/**
 *
 */
export declare const FolderListQuerySchema: import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type FolderListQuery = Static<typeof FolderListQuerySchema>;
/**
 *
 */
export declare const FolderListQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>>;
/**
 *
 */
export declare const FolderQuerySchema: import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
/**
 *
 */
export declare const FolderQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>>;
/**
 *
 */
export declare const FolderApiResponseSchema: import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"Folder">;
}>, import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    provider_id: import("@sinclair/typebox").TString;
}>]>;
/**
 *
 */
export type FolderApiResponse = Static<typeof FolderApiResponseSchema>;
/**  */
export declare const FolderListApiResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"FolderList">;
    items: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Folder">;
    }>, import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        account_id: import("@sinclair/typebox").TString;
        role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
        nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        provider_id: import("@sinclair/typebox").TString;
    }>]>>;
}>>;
/**  */
export declare const FolderApiResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"Folder">;
}>, import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    account_id: import("@sinclair/typebox").TString;
    role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inbox">, import("@sinclair/typebox").TLiteral<"sent">, import("@sinclair/typebox").TLiteral<"archive">, import("@sinclair/typebox").TLiteral<"drafts">, import("@sinclair/typebox").TLiteral<"trash">, import("@sinclair/typebox").TLiteral<"spam">, import("@sinclair/typebox").TLiteral<"all">, import("@sinclair/typebox").TLiteral<"important">, import("@sinclair/typebox").TLiteral<"starred">, import("@sinclair/typebox").TLiteral<"unknown">]>;
    nb_mails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    provider_id: import("@sinclair/typebox").TString;
}>]>>;
