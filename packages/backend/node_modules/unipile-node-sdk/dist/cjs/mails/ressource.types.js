"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartialMailSchema = exports.MailFullSchema = exports.MailMetaSchema = exports.BaseMailMetaSchema = exports.MailReferenceSchema = exports.MailAttachmentSchema = exports.MailSupportedAccountTypesSchema = exports.MailRole = void 0;
const typebox_1 = require("@sinclair/typebox");
const attendees_types_js_1 = require("../attendees/attendees.types.js");
const common_types_js_1 = require("../common/common.types.js");
const date_types_js_1 = require("../common/date.types.js");
const folders_types_js_1 = require("./folders/folders.types.js");
exports.MailRole = typebox_1.Type.Union([typebox_1.Type.Literal('inbox')]);
/**  */
exports.MailSupportedAccountTypesSchema = typebox_1.Type.Union([
    typebox_1.Type.Literal('MAIL'),
    typebox_1.Type.Literal('GOOGLE'),
    typebox_1.Type.Literal('ICLOUD'),
    typebox_1.Type.Literal('OUTLOOK'),
    typebox_1.Type.Literal('EXCHANGE'),
    typebox_1.Type.Literal('GOOGLE_OAUTH'),
]);
/**  */
exports.MailAttachmentSchema = typebox_1.Type.Object({
    id: typebox_1.Type.String(),
    name: typebox_1.Type.String(),
    size: typebox_1.Type.Number(),
    extension: typebox_1.Type.String(),
    mime: typebox_1.Type.String(),
    cid: typebox_1.Type.Optional(typebox_1.Type.String()),
});
/**  */
exports.MailReferenceSchema = typebox_1.Type.Object({
    id: common_types_js_1.UniqueIdSchema,
    kind: typebox_1.Type.Literal('0_ref'),
    account_id: common_types_js_1.UniqueIdSchema,
    type: exports.MailSupportedAccountTypesSchema,
    date: date_types_js_1.UTCDateTimeMsSchema,
    role: folders_types_js_1.FolderRoleSchema,
    folders: typebox_1.Type.Array(typebox_1.Type.String()),
    folderIds: typebox_1.Type.Array(typebox_1.Type.String()),
    read_date: typebox_1.Type.Optional(typebox_1.Type.Union([date_types_js_1.UTCDateTimeMsSchema, typebox_1.Type.Null()])),
    message_id: typebox_1.Type.String(),
    provider_id: typebox_1.Type.String(),
});
/** */
exports.BaseMailMetaSchema = typebox_1.Type.Composite([
    typebox_1.Type.Omit(exports.MailReferenceSchema, ['kind']),
    typebox_1.Type.Object({
        //   id: UniqueIdSchema,
        //   account_id: UniqueIdSchema,
        //   date: UTCDateTimeMsSchema,
        kind: typebox_1.Type.Literal('1_meta'),
        body_plain: typebox_1.Type.Literal(''),
        body: typebox_1.Type.Literal(''),
        from_attendee: attendees_types_js_1.AttendeeSchema,
        to_attendees: typebox_1.Type.Optional(typebox_1.Type.Array(attendees_types_js_1.AttendeeSchema)),
        cc_attendees: typebox_1.Type.Optional(typebox_1.Type.Array(attendees_types_js_1.AttendeeSchema)),
        bcc_attendees: typebox_1.Type.Optional(typebox_1.Type.Array(attendees_types_js_1.AttendeeSchema)),
        reply_to_attendees: typebox_1.Type.Optional(typebox_1.Type.Array(attendees_types_js_1.AttendeeSchema)),
        subject: typebox_1.Type.String(),
        has_attachments: typebox_1.Type.Boolean(),
        // is_complete: Type.Boolean(),
        origin: typebox_1.Type.Union([typebox_1.Type.Literal('unipile'), typebox_1.Type.Literal('external')]),
        in_reply_to: typebox_1.Type.Optional(typebox_1.Type.Object({ message_id: typebox_1.Type.String(), id: common_types_js_1.UniqueIdSchema })),
        tracking_id: typebox_1.Type.Optional(typebox_1.Type.String()),
        thread_id: typebox_1.Type.Optional(typebox_1.Type.String()),
        attachments: typebox_1.Type.Array(exports.MailAttachmentSchema),
    }),
]);
exports.MailMetaSchema = typebox_1.Type.Composite([
    exports.BaseMailMetaSchema,
    typebox_1.Type.Object({
        parent_mail: typebox_1.Type.Optional(exports.BaseMailMetaSchema),
    }),
]);
/** */
exports.MailFullSchema = typebox_1.Type.Composite([
    typebox_1.Type.Omit(exports.BaseMailMetaSchema, ['kind', 'body', 'body_plain']),
    typebox_1.Type.Object({
        //   id: UniqueIdSchema,
        //   account_id: UniqueIdSchema,
        //   date: UTCDateTimeMsSchema,
        kind: typebox_1.Type.Literal('2_full'),
        body_plain: typebox_1.Type.String(),
        body: typebox_1.Type.String(),
        headers: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.Object({ name: typebox_1.Type.String(), value: typebox_1.Type.String() }))),
    }),
]);
/** */
exports.PartialMailSchema = typebox_1.Type.Union([
    exports.MailReferenceSchema,
    exports.MailMetaSchema,
    exports.MailFullSchema,
]);
