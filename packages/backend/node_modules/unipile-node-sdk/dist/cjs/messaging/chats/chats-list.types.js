"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatListApiResponseValidator = exports.ChatListResponseSchema = exports.ChatListQueryValidator = exports.ChatListQuerySchema = exports.ChatListBaseQuerySchema = exports.ChatListDecodedCursorValidator = exports.ChatListDecodedCursorSchema = exports.ChatListOptionsQuerySchema = exports.DEFAULT_CHAT_LIST_LIMIT = void 0;
const typebox_1 = require("@sinclair/typebox");
const compiler_1 = require("@sinclair/typebox/compiler");
const common_types_js_1 = require("../../common/common.types.js");
const date_types_js_1 = require("../../common/date.types.js");
const query_cursor_js_1 = require("../../common/query-cursor.js");
const query_parameters_type_js_1 = require("../../common/query-parameters.type.js");
const messaging_types_js_1 = require("../messaging.types.js");
const ressource_types_js_1 = require("./ressource.types.js");
// --------------------------------------------------------------------------
// REQUEST
// --------------------------------------------------------------------------
exports.DEFAULT_CHAT_LIST_LIMIT = 100;
/**
 *
 */
exports.ChatListOptionsQuerySchema = typebox_1.Type.Object({
    account_id: typebox_1.Type.Optional(typebox_1.Type.Array(query_parameters_type_js_1.AccountIdParamSchema)),
    account_type: typebox_1.Type.Optional(messaging_types_js_1.MessagingAccountTypeSchema),
    after: typebox_1.Type.Optional(date_types_js_1.UTCDateTimeMsSchema),
    before: typebox_1.Type.Optional(date_types_js_1.UTCDateTimeMsSchema),
    unread: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
});
/**
 *
 */
exports.ChatListDecodedCursorSchema = typebox_1.Type.Composite([
    exports.ChatListOptionsQuerySchema,
    typebox_1.Type.Required(query_parameters_type_js_1.ListLimitQuerySchema),
    typebox_1.Type.Object({
        cursor: typebox_1.Type.Object({
            last_id: common_types_js_1.UniqueIdSchema,
            last_date: date_types_js_1.UTCDateTimeMsSchema,
        }),
    }),
]);
exports.ChatListDecodedCursorValidator = compiler_1.TypeCompiler.Compile(exports.ChatListDecodedCursorSchema);
/**
 *
 */
exports.ChatListBaseQuerySchema = typebox_1.Type.Composite([
    exports.ChatListOptionsQuerySchema,
    query_parameters_type_js_1.ListLimitQuerySchema,
]);
/**
 *
 */
exports.ChatListQuerySchema = typebox_1.Type.Union([
    exports.ChatListBaseQuerySchema,
    query_parameters_type_js_1.ListCursorQuerySchema,
]);
// /**
//  *
//  */
// export const getChatListQueryOpenApiSchema =
//   makeOpenApiSchemaGetter(ChatListQuerySchema);
/**
 *
 */
exports.ChatListQueryValidator = compiler_1.TypeCompiler.Compile(exports.ChatListQuerySchema);
// --------------------------------------------------------------------------
// RESPONSE
// --------------------------------------------------------------------------
/**
 *
 */
exports.ChatListResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal("ChatList"),
    items: typebox_1.Type.Array(typebox_1.Type.Composite([typebox_1.Type.Object({ object: typebox_1.Type.Literal("Chat") }), ressource_types_js_1.ChatSchema])),
    cursor: typebox_1.Type.Union([(0, query_cursor_js_1.EncodedQueryCursorType)(), typebox_1.Type.Null()]),
});
// export const getChatListResponseOpenApiSchema = makeOpenApiSchemaGetter(
//   ChatListResponseSchema
// );
/**  */
exports.ChatListApiResponseValidator = compiler_1.TypeCompiler.Compile(exports.ChatListResponseSchema);
