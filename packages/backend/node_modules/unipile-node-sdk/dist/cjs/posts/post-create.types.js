"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreatePostResponseValidator = exports.CreatePostResponseSchema = exports.CreatePostBodyValidator = exports.CreatePostBodySchema = exports.CreatePostOptionsSchema = exports.CreatePostTwitterOptionsSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const compiler_1 = require("@sinclair/typebox/compiler");
// --------------------------------------------------------------------------
// REQUEST
// --------------------------------------------------------------------------
exports.CreatePostTwitterOptionsSchema = typebox_1.Type.Object({
    reply_policy: typebox_1.Type.Optional(typebox_1.Type.Union([
        typebox_1.Type.Literal("EVERYONE"),
        typebox_1.Type.Literal("FOLLOWING"),
        typebox_1.Type.Literal("MENTIONED"),
        typebox_1.Type.Literal("VERIFIED"),
    ])),
    in_reply_to: typebox_1.Type.Optional(typebox_1.Type.String({ minLength: 1 })),
});
exports.CreatePostOptionsSchema = typebox_1.Type.Union([
    exports.CreatePostTwitterOptionsSchema
]);
exports.CreatePostBodySchema = typebox_1.Type.Object({
    account_id: typebox_1.Type.String({
        description: "The id of the account to perform the request from.",
        minLength: 1,
    }),
    text: typebox_1.Type.String({
        minLength: 1,
    }),
    attachments: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String({ format: "binary" }))),
    // options: Type.Optional(CreatePostOptionsSchema),
});
exports.CreatePostBodyValidator = compiler_1.TypeCompiler.Compile(exports.CreatePostBodySchema);
// --------------------------------------------------------------------------
// RESPONSE
// --------------------------------------------------------------------------
exports.CreatePostResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal("PostCreated")
});
// /**
//  *
//  */
// export const getCreatePostResponseOpenApiSchema = makeOpenApiSchemaGetter(
//   CreatePostResponseSchema
// );
/**  */
exports.CreatePostResponseValidator = compiler_1.TypeCompiler.Compile(exports.CreatePostResponseSchema);
