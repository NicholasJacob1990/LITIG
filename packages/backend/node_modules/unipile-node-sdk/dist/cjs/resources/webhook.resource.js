"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookResource = void 0;
const webhooks_create_types_js_1 = require("../webhooks/webhooks-create.types.js");
const webhooks_delete_types_js_1 = require("../webhooks/webhooks-delete.types.js");
const webhooks_list_types_js_1 = require("../webhooks/webhooks-list.types.js");
class WebhookResource {
    constructor(client) {
        this.client = client;
    }
    getAll(options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.client.request.send(Object.assign(Object.assign({ path: ['webhooks'], method: 'GET', options }, ((options === null || options === void 0 ? void 0 : options.extra_params) && { parameters: options.extra_params })), { validator: webhooks_list_types_js_1.WebhookListResponseValidator }));
        });
    }
    create(input, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.client.request.send({
                path: ['webhooks'],
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.extra_params), input),
                options,
                validator: webhooks_create_types_js_1.WebhookCreateResponseValidator,
            });
        });
    }
    delete(id, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.client.request.send(Object.assign(Object.assign({ path: ['webhooks', id], method: 'DELETE', options }, ((options === null || options === void 0 ? void 0 : options.extra_params) && { parameters: options.extra_params })), { validator: webhooks_delete_types_js_1.WebhookDeleteResponseValidator }));
        });
    }
}
exports.WebhookResource = WebhookResource;
