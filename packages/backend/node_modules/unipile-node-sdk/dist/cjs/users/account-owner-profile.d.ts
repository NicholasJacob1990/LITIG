import { Static } from "@sinclair/typebox";
export declare const LinkedinAccountOwnerProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider_id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    email: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    entity_urn: import("@sinclair/typebox").TString;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sales_navigator: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TLiteral<"DISCONNECTED">;
    }>, import("@sinclair/typebox").TNull]>;
    recruiter: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MULTIPLE_SESSIONS">, import("@sinclair/typebox").TLiteral<"DISCONNECTED">]>;
    }>, import("@sinclair/typebox").TNull]>;
    premium: import("@sinclair/typebox").TBoolean;
    occupation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    headline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    first_name: import("@sinclair/typebox").TString;
    last_name: import("@sinclair/typebox").TString;
    profile_picture_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    object_urn: import("@sinclair/typebox").TString;
    open_profile: import("@sinclair/typebox").TBoolean;
}>;
export declare const TelegramAccountOwnerProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider_id: import("@sinclair/typebox").TString;
    deleted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    username: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    provider: import("@sinclair/typebox").TLiteral<"TELEGRAM">;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        expires: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        was_online: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TNull]>>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_picture_url: import("@sinclair/typebox").TString;
    self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    mutual_contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    bot: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    verified: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restricted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    fake: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    close_friend: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restriction_reason: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        platform: import("@sinclair/typebox").TString;
        reason: import("@sinclair/typebox").TString;
        text: import("@sinclair/typebox").TString;
    }>>, import("@sinclair/typebox").TNull]>>;
    lang_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
}>;
export declare const TwitterAccountOwnerProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    provider: import("@sinclair/typebox").TLiteral<"TWITTER">;
    description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    followers_count: import("@sinclair/typebox").TNumber;
    location: import("@sinclair/typebox").TString;
    verified: import("@sinclair/typebox").TBoolean;
    notifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    screen_name: import("@sinclair/typebox").TString;
    entities: import("@sinclair/typebox").TObject<{
        description: import("@sinclair/typebox").TObject<{
            urls: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TAny>;
        }>;
    }>;
    protected: import("@sinclair/typebox").TBoolean;
    friends_count: import("@sinclair/typebox").TNumber;
    listed_count: import("@sinclair/typebox").TNumber;
    favourites_count: import("@sinclair/typebox").TNumber;
    statuses_count: import("@sinclair/typebox").TNumber;
    profile_banner_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_image_url_https: import("@sinclair/typebox").TString;
    default_profile: import("@sinclair/typebox").TBoolean;
    default_profile_image: import("@sinclair/typebox").TBoolean;
    withheld_in_countries: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    followed_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    following: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    follow_request_sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    has_extended_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    advertiser_account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    business_profile_state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    require_some_consent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
}>;
export declare const GmailAccountOwnerProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider: import("@sinclair/typebox").TLiteral<"GMAIL">;
    email: import("@sinclair/typebox").TString;
    messages_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    threads_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    aliases: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        email: import("@sinclair/typebox").TString;
        display_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        reply_to: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        signature: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        is_primary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        is_default: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        verification_status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>;
}>;
export declare const OutlookAccountOwnerProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"OUTLOOK">;
    email: import("@sinclair/typebox").TString;
    display_name: import("@sinclair/typebox").TString;
    given_name: import("@sinclair/typebox").TString;
    surname: import("@sinclair/typebox").TString;
    user_principal_name: import("@sinclair/typebox").TString;
    job_title: import("@sinclair/typebox").TString;
    mobile_phone: import("@sinclair/typebox").TString;
    preferred_language: import("@sinclair/typebox").TString;
}>;
export declare const ImapAccountOwnerProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider: import("@sinclair/typebox").TLiteral<"IMAP">;
    connection_params: import("@sinclair/typebox").TObject<{
        imap: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
        smtp: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
    }>;
}>;
/**
 *
 */
export declare const AccountOwnerProfileApiResponseSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider_id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    email: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    entity_urn: import("@sinclair/typebox").TString;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sales_navigator: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TLiteral<"DISCONNECTED">;
    }>, import("@sinclair/typebox").TNull]>;
    recruiter: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MULTIPLE_SESSIONS">, import("@sinclair/typebox").TLiteral<"DISCONNECTED">]>;
    }>, import("@sinclair/typebox").TNull]>;
    premium: import("@sinclair/typebox").TBoolean;
    occupation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    headline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    first_name: import("@sinclair/typebox").TString;
    last_name: import("@sinclair/typebox").TString;
    profile_picture_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    object_urn: import("@sinclair/typebox").TString;
    open_profile: import("@sinclair/typebox").TBoolean;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider_id: import("@sinclair/typebox").TString;
    deleted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    username: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    provider: import("@sinclair/typebox").TLiteral<"TELEGRAM">;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        expires: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        was_online: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TNull]>>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_picture_url: import("@sinclair/typebox").TString;
    self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    mutual_contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    bot: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    verified: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restricted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    fake: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    close_friend: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restriction_reason: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        platform: import("@sinclair/typebox").TString;
        reason: import("@sinclair/typebox").TString;
        text: import("@sinclair/typebox").TString;
    }>>, import("@sinclair/typebox").TNull]>>;
    lang_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    provider: import("@sinclair/typebox").TLiteral<"TWITTER">;
    description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    followers_count: import("@sinclair/typebox").TNumber;
    location: import("@sinclair/typebox").TString;
    verified: import("@sinclair/typebox").TBoolean;
    notifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    screen_name: import("@sinclair/typebox").TString;
    entities: import("@sinclair/typebox").TObject<{
        description: import("@sinclair/typebox").TObject<{
            urls: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TAny>;
        }>;
    }>;
    protected: import("@sinclair/typebox").TBoolean;
    friends_count: import("@sinclair/typebox").TNumber;
    listed_count: import("@sinclair/typebox").TNumber;
    favourites_count: import("@sinclair/typebox").TNumber;
    statuses_count: import("@sinclair/typebox").TNumber;
    profile_banner_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_image_url_https: import("@sinclair/typebox").TString;
    default_profile: import("@sinclair/typebox").TBoolean;
    default_profile_image: import("@sinclair/typebox").TBoolean;
    withheld_in_countries: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    followed_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    following: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    follow_request_sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    has_extended_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    advertiser_account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    business_profile_state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    require_some_consent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider: import("@sinclair/typebox").TLiteral<"GMAIL">;
    email: import("@sinclair/typebox").TString;
    messages_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    threads_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    aliases: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        email: import("@sinclair/typebox").TString;
        display_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        reply_to: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        signature: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        is_primary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        is_default: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        verification_status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"OUTLOOK">;
    email: import("@sinclair/typebox").TString;
    display_name: import("@sinclair/typebox").TString;
    given_name: import("@sinclair/typebox").TString;
    surname: import("@sinclair/typebox").TString;
    user_principal_name: import("@sinclair/typebox").TString;
    job_title: import("@sinclair/typebox").TString;
    mobile_phone: import("@sinclair/typebox").TString;
    preferred_language: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider: import("@sinclair/typebox").TLiteral<"IMAP">;
    connection_params: import("@sinclair/typebox").TObject<{
        imap: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
        smtp: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
    }>;
}>]>;
export type AccountOwnerProfileApiResponse = Static<typeof AccountOwnerProfileApiResponseSchema>;
/**  */
export declare const AccountOwnerProfileApiResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider_id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    email: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    entity_urn: import("@sinclair/typebox").TString;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sales_navigator: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TLiteral<"DISCONNECTED">;
    }>, import("@sinclair/typebox").TNull]>;
    recruiter: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MULTIPLE_SESSIONS">, import("@sinclair/typebox").TLiteral<"DISCONNECTED">]>;
    }>, import("@sinclair/typebox").TNull]>;
    premium: import("@sinclair/typebox").TBoolean;
    occupation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    headline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    first_name: import("@sinclair/typebox").TString;
    last_name: import("@sinclair/typebox").TString;
    profile_picture_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    object_urn: import("@sinclair/typebox").TString;
    open_profile: import("@sinclair/typebox").TBoolean;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider_id: import("@sinclair/typebox").TString;
    deleted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    username: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    provider: import("@sinclair/typebox").TLiteral<"TELEGRAM">;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        expires: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        was_online: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TNull]>>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_picture_url: import("@sinclair/typebox").TString;
    self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    mutual_contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    bot: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    verified: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restricted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    fake: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    close_friend: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restriction_reason: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        platform: import("@sinclair/typebox").TString;
        reason: import("@sinclair/typebox").TString;
        text: import("@sinclair/typebox").TString;
    }>>, import("@sinclair/typebox").TNull]>>;
    lang_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    provider: import("@sinclair/typebox").TLiteral<"TWITTER">;
    description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    followers_count: import("@sinclair/typebox").TNumber;
    location: import("@sinclair/typebox").TString;
    verified: import("@sinclair/typebox").TBoolean;
    notifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    screen_name: import("@sinclair/typebox").TString;
    entities: import("@sinclair/typebox").TObject<{
        description: import("@sinclair/typebox").TObject<{
            urls: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TAny>;
        }>;
    }>;
    protected: import("@sinclair/typebox").TBoolean;
    friends_count: import("@sinclair/typebox").TNumber;
    listed_count: import("@sinclair/typebox").TNumber;
    favourites_count: import("@sinclair/typebox").TNumber;
    statuses_count: import("@sinclair/typebox").TNumber;
    profile_banner_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_image_url_https: import("@sinclair/typebox").TString;
    default_profile: import("@sinclair/typebox").TBoolean;
    default_profile_image: import("@sinclair/typebox").TBoolean;
    withheld_in_countries: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    followed_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    following: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    follow_request_sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    has_extended_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    advertiser_account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    business_profile_state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    require_some_consent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider: import("@sinclair/typebox").TLiteral<"GMAIL">;
    email: import("@sinclair/typebox").TString;
    messages_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    threads_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    aliases: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        email: import("@sinclair/typebox").TString;
        display_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        reply_to: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        signature: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        is_primary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        is_default: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        verification_status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"OUTLOOK">;
    email: import("@sinclair/typebox").TString;
    display_name: import("@sinclair/typebox").TString;
    given_name: import("@sinclair/typebox").TString;
    surname: import("@sinclair/typebox").TString;
    user_principal_name: import("@sinclair/typebox").TString;
    job_title: import("@sinclair/typebox").TString;
    mobile_phone: import("@sinclair/typebox").TString;
    preferred_language: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"AccountOwnerProfile">;
    provider: import("@sinclair/typebox").TLiteral<"IMAP">;
    connection_params: import("@sinclair/typebox").TObject<{
        imap: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
        smtp: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
    }>;
}>]>>;
