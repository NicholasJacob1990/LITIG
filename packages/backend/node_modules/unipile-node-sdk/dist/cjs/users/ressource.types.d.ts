import { Static } from "@sinclair/typebox";
/**
 *
 */
export declare const LinkedinUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    provider_id: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    first_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    last_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    headline: import("@sinclair/typebox").TString;
    summary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    contact_info: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        emails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        phones: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        adresses: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        socials: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
        }>>>;
    }>>;
    birthdate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        month: import("@sinclair/typebox").TNumber;
        day: import("@sinclair/typebox").TNumber;
    }>>;
    primary_locale: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        country: import("@sinclair/typebox").TString;
        language: import("@sinclair/typebox").TString;
    }>>;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    websites: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    profile_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    background_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    hashtags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    can_send_inmail: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_influencer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_creator: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_hiring: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_to_work: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_saved_lead: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_crm_imported: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_relationship: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    invitation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"SENT">, import("@sinclair/typebox").TLiteral<"RECEIVED">]>;
        status: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"PENDING">, import("@sinclair/typebox").TLiteral<"IGNORED">, import("@sinclair/typebox").TLiteral<"WITHDRAWN">]>;
    }>>;
    work_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        position: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        company: import("@sinclair/typebox").TString;
        location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        current: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    volunteering_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        description: import("@sinclair/typebox").TString;
        role: import("@sinclair/typebox").TString;
        cause: import("@sinclair/typebox").TString;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    education: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        degree: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        school: import("@sinclair/typebox").TString;
        field_of_study: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    skills: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        endorsement_count: import("@sinclair/typebox").TNumber;
    }>>>;
    languages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        proficiency: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    certifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        organization: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    follower_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    shared_connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    network_distance: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"FIRST_DEGREE">, import("@sinclair/typebox").TLiteral<"SECOND_DEGREE">, import("@sinclair/typebox").TLiteral<"THIRD_DEGREE">, import("@sinclair/typebox").TLiteral<"OUT_OF_NETWORK">]>>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type LinkedinUserProfile = Static<typeof LinkedinUserProfileSchema>;
/**
 *
 */
export declare const WhatsappUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"WHATSAPP">;
    id: import("@sinclair/typebox").TString;
}>;
export type WhatsappUserProfile = Static<typeof WhatsappUserProfileSchema>;
/**
 *
 */
export declare const InstagramUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"INSTAGRAM">;
    pk: import("@sinclair/typebox").TNumber;
    username: import("@sinclair/typebox").TString;
    full_name: import("@sinclair/typebox").TString;
    profile_pic_url: import("@sinclair/typebox").TString;
    biography: import("@sinclair/typebox").TString;
    follower_count: import("@sinclair/typebox").TNumber;
    following_count: import("@sinclair/typebox").TNumber;
    is_verified: import("@sinclair/typebox").TBoolean;
    is_business: import("@sinclair/typebox").TBoolean;
    is_private: import("@sinclair/typebox").TBoolean;
}>;
type InstagramUserProfile = Static<typeof InstagramUserProfileSchema>;
/**
 *
 */
export declare const TelegramUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"TELEGRAM">;
    provider_id: import("@sinclair/typebox").TString;
    self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    mutual_contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    deleted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    bot: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    verified: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restricted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    fake: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    close_friend: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    username: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_picture_url: import("@sinclair/typebox").TString;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        expires: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        was_online: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TNull]>>;
    restriction_reason: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        platform: import("@sinclair/typebox").TString;
        reason: import("@sinclair/typebox").TString;
        text: import("@sinclair/typebox").TString;
    }>>, import("@sinclair/typebox").TNull]>>;
    lang_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
}>;
export type TelegramUserProfile = Static<typeof TelegramUserProfileSchema>;
export declare const TwitterUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"TWITTER">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    screen_name: import("@sinclair/typebox").TString;
    location: import("@sinclair/typebox").TString;
    description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    entities: import("@sinclair/typebox").TObject<{
        description: import("@sinclair/typebox").TObject<{
            urls: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TAny>;
        }>;
    }>;
    protected: import("@sinclair/typebox").TBoolean;
    verified: import("@sinclair/typebox").TBoolean;
    followers_count: import("@sinclair/typebox").TNumber;
    friends_count: import("@sinclair/typebox").TNumber;
    listed_count: import("@sinclair/typebox").TNumber;
    favourites_count: import("@sinclair/typebox").TNumber;
    statuses_count: import("@sinclair/typebox").TNumber;
    created_at: import("@sinclair/typebox").TString;
    profile_banner_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_image_url_https: import("@sinclair/typebox").TString;
    default_profile: import("@sinclair/typebox").TBoolean;
    default_profile_image: import("@sinclair/typebox").TBoolean;
    withheld_in_countries: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    followed_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    following: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    follow_request_sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    has_extended_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    notifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    advertiser_account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    business_profile_state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    require_some_consent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
}>;
export type TwitterUserProfile = Static<typeof TwitterUserProfileSchema>;
export declare const GmailAliasSchema: import("@sinclair/typebox").TObject<{
    email: import("@sinclair/typebox").TString;
    display_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    reply_to: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    signature: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    is_primary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_default: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    verification_status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export declare const GmailUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"GMAIL">;
    email: import("@sinclair/typebox").TString;
    messages_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    threads_total: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    aliases: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        email: import("@sinclair/typebox").TString;
        display_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        reply_to: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        signature: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        is_primary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        is_default: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        verification_status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>;
}>;
export type GmailUserProfile = Static<typeof GmailUserProfileSchema>;
export declare const OutlookUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"OUTLOOK">;
    id: import("@sinclair/typebox").TString;
    email: import("@sinclair/typebox").TString;
    display_name: import("@sinclair/typebox").TString;
    given_name: import("@sinclair/typebox").TString;
    surname: import("@sinclair/typebox").TString;
    user_principal_name: import("@sinclair/typebox").TString;
    job_title: import("@sinclair/typebox").TString;
    mobile_phone: import("@sinclair/typebox").TString;
    preferred_language: import("@sinclair/typebox").TString;
}>;
export type OutlookUserProfile = Static<typeof OutlookUserProfileSchema>;
export declare const ImapUserProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"IMAP">;
    connection_params: import("@sinclair/typebox").TObject<{
        imap: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
        smtp: import("@sinclair/typebox").TObject<{
            username: import("@sinclair/typebox").TString;
            port: import("@sinclair/typebox").TNumber;
            host: import("@sinclair/typebox").TString;
        }>;
    }>;
}>;
export type ImapUserProfile = Static<typeof ImapUserProfileSchema>;
export type MessagingUserProfile = LinkedinUserProfile | WhatsappUserProfile | InstagramUserProfile | TelegramUserProfile | TwitterUserProfile;
export type EmailUserProfile = GmailUserProfile | OutlookUserProfile | ImapUserProfile;
export type UserProfile = MessagingUserProfile;
/**
 *
 */
export declare const LinkedinUserRelationSchema: import("@sinclair/typebox").TObject<{
    first_name: import("@sinclair/typebox").TString;
    last_name: import("@sinclair/typebox").TString;
    headline: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TString;
    public_profile_url: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TNumber;
    member_id: import("@sinclair/typebox").TString;
    member_urn: import("@sinclair/typebox").TString;
    connection_urn: import("@sinclair/typebox").TString;
    profile_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type LinkedinUserRelation = Static<typeof LinkedinUserRelationSchema>;
export type UserRelation = LinkedinUserRelation;
/**
 *
 */
export declare const LinkedinAccountOwnerProfileSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    provider_id: import("@sinclair/typebox").TString;
    entity_urn: import("@sinclair/typebox").TString;
    object_urn: import("@sinclair/typebox").TString;
    first_name: import("@sinclair/typebox").TString;
    last_name: import("@sinclair/typebox").TString;
    profile_picture_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    public_identifier: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    headline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    email: import("@sinclair/typebox").TString;
    premium: import("@sinclair/typebox").TBoolean;
    open_profile: import("@sinclair/typebox").TBoolean;
    occupation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    recruiter: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MULTIPLE_SESSIONS">, import("@sinclair/typebox").TLiteral<"DISCONNECTED">]>;
    }>, import("@sinclair/typebox").TNull]>;
    sales_navigator: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        owner_seat_id: import("@sinclair/typebox").TString;
        contract_id: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        error: import("@sinclair/typebox").TLiteral<"DISCONNECTED">;
    }>, import("@sinclair/typebox").TNull]>;
}>;
export type LinkedinAccountOwnerProfile = Static<typeof LinkedinAccountOwnerProfileSchema>;
export type TelegramAccountOwnerProfile = Static<typeof TelegramUserProfileSchema>;
export type TwitterAccountOwnerProfile = Static<typeof TwitterUserProfileSchema>;
export type AccountOwnerProfile = LinkedinAccountOwnerProfile | TelegramAccountOwnerProfile | TwitterUserProfile | GmailUserProfile | OutlookUserProfile | ImapUserProfile;
export declare const LinkedinPostSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    id: import("@sinclair/typebox").TString;
    social_id: import("@sinclair/typebox").TString;
    share_url: import("@sinclair/typebox").TString;
    title: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    text: import("@sinclair/typebox").TString;
    date: import("@sinclair/typebox").TString;
    parsed_datetime: import("@sinclair/typebox").TString;
    reaction_counter: import("@sinclair/typebox").TNumber;
    comment_counter: import("@sinclair/typebox").TNumber;
    repost_counter: import("@sinclair/typebox").TNumber;
    impressions_counter: import("@sinclair/typebox").TNumber;
    author: import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>;
    permissions: import("@sinclair/typebox").TObject<{
        can_react: import("@sinclair/typebox").TBoolean;
        can_share: import("@sinclair/typebox").TBoolean;
        can_post_comments: import("@sinclair/typebox").TBoolean;
    }>;
    is_repost: import("@sinclair/typebox").TBoolean;
    repost_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    reposted_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>>;
    repost_content: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        date: import("@sinclair/typebox").TString;
        parsed_datetime: import("@sinclair/typebox").TString;
        author: import("@sinclair/typebox").TObject<{
            public_identifier: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
            is_company: import("@sinclair/typebox").TBoolean;
        }>;
        text: import("@sinclair/typebox").TString;
    }>>;
    attachments: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"img">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        sticker: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"video">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        gif: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"audio">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        duration: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        voice_note: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"file">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_name: import("@sinclair/typebox").TString;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"linkedin_post">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>]>>;
    poll: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        total_votes_count: import("@sinclair/typebox").TNumber;
        question: import("@sinclair/typebox").TString;
        is_open: import("@sinclair/typebox").TBoolean;
        options: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            text: import("@sinclair/typebox").TString;
            win: import("@sinclair/typebox").TBoolean;
            votes_count: import("@sinclair/typebox").TNumber;
        }>>;
    }>>;
}>;
export declare const PostSchema: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    id: import("@sinclair/typebox").TString;
    social_id: import("@sinclair/typebox").TString;
    share_url: import("@sinclair/typebox").TString;
    title: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    text: import("@sinclair/typebox").TString;
    date: import("@sinclair/typebox").TString;
    parsed_datetime: import("@sinclair/typebox").TString;
    reaction_counter: import("@sinclair/typebox").TNumber;
    comment_counter: import("@sinclair/typebox").TNumber;
    repost_counter: import("@sinclair/typebox").TNumber;
    impressions_counter: import("@sinclair/typebox").TNumber;
    author: import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>;
    permissions: import("@sinclair/typebox").TObject<{
        can_react: import("@sinclair/typebox").TBoolean;
        can_share: import("@sinclair/typebox").TBoolean;
        can_post_comments: import("@sinclair/typebox").TBoolean;
    }>;
    is_repost: import("@sinclair/typebox").TBoolean;
    repost_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    reposted_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>>;
    repost_content: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        date: import("@sinclair/typebox").TString;
        parsed_datetime: import("@sinclair/typebox").TString;
        author: import("@sinclair/typebox").TObject<{
            public_identifier: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
            is_company: import("@sinclair/typebox").TBoolean;
        }>;
        text: import("@sinclair/typebox").TString;
    }>>;
    attachments: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"img">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        sticker: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"video">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        gif: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"audio">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        duration: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        voice_note: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"file">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_name: import("@sinclair/typebox").TString;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"linkedin_post">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>]>>;
    poll: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        total_votes_count: import("@sinclair/typebox").TNumber;
        question: import("@sinclair/typebox").TString;
        is_open: import("@sinclair/typebox").TBoolean;
        options: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            text: import("@sinclair/typebox").TString;
            win: import("@sinclair/typebox").TBoolean;
            votes_count: import("@sinclair/typebox").TNumber;
        }>>;
    }>>;
}>;
export type Post = Static<typeof PostSchema>;
export declare const InvitationSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    invited_user: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    invited_user_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    invited_user_public_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    invited_user_description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    date: import("@sinclair/typebox").TString;
    parsed_datetime: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    invitation_text: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    inviter: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        inviter_name: import("@sinclair/typebox").TString;
        inviter_id: import("@sinclair/typebox").TString;
        inviter_public_identifier: import("@sinclair/typebox").TString;
        inviter_description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>;
    specifics: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
        shared_secret: import("@sinclair/typebox").TString;
    }>>;
}>;
export type Invitation = Static<typeof InvitationSchema>;
export {};
