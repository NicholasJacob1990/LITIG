import { Static } from '@sinclair/typebox';
export declare const WebhookAccountOptionSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
}>;
export declare const WebhookIconKeySchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WebhookIcon">, import("@sinclair/typebox").TLiteral<"SettingsInputIcon">, import("@sinclair/typebox").TLiteral<"LeakAddIcon">, import("@sinclair/typebox").TLiteral<"Diversity2Icon">, import("@sinclair/typebox").TLiteral<"AutoFixHighIcon">, import("@sinclair/typebox").TLiteral<"SignPostIcon">, import("@sinclair/typebox").TLiteral<"ShutterSpeedIcon">, import("@sinclair/typebox").TLiteral<"SyncAltIcon">, import("@sinclair/typebox").TLiteral<"WhatsAppIcon">, import("@sinclair/typebox").TLiteral<"LinkedInIcon">, import("@sinclair/typebox").TLiteral<"ImportExportIcon">, import("@sinclair/typebox").TLiteral<"PodcastsIcon">, import("@sinclair/typebox").TLiteral<"CableIcon">]>;
export declare const WebhookButtonSchema: import("@sinclair/typebox").TObject<{
    icon: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WebhookIcon">, import("@sinclair/typebox").TLiteral<"SettingsInputIcon">, import("@sinclair/typebox").TLiteral<"LeakAddIcon">, import("@sinclair/typebox").TLiteral<"Diversity2Icon">, import("@sinclair/typebox").TLiteral<"AutoFixHighIcon">, import("@sinclair/typebox").TLiteral<"SignPostIcon">, import("@sinclair/typebox").TLiteral<"ShutterSpeedIcon">, import("@sinclair/typebox").TLiteral<"SyncAltIcon">, import("@sinclair/typebox").TLiteral<"WhatsAppIcon">, import("@sinclair/typebox").TLiteral<"LinkedInIcon">, import("@sinclair/typebox").TLiteral<"ImportExportIcon">, import("@sinclair/typebox").TLiteral<"PodcastsIcon">, import("@sinclair/typebox").TLiteral<"CableIcon">]>;
    name: import("@sinclair/typebox").TString;
    context: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MESSAGE">, import("@sinclair/typebox").TLiteral<"CHAT">]>;
}>;
export declare const WebhookDataKeySchema: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
export declare const WebhookDataItemSchema: import("@sinclair/typebox").TObject<{
    name: import("@sinclair/typebox").TString;
    key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
}>;
export declare const WebhookEmailDataKeySchema: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
export declare const WebhookEmailDataItemSchema: import("@sinclair/typebox").TObject<{
    name: import("@sinclair/typebox").TString;
    key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
}>;
export declare const WebhookEmailTrackingDataKeySchema: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
export declare const WebhookEmailTrackingDataItemSchema: import("@sinclair/typebox").TObject<{
    name: import("@sinclair/typebox").TString;
    key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
}>;
export declare const WebhookHeaderItemSchema: import("@sinclair/typebox").TObject<{
    key: import("@sinclair/typebox").TString;
    value: import("@sinclair/typebox").TString;
}>;
export declare const WebhookBodyFormatSchema: import("@sinclair/typebox").TUnsafe<"form" | "json">;
export declare const WebhookMessagingTriggerEventSchema: import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">;
export declare const WebhookMailTriggerEventSchema: import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">;
export declare const WebhookMailTrackingTriggerEventSchema: import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">;
/**
 * Webhook Model
 */
export declare const WebhookBaseSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
    }>>;
    enabled: import("@sinclair/typebox").TBoolean;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    request_url: import("@sinclair/typebox").TString;
    format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
    headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        key: import("@sinclair/typebox").TString;
        value: import("@sinclair/typebox").TString;
    }>>;
    data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
    }>>]>;
    events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
}>;
export declare const WebhookAutoSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"AUTO">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
    }>>]>;
    format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
    account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
    }>>;
    enabled: import("@sinclair/typebox").TBoolean;
    request_url: import("@sinclair/typebox").TString;
    headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        key: import("@sinclair/typebox").TString;
        value: import("@sinclair/typebox").TString;
    }>>;
    events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
}>;
export declare const WebhookTriggerSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"TRIGGER">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
    }>>]>;
    format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
    account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
    }>>;
    enabled: import("@sinclair/typebox").TBoolean;
    request_url: import("@sinclair/typebox").TString;
    headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        key: import("@sinclair/typebox").TString;
        value: import("@sinclair/typebox").TString;
    }>>;
    trigger: import("@sinclair/typebox").TObject<{
        icon: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WebhookIcon">, import("@sinclair/typebox").TLiteral<"SettingsInputIcon">, import("@sinclair/typebox").TLiteral<"LeakAddIcon">, import("@sinclair/typebox").TLiteral<"Diversity2Icon">, import("@sinclair/typebox").TLiteral<"AutoFixHighIcon">, import("@sinclair/typebox").TLiteral<"SignPostIcon">, import("@sinclair/typebox").TLiteral<"ShutterSpeedIcon">, import("@sinclair/typebox").TLiteral<"SyncAltIcon">, import("@sinclair/typebox").TLiteral<"WhatsAppIcon">, import("@sinclair/typebox").TLiteral<"LinkedInIcon">, import("@sinclair/typebox").TLiteral<"ImportExportIcon">, import("@sinclair/typebox").TLiteral<"PodcastsIcon">, import("@sinclair/typebox").TLiteral<"CableIcon">]>;
        name: import("@sinclair/typebox").TString;
        context: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MESSAGE">, import("@sinclair/typebox").TLiteral<"CHAT">]>;
    }>;
    events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
}>;
export declare const WebhookSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"AUTO">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
    }>>]>;
    format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
    account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
    }>>;
    enabled: import("@sinclair/typebox").TBoolean;
    request_url: import("@sinclair/typebox").TString;
    headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        key: import("@sinclair/typebox").TString;
        value: import("@sinclair/typebox").TString;
    }>>;
    events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"TRIGGER">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
    }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
    }>>]>;
    format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
    account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
    }>>;
    enabled: import("@sinclair/typebox").TBoolean;
    request_url: import("@sinclair/typebox").TString;
    headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        key: import("@sinclair/typebox").TString;
        value: import("@sinclair/typebox").TString;
    }>>;
    trigger: import("@sinclair/typebox").TObject<{
        icon: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WebhookIcon">, import("@sinclair/typebox").TLiteral<"SettingsInputIcon">, import("@sinclair/typebox").TLiteral<"LeakAddIcon">, import("@sinclair/typebox").TLiteral<"Diversity2Icon">, import("@sinclair/typebox").TLiteral<"AutoFixHighIcon">, import("@sinclair/typebox").TLiteral<"SignPostIcon">, import("@sinclair/typebox").TLiteral<"ShutterSpeedIcon">, import("@sinclair/typebox").TLiteral<"SyncAltIcon">, import("@sinclair/typebox").TLiteral<"WhatsAppIcon">, import("@sinclair/typebox").TLiteral<"LinkedInIcon">, import("@sinclair/typebox").TLiteral<"ImportExportIcon">, import("@sinclair/typebox").TLiteral<"PodcastsIcon">, import("@sinclair/typebox").TLiteral<"CableIcon">]>;
        name: import("@sinclair/typebox").TString;
        context: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MESSAGE">, import("@sinclair/typebox").TLiteral<"CHAT">]>;
    }>;
    events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
}>]>;
export type Webhook = Static<typeof WebhookSchema>;
