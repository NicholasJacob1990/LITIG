"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountListResponseValidator = exports.AccounListApiResponseSchema = exports.AccountListQueryValidator = exports.AccountListQuerySchema = exports.AccountListBaseQuerySchema = exports.AccountListDecodedCursorValidator = exports.AccountListDecodedCursorSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const compiler_1 = require("@sinclair/typebox/compiler");
const common_types_js_1 = require("../common/common.types.js");
const query_cursor_js_1 = require("../common/query-cursor.js");
const query_parameters_type_js_1 = require("../common/query-parameters.type.js");
const account_types_js_1 = require("./account.types.js");
// --------------------------------------------------------------------------
// REQUEST
// --------------------------------------------------------------------------
/**
 *
 */
exports.AccountListDecodedCursorSchema = typebox_1.Type.Composite([
    typebox_1.Type.Required(query_parameters_type_js_1.ListLimitQuerySchema),
    typebox_1.Type.Object({
        cursor: typebox_1.Type.Object({
            last_id: common_types_js_1.UniqueIdSchema,
        }),
    }),
]);
exports.AccountListDecodedCursorValidator = compiler_1.TypeCompiler.Compile(exports.AccountListDecodedCursorSchema);
/**
 *
 */
exports.AccountListBaseQuerySchema = query_parameters_type_js_1.ListLimitQuerySchema;
/**
 *
 */
exports.AccountListQuerySchema = typebox_1.Type.Union([exports.AccountListBaseQuerySchema, query_parameters_type_js_1.ListCursorQuerySchema]);
// /**
//  *
//  */
// export const getAccountListQueryOpenApiSchema = makeOpenApiSchemaGetter(
//   AccountListQuerySchema
// );
/**
 *
 */
exports.AccountListQueryValidator = compiler_1.TypeCompiler.Compile(exports.AccountListQuerySchema);
// --------------------------------------------------------------------------
// RESPONSE
// --------------------------------------------------------------------------
/**
 *
 */
exports.AccounListApiResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal('AccountList'),
    items: typebox_1.Type.Array(account_types_js_1.AccounApiResponseSchema),
    cursor: typebox_1.Type.Union([(0, query_cursor_js_1.EncodedQueryCursorType)(), typebox_1.Type.Null({ title: 'null' })]),
});
// /**
//  *
//  */
// export const getAccountListResponseOpenApiSchema = makeOpenApiSchemaGetter(
//   AccounListApiResponseSchema
// );
/**  */
exports.AccountListResponseValidator = compiler_1.TypeCompiler.Compile(exports.AccounListApiResponseSchema);
