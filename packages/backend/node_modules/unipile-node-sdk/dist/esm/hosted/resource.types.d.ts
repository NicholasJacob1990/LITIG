import { Static } from "@sinclair/typebox";
import { Strip } from "../common/core.types.tmp.js";
/** */
export declare const HostedAuthTokenAllProvidersSchema: import("@sinclair/typebox").TLiteral<"*">;
export declare const HostedAuthTokenMailingProvidersSchema: import("@sinclair/typebox").TLiteral<"*:MAILING">;
export declare const HostedAuthTokenMessagingProvidersSchema: import("@sinclair/typebox").TLiteral<"*:MESSAGING">;
export type HostedAuthTokenProviderWildcard = Static<typeof HostedAuthTokenAllProvidersSchema> | Static<typeof HostedAuthTokenMailingProvidersSchema> | Static<typeof HostedAuthTokenMessagingProvidersSchema>;
export declare const HostedAuthProviderSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"TELEGRAM">, import("@sinclair/typebox").TLiteral<"MICROSOFT">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">]>;
/** */
export declare const HostedAuthTokenBaseSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    prefix: import("@sinclair/typebox").TString;
    hashedToken: import("@sinclair/typebox").TString;
    username: import("@sinclair/typebox").TString;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
}>;
/** */
export declare const HostedAuthTokenCreateSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"create">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    username: import("@sinclair/typebox").TString;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    prefix: import("@sinclair/typebox").TString;
    hashedToken: import("@sinclair/typebox").TString;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    providers: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"*">, import("@sinclair/typebox").TLiteral<"*:MAILING">, import("@sinclair/typebox").TLiteral<"*:MESSAGING">, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"LINKEDIN" | "WHATSAPP" | "INSTAGRAM" | "MESSENGER" | "TELEGRAM" | "TWITTER" | "MAIL" | "GOOGLE" | "OUTLOOK" | "IMAP">>]>;
}>;
/** */
export declare const HostedAuthTokenReconnectSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"reconnect">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    account_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"TELEGRAM">, import("@sinclair/typebox").TLiteral<"MICROSOFT">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">]>;
    username: import("@sinclair/typebox").TString;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    prefix: import("@sinclair/typebox").TString;
    hashedToken: import("@sinclair/typebox").TString;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    reconnect_account: import("@sinclair/typebox").TString;
}>;
/** */
export declare const HostedAuthTokenSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"create">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    username: import("@sinclair/typebox").TString;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    prefix: import("@sinclair/typebox").TString;
    hashedToken: import("@sinclair/typebox").TString;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    providers: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"*">, import("@sinclair/typebox").TLiteral<"*:MAILING">, import("@sinclair/typebox").TLiteral<"*:MESSAGING">, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"LINKEDIN" | "WHATSAPP" | "INSTAGRAM" | "MESSENGER" | "TELEGRAM" | "TWITTER" | "MAIL" | "GOOGLE" | "OUTLOOK" | "IMAP">>]>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"reconnect">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    account_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"TELEGRAM">, import("@sinclair/typebox").TLiteral<"MICROSOFT">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">]>;
    username: import("@sinclair/typebox").TString;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    prefix: import("@sinclair/typebox").TString;
    hashedToken: import("@sinclair/typebox").TString;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    reconnect_account: import("@sinclair/typebox").TString;
}>]>;
/** */
export declare const DisplayableHostedAuthTokenSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"create">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    prefix: import("@sinclair/typebox").TString;
    username: import("@sinclair/typebox").TString;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    providers: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"*">, import("@sinclair/typebox").TLiteral<"*:MAILING">, import("@sinclair/typebox").TLiteral<"*:MESSAGING">, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"LINKEDIN" | "WHATSAPP" | "INSTAGRAM" | "MESSENGER" | "TELEGRAM" | "TWITTER" | "MAIL" | "GOOGLE" | "OUTLOOK" | "IMAP">>]>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"reconnect">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    prefix: import("@sinclair/typebox").TString;
    username: import("@sinclair/typebox").TString;
    account_type: import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"TELEGRAM">, import("@sinclair/typebox").TLiteral<"MICROSOFT">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">]>, import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"TELEGRAM">, import("@sinclair/typebox").TLiteral<"MICROSOFT">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">]>]>;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    reconnect_account: import("@sinclair/typebox").TString;
}>]>;
/**
 * Shown once on creation, not stored, not retrievable.
 */
export declare const SecretHostedAuthTokenSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"create">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    prefix: import("@sinclair/typebox").TString;
    username: import("@sinclair/typebox").TString;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    providers: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"*">, import("@sinclair/typebox").TLiteral<"*:MAILING">, import("@sinclair/typebox").TLiteral<"*:MESSAGING">, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"LINKEDIN" | "WHATSAPP" | "INSTAGRAM" | "MESSENGER" | "TELEGRAM" | "TWITTER" | "MAIL" | "GOOGLE" | "OUTLOOK" | "IMAP">>]>;
    token: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"reconnect">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    prefix: import("@sinclair/typebox").TString;
    username: import("@sinclair/typebox").TString;
    account_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"TELEGRAM">, import("@sinclair/typebox").TLiteral<"MICROSOFT">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">]>;
    sync_limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        MAILING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TLiteral<"NO_HISTORY_SYNC">>;
        MESSAGING: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            chats: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
            messages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>, import("@sinclair/typebox").TNumber]>>;
        }>>;
    }>>;
    disabled_features: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"linkedin_recruiter" | "linkedin_sales_navigator" | "linkedin_organizations_mailboxes">>>;
    issuedAt: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    expiresOn: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").UTCDateTimeMs>;
    success_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    failure_redirect_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    notify_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>>;
    api_url: import("@sinclair/typebox").TUnsafe<import("../common/core.types.tmp.js").HttpUrl>;
    reconnect_account: import("@sinclair/typebox").TString;
    token: import("@sinclair/typebox").TString;
}>]>;
/** */
export type HostedAuthProvider = Static<typeof HostedAuthProviderSchema>;
/** */
export type HostedAuthTokenBase = Static<typeof HostedAuthTokenBaseSchema>;
/** */
export type HostedAuthTokenCreate = Static<typeof HostedAuthTokenCreateSchema>;
/** */
export type HostedAuthTokenReconnect = Static<typeof HostedAuthTokenReconnectSchema>;
/** */
export type HostedAuthToken = Static<typeof HostedAuthTokenSchema>;
/** */
export type DisplayableHostedAuthToken = Static<typeof DisplayableHostedAuthTokenSchema>;
/** */
export type SecretHostedAuthToken = Static<typeof SecretHostedAuthTokenSchema>;
/** */
export type HostedAuthTokenDTO = Strip<HostedAuthToken, "id" | "prefix" | "hashedToken" | "issuedAt" | "account_type">;
/** */
export type NewHostedAuthTokenDTO = Strip<HostedAuthToken, "id" | "hashedToken">;
/** */
export declare const hostedAuthSupportedAccountTypes: Set<string>;
/** */
export declare function isSupportedHostedAuthProvider(accountType: string): accountType is HostedAuthProvider;
/** */
export declare function createHostedAuthToken(content: NewHostedAuthTokenDTO): Strip<HostedAuthToken, "hashedToken"> | "INVALID_DATES" | "EMPTY_NAME";
