"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailSentApiResponseValidator = exports.AttachmentsPostQueryValidator = exports.AttachmentPostQuerySchema = exports.MailSentApiResponseSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const resource_types_js_1 = require("./attachments/resource.types.js");
const compiler_1 = require("@sinclair/typebox/compiler");
const common_types_js_1 = require("../common/common.types.js");
const MAX_ATTACHMENTS = 26214400;
const MAX_ATTACHMENT_SIZE = 26214400;
// --------------------------------------------------------------------------
// RESPONSE
// --------------------------------------------------------------------------
/**
 *
 */
exports.MailSentApiResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal("EmailSent"),
    tracking_id: common_types_js_1.UniqueIdSchema,
}, { description: "@todo Email has been sent." });
exports.AttachmentPostQuerySchema = typebox_1.Type.Object({
    fieldname: typebox_1.Type.String(),
    originalname: typebox_1.Type.String(),
    encoding: typebox_1.Type.String(),
    mimetype: typebox_1.Type.String(),
    size: typebox_1.Type.Number({ maximum: MAX_ATTACHMENT_SIZE }),
    buffer: (0, resource_types_js_1.BufferType)(),
    stream: typebox_1.Type.Optional((0, resource_types_js_1.ReadableType)()),
    destination: typebox_1.Type.Optional(typebox_1.Type.String()),
    filename: typebox_1.Type.Optional(typebox_1.Type.String()),
    path: typebox_1.Type.Optional(typebox_1.Type.String()),
});
exports.AttachmentsPostQueryValidator = compiler_1.TypeCompiler.Compile(typebox_1.Type.Optional(typebox_1.Type.Array(exports.AttachmentPostQuerySchema, { maxItems: MAX_ATTACHMENTS })));
/**  */
exports.MailSentApiResponseValidator = compiler_1.TypeCompiler.Compile(exports.MailSentApiResponseSchema);
