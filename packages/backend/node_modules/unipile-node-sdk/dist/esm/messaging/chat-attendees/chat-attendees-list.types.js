"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatAttendeeByChatListApiResponseValidator = exports.ChatAttendeeListApiResponseValidator = exports.ChatAttendeeByChatListApiResponse = exports.ChatAttendeeListApiResponseSchema = exports.ChatAttendeeListQueryValidator = exports.ChatAttendeeListQuerySchema = exports.ChatAttendeeListBaseQuerySchema = exports.ChatAttendeeListDecodedCursorValidator = exports.ChatAttendeeListDecodedCursorSchema = exports.ChatAttendeeListOptionsQuerySchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const compiler_1 = require("@sinclair/typebox/compiler");
const i18n_fake_js_1 = require("../../common/i18n.fake.js");
const common_types_js_1 = require("../../common/common.types.js");
const query_cursor_js_1 = require("../../common/query-cursor.js");
const query_parameters_type_js_1 = require("../../common/query-parameters.type.js");
const ressource_types_js_1 = require("./ressource.types.js");
// --------------------------------------------------------------------------
// REQUEST
// --------------------------------------------------------------------------
/**
 *
 */
exports.ChatAttendeeListOptionsQuerySchema = typebox_1.Type.Object({
    account_id: typebox_1.Type.Optional(query_parameters_type_js_1.AccountIdParamSchema),
});
/**
 *
 */
exports.ChatAttendeeListDecodedCursorSchema = typebox_1.Type.Composite([
    exports.ChatAttendeeListOptionsQuerySchema,
    typebox_1.Type.Required(query_parameters_type_js_1.ListLimitQuerySchema),
    typebox_1.Type.Object({
        cursor: typebox_1.Type.Object({
            last_id: common_types_js_1.UniqueIdSchema,
        }),
    }),
]);
exports.ChatAttendeeListDecodedCursorValidator = compiler_1.TypeCompiler.Compile(exports.ChatAttendeeListDecodedCursorSchema);
/**
 *
 */
exports.ChatAttendeeListBaseQuerySchema = typebox_1.Type.Composite([exports.ChatAttendeeListOptionsQuerySchema, query_parameters_type_js_1.ListLimitQuerySchema]);
/**
 *
 */
exports.ChatAttendeeListQuerySchema = typebox_1.Type.Union([exports.ChatAttendeeListBaseQuerySchema, query_parameters_type_js_1.ListCursorQuerySchema], {
    description: i18n_fake_js_1.i18n.t('@todo api.Query.Cursor.ignore_other_params'),
});
// /**
//  *
//  */
// export const getChatAttendeeListQueryOpenApiSchema = makeOpenApiSchemaGetter(
//   ChatAttendeeListQuerySchema
// );
/**
 *
 */
exports.ChatAttendeeListQueryValidator = compiler_1.TypeCompiler.Compile(exports.ChatAttendeeListQuerySchema);
// --------------------------------------------------------------------------
// RESPONSE
// --------------------------------------------------------------------------
/**
 *
 */
exports.ChatAttendeeListApiResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal('ChatAttendeeList'),
    items: typebox_1.Type.Array(typebox_1.Type.Composite([typebox_1.Type.Object({ object: typebox_1.Type.Literal('ChatAttendee') }), ressource_types_js_1.ChatAttendeeSchema])),
    cursor: typebox_1.Type.Union([(0, query_cursor_js_1.EncodedQueryCursorType)(), typebox_1.Type.Null()]),
});
// export const getChatAttendeeListResponseOpenApiSchema = makeOpenApiSchemaGetter(
//   ChatAttendeeListApiResponseSchema
// );
exports.ChatAttendeeByChatListApiResponse = typebox_1.Type.Omit(exports.ChatAttendeeListApiResponseSchema, ['cursor']);
/**  */
exports.ChatAttendeeListApiResponseValidator = compiler_1.TypeCompiler.Compile(exports.ChatAttendeeListApiResponseSchema);
exports.ChatAttendeeByChatListApiResponseValidator = compiler_1.TypeCompiler.Compile(exports.ChatAttendeeByChatListApiResponse);
