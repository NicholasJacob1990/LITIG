import { Static } from "@sinclair/typebox";
import { RequiredProps } from "../../common/core.types.tmp.js";
export declare const DEFAULT_CHAT_LIST_LIMIT = 100;
/**
 *
 */
export declare const ChatListOptionsQuerySchema: import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>>;
    after: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    before: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    unread: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
export type ChatListOptionsQuery = Static<typeof ChatListOptionsQuerySchema>;
/**
 *
 */
export declare const ChatListDecodedCursorSchema: import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>>;
    cursor: import("@sinclair/typebox").TObject<{
        last_id: import("@sinclair/typebox").TString;
        last_date: import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>;
    }>;
    limit: import("@sinclair/typebox").TInteger;
    after: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    before: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    unread: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
export type ChatListDecodedCursor = Static<typeof ChatListDecodedCursorSchema>;
export declare const ChatListDecodedCursorValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>>;
    cursor: import("@sinclair/typebox").TObject<{
        last_id: import("@sinclair/typebox").TString;
        last_date: import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>;
    }>;
    limit: import("@sinclair/typebox").TInteger;
    after: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    before: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    unread: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>>;
/**
 *
 */
export declare const ChatListBaseQuerySchema: import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>>;
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    after: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    before: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    unread: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
export type ChatListBaseQuery = Static<typeof ChatListBaseQuerySchema>;
/**
 *
 */
export declare const ChatListQuerySchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>>;
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    after: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    before: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    unread: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>, import("@sinclair/typebox").TObject<{
    cursor: import("@sinclair/typebox").TString;
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
}>]>;
export type ChatListQuery = Static<typeof ChatListQuerySchema>;
/**
 *
 */
export declare const ChatListQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>>;
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    after: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    before: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("../../common/core.types.tmp.js").UTCDateTimeMs>>;
    unread: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>, import("@sinclair/typebox").TObject<{
    cursor: import("@sinclair/typebox").TString;
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
}>]>>;
/**
 *
 */
export type ChatListQueryDTO = RequiredProps<ChatListBaseQuery, "limit"> | {
    cursor: ChatListDecodedCursor;
};
/**
 *
 */
export declare const ChatListResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"ChatList">;
    items: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Chat">;
        type: import("@sinclair/typebox").TEnum<{
            SINGLE: 0;
            GROUP: 1;
            CHANNEL: 2;
        }>;
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        account_id: import("@sinclair/typebox").TString;
        provider_id: import("@sinclair/typebox").TString;
        timestamp: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        account_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
        attendee_provider_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        unread_count: import("@sinclair/typebox").TNumber;
        archived: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>]>;
        muted_until: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<-1>, import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        read_only: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>]>;
        disabledFeatures: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"reactions">, import("@sinclair/typebox").TLiteral<"reply">]>>>;
        subject: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        folder: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"INBOX">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_CLASSIC">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_RECRUITER">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_SALES_NAVIGATOR">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_ORGANIZATION">]>>>;
        organization_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        mailbox_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        content_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inmail">, import("@sinclair/typebox").TLiteral<"sponsored">, import("@sinclair/typebox").TLiteral<"linkedin_offer">]>>;
    }>>;
    cursor: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../../common/query-cursor.js").EncodedQueryCursor>, import("@sinclair/typebox").TNull]>;
}>;
export type ChatListApiResponse = Static<typeof ChatListResponseSchema>;
/**  */
export declare const ChatListApiResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"ChatList">;
    items: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Chat">;
        type: import("@sinclair/typebox").TEnum<{
            SINGLE: 0;
            GROUP: 1;
            CHANNEL: 2;
        }>;
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        account_id: import("@sinclair/typebox").TString;
        provider_id: import("@sinclair/typebox").TString;
        timestamp: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        account_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"MESSENGER">, import("@sinclair/typebox").TLiteral<"INSTAGRAM">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
        attendee_provider_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        unread_count: import("@sinclair/typebox").TNumber;
        archived: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>]>;
        muted_until: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<-1>, import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        read_only: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>]>;
        disabledFeatures: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"reactions">, import("@sinclair/typebox").TLiteral<"reply">]>>>;
        subject: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        folder: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"INBOX">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_CLASSIC">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_RECRUITER">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_SALES_NAVIGATOR">, import("@sinclair/typebox").TLiteral<"INBOX_LINKEDIN_ORGANIZATION">]>>>;
        organization_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        mailbox_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        content_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"inmail">, import("@sinclair/typebox").TLiteral<"sponsored">, import("@sinclair/typebox").TLiteral<"linkedin_offer">]>>;
    }>>;
    cursor: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../../common/query-cursor.js").EncodedQueryCursor>, import("@sinclair/typebox").TNull]>;
}>>;
