"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageSchema = exports.MessageDraftSchema = exports.MessageDraftAttachmentSchema = exports.BaseMessageSchema = exports.MessageEventTypeSchema = exports.MessageBehaviourSchema = exports.MessageReactionSchema = exports.MessageAttachmentSchema = exports.MessageLinkAttachmentSchema = exports.MessageFileAttachmentSchema = exports.MessageAudioAttachmentSchema = exports.MessageVideoAttachmentSchema = exports.MessageImageAttachmentSchema = exports.MessageAttachmentSize = exports.BaseMessageAttachmentSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const common_types_js_1 = require("../../common/common.types.js");
/**
 *
 */
exports.BaseMessageAttachmentSchema = typebox_1.Type.Object({
    id: typebox_1.Type.String(),
    file_size: typebox_1.Type.Optional(typebox_1.Type.Number()),
    unavailable: typebox_1.Type.Boolean(),
    mimetype: typebox_1.Type.Optional(typebox_1.Type.String()),
    url: typebox_1.Type.Optional(typebox_1.Type.String()),
    url_expires_at: typebox_1.Type.Optional(typebox_1.Type.Number()),
});
/**
 *
 */
exports.MessageAttachmentSize = typebox_1.Type.Object({
    width: typebox_1.Type.Number(),
    height: typebox_1.Type.Number(),
});
/**
 *
 */
exports.MessageImageAttachmentSchema = typebox_1.Type.Composite([
    exports.BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal("img"),
        size: exports.MessageAttachmentSize,
        sticker: typebox_1.Type.Boolean(),
    }),
]);
/**
 *
 */
exports.MessageVideoAttachmentSchema = typebox_1.Type.Composite([
    exports.BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal("video"),
        size: exports.MessageAttachmentSize,
        gif: typebox_1.Type.Boolean(),
    }),
]);
/**
 *
 */
exports.MessageAudioAttachmentSchema = typebox_1.Type.Composite([
    exports.BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal("audio"),
        duration: typebox_1.Type.Optional(typebox_1.Type.Number()),
        voice_note: typebox_1.Type.Boolean(),
    }),
]);
/**
 *
 */
exports.MessageFileAttachmentSchema = typebox_1.Type.Composite([
    exports.BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal("file"),
        file_name: typebox_1.Type.String(),
    }),
]);
/**
 *
 */
exports.MessageLinkAttachmentSchema = typebox_1.Type.Composite([
    exports.BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal("linkedin_post"),
    }),
]);
/**
 *
 */
exports.MessageAttachmentSchema = typebox_1.Type.Union([
    exports.MessageImageAttachmentSchema,
    exports.MessageVideoAttachmentSchema,
    exports.MessageAudioAttachmentSchema,
    exports.MessageFileAttachmentSchema,
    exports.MessageLinkAttachmentSchema,
]);
/**
 *
 */
exports.MessageReactionSchema = typebox_1.Type.Object({
    value: typebox_1.Type.String(),
    sender_id: typebox_1.Type.String(),
    is_sender: typebox_1.Type.Boolean(),
});
/**
 *
 */
exports.MessageBehaviourSchema = typebox_1.Type.Enum({ SILENT: 0 });
/**
 *
 */
exports.MessageEventTypeSchema = typebox_1.Type.Enum({
    UNKNOWN: 0,
    REACTION: 1,
    REACTION_TO_ME: 2,
    GROUP_CREATE: 3,
    GROUP_CHANGE_SUBJECT: 4,
    GROUP_PARTICIPANT_ADD: 5,
    GROUP_PARTICIPANT_REMOVE: 6,
    GROUP_PARTICIPANT_LEAVE: 7,
    CALL_MISSED_VOICE: 8,
    CALL_MISSED_VIDEO: 9,
});
/**
 *
 */
exports.BaseMessageSchema = typebox_1.Type.Object({
    provider_id: typebox_1.Type.String(),
    sender_id: typebox_1.Type.String(),
    text: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    attachments: typebox_1.Type.Array(exports.MessageAttachmentSchema),
});
/**
 *
 */
exports.MessageDraftAttachmentSchema = typebox_1.Type.Object({
    id: common_types_js_1.UniqueIdSchema,
    fileName: typebox_1.Type.String(),
    mimeType: typebox_1.Type.String(),
    byteSize: typebox_1.Type.Optional(typebox_1.Type.Number()),
    voiceMessage: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
});
/**
 *
 */
exports.MessageDraftSchema = typebox_1.Type.Object({
    id: common_types_js_1.UniqueIdSchema,
    text: typebox_1.Type.String(),
    quote_id: typebox_1.Type.Optional(common_types_js_1.UniqueIdSchema),
    attachments: typebox_1.Type.Array(exports.MessageDraftAttachmentSchema),
});
/**
 *
 */
exports.MessageSchema = typebox_1.Type.Composite([
    exports.BaseMessageSchema,
    typebox_1.Type.Object({
        id: common_types_js_1.UniqueIdSchema,
        account_id: common_types_js_1.UniqueIdSchema,
        chat_id: common_types_js_1.UniqueIdSchema,
        chat_provider_id: typebox_1.Type.String(),
        timestamp: typebox_1.Type.String(),
        is_sender: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        /**
         * #2103
         * @todo Fix Message schema in a way that works with OpenAPI specs ?
         *       Actual Message type is quoted: BaseMessage | undefined;
         *       undefined is not a valid OpenAPI spec value.
         *       It has been loosely translated as Type.Optional which is misleading
         *       and will fail for places / clients who test for the presence of a
         *       property.
         *       Either use quoted: BaseMessage | null or quoted?: BaseMessage.
         */
        // quoted: Type.Union([BaseMessageSchema, Type.Undefined()]),
        quoted: typebox_1.Type.Optional(exports.BaseMessageSchema),
        reactions: typebox_1.Type.Array(exports.MessageReactionSchema),
        seen: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        seen_by: typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Boolean()])),
        hidden: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        deleted: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        edited: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        is_event: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        delivered: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        behavior: typebox_1.Type.Union([exports.MessageBehaviourSchema, typebox_1.Type.Null()]),
        /**
         * #2103
         * @todo Fix Message schema in a way that works with OpenAPI specs ?
         *       Actual Message type is event_type: MessageEventType | undefined;
         *       undefined is not a valid OpenAPI spec value.
         *       It has been loosely translated as Type.Optional which is misleading
         *       and will fail for places / clients who test for the presence of a
         *       property.
         *       Either use quoted: event_type: MessageEventType | null or event_type?: MessageEventType.
         */
        // event_type: Type.Union([MessageEventTypeSchema, Type.Undefined()]),
        event_type: typebox_1.Type.Optional(exports.MessageEventTypeSchema),
        original: typebox_1.Type.String(),
        replies: typebox_1.Type.Optional(typebox_1.Type.Number()),
        reply_by: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())),
        parent: typebox_1.Type.Optional(common_types_js_1.UniqueIdSchema),
        sender_attendee_id: common_types_js_1.UniqueIdSchema,
    }),
]);
