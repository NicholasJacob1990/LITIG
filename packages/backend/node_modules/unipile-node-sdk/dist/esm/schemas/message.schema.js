"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMessageAttachementResponseSchema = exports.getMessagesResponseSchema = exports.getMessageResponseSchema = exports.messageSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const MessageEventTypeSchema = typebox_1.Type.Enum({
    UNKNOWN: 0,
    REACTION: 1,
    REACTION_TO_ME: 2,
    GROUP_CREATE: 3,
    GROUP_CHANGE_SUBJECT: 4,
    GROUP_PARTICIPANT_ADD: 5,
    GROUP_PARTICIPANT_REMOVE: 6,
    GROUP_PARTICIPANT_LEAVE: 7,
    CALL_MISSED_VOICE: 8,
    CALL_MISSED_VIDEO: 9,
});
const MessageReactionSchema = typebox_1.Type.Object({
    value: typebox_1.Type.String(),
    sender_id: typebox_1.Type.String(),
    is_sender: typebox_1.Type.Boolean(),
});
const MessageAttachmentSize = typebox_1.Type.Object({
    width: typebox_1.Type.Number(),
    height: typebox_1.Type.Number(),
});
const BaseMessageAttachmentSchema = typebox_1.Type.Object({
    id: typebox_1.Type.String(),
    file_size: typebox_1.Type.Optional(typebox_1.Type.Number()),
    unavailable: typebox_1.Type.Boolean(),
    mimetype: typebox_1.Type.Optional(typebox_1.Type.String()),
    url: typebox_1.Type.Optional(typebox_1.Type.String()),
});
const MessageImageAttachmentSchema = typebox_1.Type.Composite([
    BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal('img'),
        size: MessageAttachmentSize,
        sticker: typebox_1.Type.Boolean(),
    }),
]);
const MessageVideoAttachmentSchema = typebox_1.Type.Composite([
    BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal('video'),
        size: MessageAttachmentSize,
        gif: typebox_1.Type.Boolean(),
    }),
]);
const MessageAudioAttachmentSchema = typebox_1.Type.Composite([
    BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal('audio'),
        duration: typebox_1.Type.Optional(typebox_1.Type.Number()),
        voice_note: typebox_1.Type.Boolean(),
    }),
]);
const MessageFileAttachmentSchema = typebox_1.Type.Composite([
    BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal('file'),
        file_name: typebox_1.Type.String(),
    }),
]);
const MessageLinkAttachmentSchema = typebox_1.Type.Composite([
    BaseMessageAttachmentSchema,
    typebox_1.Type.Object({
        type: typebox_1.Type.Literal('linkedin_post'),
    }),
]);
const MessageAttachmentSchema = typebox_1.Type.Union([
    MessageImageAttachmentSchema,
    MessageVideoAttachmentSchema,
    MessageAudioAttachmentSchema,
    MessageFileAttachmentSchema,
    MessageLinkAttachmentSchema,
]);
const BaseMessageSchema = typebox_1.Type.Object({
    provider_id: typebox_1.Type.String(),
    sender_id: typebox_1.Type.String(),
    text: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
    attachments: typebox_1.Type.Array(MessageAttachmentSchema),
});
exports.messageSchema = typebox_1.Type.Composite([
    BaseMessageSchema,
    typebox_1.Type.Object({
        id: typebox_1.Type.String(),
        account_id: typebox_1.Type.String(),
        chat_id: typebox_1.Type.String(),
        chat_provider_id: typebox_1.Type.String(),
        timestamp: typebox_1.Type.String(),
        is_sender: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        quoted: typebox_1.Type.Optional(BaseMessageSchema),
        reactions: typebox_1.Type.Array(MessageReactionSchema),
        seen: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        seen_by: typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Boolean()])),
        hidden: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        deleted: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        edited: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        is_event: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        delivered: typebox_1.Type.Union([typebox_1.Type.Literal(0), typebox_1.Type.Literal(1)]),
        behavior: typebox_1.Type.Union([typebox_1.Type.Enum({ SILENT: 0 }), typebox_1.Type.Null()]),
        event_type: typebox_1.Type.Optional(MessageEventTypeSchema),
        original: typebox_1.Type.String(),
        replies: typebox_1.Type.Optional(typebox_1.Type.Number()),
        reply_by: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())),
        parent: typebox_1.Type.Optional(typebox_1.Type.String()),
    }),
]);
exports.getMessageResponseSchema = typebox_1.Type.Composite([
    typebox_1.Type.Object({
        object: typebox_1.Type.Literal('Message'),
    }),
    exports.messageSchema,
]);
exports.getMessagesResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal('MessageList'),
    items: typebox_1.Type.Array(typebox_1.Type.Composite([typebox_1.Type.Object({ object: typebox_1.Type.Literal('Message') }), exports.messageSchema])),
    cursor: typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Null()]),
});
exports.getMessageAttachementResponseSchema = typebox_1.Type.Any();
