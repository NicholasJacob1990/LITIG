"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.postWebhookInputSchema = exports.deleteWebhookResponseSchema = exports.postWebhookResponseSchema = exports.getWebhooksResponseSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const utils_schema_js_1 = require("./utils.schema.js");
const webhookBodyFormatSchema = typebox_1.Type.Union([typebox_1.Type.Literal('json'), typebox_1.Type.Literal('form')]);
const webhookHeaderItemSchema = typebox_1.Type.Object({
    key: typebox_1.Type.String(),
    value: typebox_1.Type.String(),
});
const webhookIconKeySchema = typebox_1.Type.Union([
    typebox_1.Type.Literal('WebhookIcon'),
    typebox_1.Type.Literal('SettingsInputIcon'),
    typebox_1.Type.Literal('LeakAddIcon'),
    typebox_1.Type.Literal('Diversity2Icon'),
    typebox_1.Type.Literal('AutoFixHighIcon'),
    typebox_1.Type.Literal('SignPostIcon'),
    typebox_1.Type.Literal('ShutterSpeedIcon'),
    typebox_1.Type.Literal('SyncAltIcon'),
    typebox_1.Type.Literal('WhatsAppIcon'),
    typebox_1.Type.Literal('LinkedInIcon'),
    typebox_1.Type.Literal('ImportExportIcon'),
    typebox_1.Type.Literal('PodcastsIcon'),
    typebox_1.Type.Literal('CableIcon'),
]);
const webhookButtonSchema = typebox_1.Type.Object({
    icon: webhookIconKeySchema,
    name: typebox_1.Type.String(),
    context: typebox_1.Type.Union([typebox_1.Type.Literal('MESSAGE'), typebox_1.Type.Literal('CHAT')]),
});
const webhookDataKeySchema = typebox_1.Type.Union([
    typebox_1.Type.Literal('account_id'),
    typebox_1.Type.Literal('account_type'),
    typebox_1.Type.Literal('chat_id'),
    typebox_1.Type.Literal('timestamp'),
    typebox_1.Type.Literal('webhook_name'),
    typebox_1.Type.Literal('message_id'),
    typebox_1.Type.Literal('message'),
    typebox_1.Type.Literal('attendee_id'),
    typebox_1.Type.Literal('attendee_name'),
    typebox_1.Type.Literal('attachments'),
]);
const webhookDataItemSchema = typebox_1.Type.Object({
    name: typebox_1.Type.String(),
    key: webhookDataKeySchema,
});
const webhookAccountOptionSchema = typebox_1.Type.Object({
    id: utils_schema_js_1.uniqueIdSchema,
    name: typebox_1.Type.Optional(typebox_1.Type.String()),
    type: utils_schema_js_1.accountSourceProviderSchema,
});
const webhookSchema = typebox_1.Type.Object({
    id: typebox_1.Type.String(),
    type: typebox_1.Type.Union([typebox_1.Type.Literal('AUTO'), typebox_1.Type.Literal('TRIGGER')]),
    account_ids: typebox_1.Type.Array(webhookAccountOptionSchema),
    enabled: typebox_1.Type.Boolean(),
    name: typebox_1.Type.Optional(typebox_1.Type.String()),
    request_url: typebox_1.Type.String(),
    format: webhookBodyFormatSchema,
    headers: webhookHeaderItemSchema,
    data: typebox_1.Type.Array(webhookDataItemSchema),
    trigger: typebox_1.Type.Union([webhookButtonSchema, typebox_1.Type.Never()]),
});
/**
 * create webhook input
 */
const webhookCreateBaseBodySchema = typebox_1.Type.Object({
    request_url: typebox_1.Type.String(),
    name: typebox_1.Type.Optional(typebox_1.Type.String()),
    format: typebox_1.Type.Optional(webhookBodyFormatSchema),
    account_ids: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())),
    enabled: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    headers: typebox_1.Type.Optional(typebox_1.Type.Array(webhookHeaderItemSchema)),
});
const webhookCreateMessagingBodySchema = typebox_1.Type.Composite([
    webhookCreateBaseBodySchema,
    typebox_1.Type.Object({
        source: typebox_1.Type.Literal('messaging'),
        data: typebox_1.Type.Array(webhookDataItemSchema),
    }),
]);
const webhookCreateAccountsStatusBodySchema = typebox_1.Type.Composite([
    webhookCreateBaseBodySchema,
    typebox_1.Type.Object({
        source: typebox_1.Type.Literal('account_status'),
    }),
]);
exports.getWebhooksResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal('WebhookList'),
    items: typebox_1.Type.Array(typebox_1.Type.Composite([typebox_1.Type.Object({ object: typebox_1.Type.Literal('Webhook') }), webhookSchema])),
});
exports.postWebhookResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal('WebhookCreated'),
    webhook_id: typebox_1.Type.String(),
});
exports.deleteWebhookResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal('WebhookDeleted'),
});
exports.postWebhookInputSchema = typebox_1.Type.Union([webhookCreateMessagingBodySchema, webhookCreateAccountsStatusBodySchema]);
