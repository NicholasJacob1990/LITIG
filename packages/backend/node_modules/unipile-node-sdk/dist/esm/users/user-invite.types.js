"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserInviteApiResponseValidator = exports.UserInviteApiResponseSchema = exports.UserInviteBodyValidator = exports.UserInviteBodySchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const compiler_1 = require("@sinclair/typebox/compiler");
// --------------------------------------------------------------------------
// REQUEST
// --------------------------------------------------------------------------
exports.UserInviteBodySchema = typebox_1.Type.Object({
    provider_id: typebox_1.Type.String({
        description: "The id of the user to add. It has to be the providerâ€™s id.",
    }),
    account_id: typebox_1.Type.String({
        description: "The id of the account where the user will be added.",
    }),
    message: typebox_1.Type.Optional(typebox_1.Type.String({
        maxLength: 300,
        description: "An optional message to go with the invitation (max 300 chars).",
    })),
});
// export const getUserInviteBodyOpenApiSchema =
//   makeOpenApiSchemaGetter(UserInviteBodySchema);
exports.UserInviteBodyValidator = compiler_1.TypeCompiler.Compile(exports.UserInviteBodySchema);
// --------------------------------------------------------------------------
// RESPONSE
// --------------------------------------------------------------------------
exports.UserInviteApiResponseSchema = typebox_1.Type.Object({
    object: typebox_1.Type.Literal("UserInvitationSent"),
    invitation_id: typebox_1.Type.String(),
});
// export const getUserInviteResponseOpenApiSchema = makeOpenApiSchemaGetter(
//   UserInviteApiResponseSchema
// );
/**  */
exports.UserInviteApiResponseValidator = compiler_1.TypeCompiler.Compile(exports.UserInviteApiResponseSchema);
