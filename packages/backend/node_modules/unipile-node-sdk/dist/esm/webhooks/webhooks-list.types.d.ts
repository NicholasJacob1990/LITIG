import { Static } from '@sinclair/typebox';
import { RequiredProps } from '../common/core.types.tmp.js';
/**
 *
 */
export declare const WebhookListDecodedCursorSchema: import("@sinclair/typebox").TObject<{
    cursor: import("@sinclair/typebox").TObject<{
        last_id: import("@sinclair/typebox").TString;
    }>;
    limit: import("@sinclair/typebox").TInteger;
}>;
export type WebhookListDecodedCursor = Static<typeof WebhookListDecodedCursorSchema>;
export declare const WebhookListDecodedCursorValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    cursor: import("@sinclair/typebox").TObject<{
        last_id: import("@sinclair/typebox").TString;
    }>;
    limit: import("@sinclair/typebox").TInteger;
}>>;
/**
 *
 */
export declare const WebhookListBaseQuerySchema: import("@sinclair/typebox").TObject<{
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
}>;
export type WebhookListBaseQuery = Static<typeof WebhookListBaseQuerySchema>;
/**
 *
 */
export declare const WebhookListQuerySchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
}>, import("@sinclair/typebox").TObject<{
    cursor: import("@sinclair/typebox").TString;
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
}>]>;
export type WebhookListQuery = Static<typeof WebhookListQuerySchema>;
/**
 *
 */
export declare const WebhookListQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
}>, import("@sinclair/typebox").TObject<{
    cursor: import("@sinclair/typebox").TString;
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
}>]>>;
/**
 *
 */
export type WebhookListQueryDTO = RequiredProps<WebhookListBaseQuery, 'limit'> | {
    cursor: WebhookListDecodedCursor;
};
/**
 *
 */
export declare const WebhookListResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"WebhookList">;
    items: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Webhook">;
        type: import("@sinclair/typebox").TLiteral<"AUTO">;
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
        }>>]>;
        format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
        account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
        }>>;
        enabled: import("@sinclair/typebox").TBoolean;
        request_url: import("@sinclair/typebox").TString;
        headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            key: import("@sinclair/typebox").TString;
            value: import("@sinclair/typebox").TString;
        }>>;
        events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
    }>, import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Webhook">;
        type: import("@sinclair/typebox").TLiteral<"TRIGGER">;
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
        }>>]>;
        format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
        account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
        }>>;
        enabled: import("@sinclair/typebox").TBoolean;
        request_url: import("@sinclair/typebox").TString;
        headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            key: import("@sinclair/typebox").TString;
            value: import("@sinclair/typebox").TString;
        }>>;
        trigger: import("@sinclair/typebox").TObject<{
            icon: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WebhookIcon">, import("@sinclair/typebox").TLiteral<"SettingsInputIcon">, import("@sinclair/typebox").TLiteral<"LeakAddIcon">, import("@sinclair/typebox").TLiteral<"Diversity2Icon">, import("@sinclair/typebox").TLiteral<"AutoFixHighIcon">, import("@sinclair/typebox").TLiteral<"SignPostIcon">, import("@sinclair/typebox").TLiteral<"ShutterSpeedIcon">, import("@sinclair/typebox").TLiteral<"SyncAltIcon">, import("@sinclair/typebox").TLiteral<"WhatsAppIcon">, import("@sinclair/typebox").TLiteral<"LinkedInIcon">, import("@sinclair/typebox").TLiteral<"ImportExportIcon">, import("@sinclair/typebox").TLiteral<"PodcastsIcon">, import("@sinclair/typebox").TLiteral<"CableIcon">]>;
            name: import("@sinclair/typebox").TString;
            context: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MESSAGE">, import("@sinclair/typebox").TLiteral<"CHAT">]>;
        }>;
        events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
    }>]>>;
    cursor: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/query-cursor.js").EncodedQueryCursor>, import("@sinclair/typebox").TNull]>;
}>;
export type WebhookListResponse = Static<typeof WebhookListResponseSchema>;
/**  */
export declare const WebhookListResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"WebhookList">;
    items: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Webhook">;
        type: import("@sinclair/typebox").TLiteral<"AUTO">;
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
        }>>]>;
        format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
        account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
        }>>;
        enabled: import("@sinclair/typebox").TBoolean;
        request_url: import("@sinclair/typebox").TString;
        headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            key: import("@sinclair/typebox").TString;
            value: import("@sinclair/typebox").TString;
        }>>;
        events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
    }>, import("@sinclair/typebox").TObject<{
        object: import("@sinclair/typebox").TLiteral<"Webhook">;
        type: import("@sinclair/typebox").TLiteral<"TRIGGER">;
        id: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        data: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"message" | "account_id" | "attachments" | "chat_id" | "timestamp" | "account_type" | "webhook_name" | "message_id" | "attendees" | "reaction" | "reaction_sender" | "sender">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"origin" | "body" | "role" | "date" | "account_id" | "provider_id" | "attachments" | "webhook_name" | "message_id" | "subject" | "tracking_id" | "folders" | "read_date" | "body_plain" | "from_attendee" | "to_attendees" | "cc_attendees" | "bcc_attendees" | "reply_to_attendees" | "has_attachments" | "in_reply_to" | "email_id" | "is_complete">;
        }>>, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            name: import("@sinclair/typebox").TString;
            key: import("@sinclair/typebox").TUnsafe<"type" | "url" | "label" | "date" | "account_id" | "user_agent" | "tracking_id" | "email_id" | "event_id" | "ip" | "custom_domain">;
        }>>]>;
        format: import("@sinclair/typebox").TUnsafe<"form" | "json">;
        account_ids: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"GOOGLE">, import("@sinclair/typebox").TLiteral<"GOOGLE_CALENDAR">, import("@sinclair/typebox").TLiteral<"ICLOUD">, import("@sinclair/typebox").TLiteral<"LINKEDIN">, import("@sinclair/typebox").TLiteral<"MAIL">, import("@sinclair/typebox").TLiteral<"MOBILE">, import("@sinclair/typebox").TLiteral<"OUTLOOK">, import("@sinclair/typebox").TLiteral<"TWITTER">, import("@sinclair/typebox").TLiteral<"WHATSAPP">, import("@sinclair/typebox").TLiteral<"SLACK">, import("@sinclair/typebox").TLiteral<"TELEGRAM">]>;
        }>>;
        enabled: import("@sinclair/typebox").TBoolean;
        request_url: import("@sinclair/typebox").TString;
        headers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            key: import("@sinclair/typebox").TString;
            value: import("@sinclair/typebox").TString;
        }>>;
        trigger: import("@sinclair/typebox").TObject<{
            icon: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"WebhookIcon">, import("@sinclair/typebox").TLiteral<"SettingsInputIcon">, import("@sinclair/typebox").TLiteral<"LeakAddIcon">, import("@sinclair/typebox").TLiteral<"Diversity2Icon">, import("@sinclair/typebox").TLiteral<"AutoFixHighIcon">, import("@sinclair/typebox").TLiteral<"SignPostIcon">, import("@sinclair/typebox").TLiteral<"ShutterSpeedIcon">, import("@sinclair/typebox").TLiteral<"SyncAltIcon">, import("@sinclair/typebox").TLiteral<"WhatsAppIcon">, import("@sinclair/typebox").TLiteral<"LinkedInIcon">, import("@sinclair/typebox").TLiteral<"ImportExportIcon">, import("@sinclair/typebox").TLiteral<"PodcastsIcon">, import("@sinclair/typebox").TLiteral<"CableIcon">]>;
            name: import("@sinclair/typebox").TString;
            context: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"MESSAGE">, import("@sinclair/typebox").TLiteral<"CHAT">]>;
        }>;
        events: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"message_received" | "message_read" | "message_reaction">, import("@sinclair/typebox").TUnsafe<"mail_sent" | "mail_received">, import("@sinclair/typebox").TUnsafe<"mail_opened" | "mail_link_clicked">]>>>;
    }>]>>;
    cursor: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<import("../common/query-cursor.js").EncodedQueryCursor>, import("@sinclair/typebox").TNull]>;
}>>;
