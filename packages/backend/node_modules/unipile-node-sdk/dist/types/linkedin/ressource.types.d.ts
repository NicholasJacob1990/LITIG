import { Static } from '@sinclair/typebox';
export declare const LinkedinCompanyProfileSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    description: import("@sinclair/typebox").TString;
    entity_urn: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TString;
    profile_url: import("@sinclair/typebox").TString;
    tagline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    followers_count: import("@sinclair/typebox").TNumber;
    is_following: import("@sinclair/typebox").TBoolean;
    is_employee: import("@sinclair/typebox").TBoolean;
    messaging: import("@sinclair/typebox").TObject<{
        is_enabled: import("@sinclair/typebox").TBoolean;
        id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        entity_urn: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    default_locale: import("@sinclair/typebox").TString;
    viewer_permissions: import("@sinclair/typebox").TObject<{
        canMembersInviteToFollow: import("@sinclair/typebox").TBoolean;
        canReadContentSuggestions: import("@sinclair/typebox").TBoolean;
        canReadMessages: import("@sinclair/typebox").TBoolean;
        canUpdateOrganizationProfile: import("@sinclair/typebox").TBoolean;
        canCreateOrganicShare: import("@sinclair/typebox").TBoolean;
        canReadAdminDashboard: import("@sinclair/typebox").TBoolean;
        canReadOrganizationActivity: import("@sinclair/typebox").TBoolean;
        canEditCurators: import("@sinclair/typebox").TBoolean;
        canManageOrganizationalPageFollow: import("@sinclair/typebox").TBoolean;
        canReadOrganizationFollowerAnalytics: import("@sinclair/typebox").TBoolean;
        canInviteMemberToFollow: import("@sinclair/typebox").TBoolean;
        canReadOrganizationLeadsAnalytics: import("@sinclair/typebox").TBoolean;
        canEditPendingAdministrators: import("@sinclair/typebox").TBoolean;
        canManageMessagingAccess: import("@sinclair/typebox").TBoolean;
        canSeeEmployeeExperienceAsMember: import("@sinclair/typebox").TBoolean;
        canEmployeesInviteToFollow: import("@sinclair/typebox").TBoolean;
        canSeeOrganizationAdministrativePage: import("@sinclair/typebox").TBoolean;
    }>;
    organization_type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"PUBLIC_COMPANY">, import("@sinclair/typebox").TLiteral<"EDUCATIONAL">, import("@sinclair/typebox").TLiteral<"SELF_EMPLOYED">, import("@sinclair/typebox").TLiteral<"GOVERNMENT_AGENCY">, import("@sinclair/typebox").TLiteral<"NON_PROFIT">, import("@sinclair/typebox").TLiteral<"SELF_OWNED">, import("@sinclair/typebox").TLiteral<"PRIVATELY_HELD">, import("@sinclair/typebox").TLiteral<"PARTNERSHIP">]>;
    locations: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        is_headquarter: import("@sinclair/typebox").TBoolean;
        country: import("@sinclair/typebox").TString;
        city: import("@sinclair/typebox").TString;
        postalCode: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        street: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
        description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        area: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>;
    logo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    localized_description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    localized_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    localized_tagline: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>>>;
    industry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    activities: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    employee_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    website: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    foundation_date: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    insights: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        employeesCount: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            totalCount: import("@sinclair/typebox").TNumber;
            averageTenure: import("@sinclair/typebox").TString;
            employeesCountGraph: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                date: import("@sinclair/typebox").TString;
                count: import("@sinclair/typebox").TNumber;
            }>>;
            growthGraph: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                monthRange: import("@sinclair/typebox").TNumber;
                growthPercentage: import("@sinclair/typebox").TNumber;
            }>>;
        }>>;
    }>>;
}>;
export type LinkedinCompanyProfile = Static<typeof LinkedinCompanyProfileSchema>;
/**
 *
 */
export declare const LinkedinHiringProjectSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    owner_name: import("@sinclair/typebox").TString;
    owner_id: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TString;
}>;
export type LinkedinHiringProject = Static<typeof LinkedinHiringProjectSchema>;
/**
 *
 */
export declare const LinkedinSearchItemSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    title: import("@sinclair/typebox").TString;
    additional_data: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNumber, import("@sinclair/typebox").TBoolean]>>>;
}>;
export type LinkedinSearchItem = Static<typeof LinkedinSearchItemSchema>;
export declare const LinkedinPeopleSearchResultSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"PEOPLE">;
    id: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    public_profile_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_picture_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    member_urn: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    network_distance: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"DISTANCE_1">, import("@sinclair/typebox").TLiteral<"DISTANCE_2">, import("@sinclair/typebox").TLiteral<"DISTANCE_3">, import("@sinclair/typebox").TLiteral<"OUT_OF_NETWORK">]>;
    location: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    industry: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    headline: import("@sinclair/typebox").TString;
    connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    pending_invitation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    can_send_inmail: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    recruiter_candidate_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    open_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    shared_connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    last_outreach_activity: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"SEND_MESSAGE">, import("@sinclair/typebox").TLiteral<"ACCEPT_INVITATION">]>;
        performed_at: import("@sinclair/typebox").TString;
    }>>;
    current_positions: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        role: import("@sinclair/typebox").TString;
        location: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        tenure_at_role: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            years: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            months: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
        tenure_at_company: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            years: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            months: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
        start: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
        end: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
    }>>>;
    education: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        degree: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        school: import("@sinclair/typebox").TString;
        school_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        start: import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>;
        end: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
    }>>>;
    work_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        role: import("@sinclair/typebox").TString;
        industry: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        start: import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>;
        end: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
    }>>>;
}>;
export declare const LinkedinCompanySearchResultSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"COMPANY">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    location: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_url: import("@sinclair/typebox").TString;
    industry: import("@sinclair/typebox").TString;
    summary: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    followers_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    job_offers_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    headcount: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export declare const LinkedinPostSearchResultSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"POST">;
    id: import("@sinclair/typebox").TString;
    text: import("@sinclair/typebox").TString;
    attachments: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"img">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        sticker: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"video">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        gif: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"audio">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        duration: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        voice_note: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"file">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_name: import("@sinclair/typebox").TString;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"linkedin_post">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>]>>;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    date: import("@sinclair/typebox").TString;
    title: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    social_id: import("@sinclair/typebox").TString;
    share_url: import("@sinclair/typebox").TString;
    parsed_datetime: import("@sinclair/typebox").TString;
    reaction_counter: import("@sinclair/typebox").TNumber;
    comment_counter: import("@sinclair/typebox").TNumber;
    repost_counter: import("@sinclair/typebox").TNumber;
    impressions_counter: import("@sinclair/typebox").TNumber;
    author: import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>;
    permissions: import("@sinclair/typebox").TObject<{
        can_react: import("@sinclair/typebox").TBoolean;
        can_share: import("@sinclair/typebox").TBoolean;
        can_post_comments: import("@sinclair/typebox").TBoolean;
    }>;
    is_repost: import("@sinclair/typebox").TBoolean;
    repost_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    reposted_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>>;
    repost_content: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        date: import("@sinclair/typebox").TString;
        parsed_datetime: import("@sinclair/typebox").TString;
        author: import("@sinclair/typebox").TObject<{
            public_identifier: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
            is_company: import("@sinclair/typebox").TBoolean;
        }>;
        text: import("@sinclair/typebox").TString;
    }>>;
    poll: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        total_votes_count: import("@sinclair/typebox").TNumber;
        question: import("@sinclair/typebox").TString;
        is_open: import("@sinclair/typebox").TBoolean;
        options: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            text: import("@sinclair/typebox").TString;
            win: import("@sinclair/typebox").TBoolean;
            votes_count: import("@sinclair/typebox").TNumber;
        }>>;
    }>>;
}>;
export declare const LinkedinSearchResultSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"PEOPLE">;
    id: import("@sinclair/typebox").TString;
    public_identifier: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    public_profile_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_picture_url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    member_urn: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    network_distance: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"DISTANCE_1">, import("@sinclair/typebox").TLiteral<"DISTANCE_2">, import("@sinclair/typebox").TLiteral<"DISTANCE_3">, import("@sinclair/typebox").TLiteral<"OUT_OF_NETWORK">]>;
    location: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    industry: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    headline: import("@sinclair/typebox").TString;
    connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    pending_invitation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    can_send_inmail: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    recruiter_candidate_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    open_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    shared_connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    last_outreach_activity: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"SEND_MESSAGE">, import("@sinclair/typebox").TLiteral<"ACCEPT_INVITATION">]>;
        performed_at: import("@sinclair/typebox").TString;
    }>>;
    current_positions: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        role: import("@sinclair/typebox").TString;
        location: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        tenure_at_role: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            years: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            months: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
        tenure_at_company: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            years: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            months: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
        start: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
        end: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
    }>>>;
    education: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        degree: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        school: import("@sinclair/typebox").TString;
        school_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        start: import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>;
        end: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
    }>>>;
    work_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        role: import("@sinclair/typebox").TString;
        industry: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        start: import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>;
        end: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            year: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            month: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
    }>>>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"COMPANY">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    location: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_url: import("@sinclair/typebox").TString;
    industry: import("@sinclair/typebox").TString;
    summary: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    followers_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    job_offers_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    headcount: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"POST">;
    id: import("@sinclair/typebox").TString;
    text: import("@sinclair/typebox").TString;
    attachments: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"img">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        sticker: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"video">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        size: import("@sinclair/typebox").TObject<{
            width: import("@sinclair/typebox").TNumber;
            height: import("@sinclair/typebox").TNumber;
        }>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        gif: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"audio">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        duration: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        voice_note: import("@sinclair/typebox").TBoolean;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"file">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_name: import("@sinclair/typebox").TString;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"linkedin_post">;
        id: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        file_size: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        unavailable: import("@sinclair/typebox").TBoolean;
        mimetype: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        url_expires_at: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>]>>;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    date: import("@sinclair/typebox").TString;
    title: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    social_id: import("@sinclair/typebox").TString;
    share_url: import("@sinclair/typebox").TString;
    parsed_datetime: import("@sinclair/typebox").TString;
    reaction_counter: import("@sinclair/typebox").TNumber;
    comment_counter: import("@sinclair/typebox").TNumber;
    repost_counter: import("@sinclair/typebox").TNumber;
    impressions_counter: import("@sinclair/typebox").TNumber;
    author: import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>;
    permissions: import("@sinclair/typebox").TObject<{
        can_react: import("@sinclair/typebox").TBoolean;
        can_share: import("@sinclair/typebox").TBoolean;
        can_post_comments: import("@sinclair/typebox").TBoolean;
    }>;
    is_repost: import("@sinclair/typebox").TBoolean;
    repost_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    reposted_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        public_identifier: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
        is_company: import("@sinclair/typebox").TBoolean;
    }>>;
    repost_content: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        date: import("@sinclair/typebox").TString;
        parsed_datetime: import("@sinclair/typebox").TString;
        author: import("@sinclair/typebox").TObject<{
            public_identifier: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
            is_company: import("@sinclair/typebox").TBoolean;
        }>;
        text: import("@sinclair/typebox").TString;
    }>>;
    poll: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        total_votes_count: import("@sinclair/typebox").TNumber;
        question: import("@sinclair/typebox").TString;
        is_open: import("@sinclair/typebox").TBoolean;
        options: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            text: import("@sinclair/typebox").TString;
            win: import("@sinclair/typebox").TBoolean;
            votes_count: import("@sinclair/typebox").TNumber;
        }>>;
    }>>;
}>]>;
export type LinkedinSearchResult = Static<typeof LinkedinSearchResultSchema>;
