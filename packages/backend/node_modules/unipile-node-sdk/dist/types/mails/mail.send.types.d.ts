/// <reference types="node" />
/// <reference types="node" />
import { Static } from "@sinclair/typebox";
/**
 *
 */
export declare const MailSentApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"EmailSent">;
    tracking_id: import("@sinclair/typebox").TString;
}>;
/**
 *
 */
export type MailSentApiResponse = Static<typeof MailSentApiResponseSchema>;
export declare const AttachmentPostQuerySchema: import("@sinclair/typebox").TObject<{
    fieldname: import("@sinclair/typebox").TString;
    originalname: import("@sinclair/typebox").TString;
    encoding: import("@sinclair/typebox").TString;
    mimetype: import("@sinclair/typebox").TString;
    size: import("@sinclair/typebox").TNumber;
    buffer: import("@sinclair/typebox").TUnsafe<Buffer>;
    stream: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("stream").Readable>>;
    destination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    filename: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type AttachmentPostQuery = Static<typeof AttachmentPostQuerySchema>;
export declare const AttachmentsPostQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
    fieldname: import("@sinclair/typebox").TString;
    originalname: import("@sinclair/typebox").TString;
    encoding: import("@sinclair/typebox").TString;
    mimetype: import("@sinclair/typebox").TString;
    size: import("@sinclair/typebox").TNumber;
    buffer: import("@sinclair/typebox").TUnsafe<Buffer>;
    stream: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("stream").Readable>>;
    destination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    filename: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>>>>;
/**  */
export declare const MailSentApiResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"EmailSent">;
    tracking_id: import("@sinclair/typebox").TString;
}>>;
