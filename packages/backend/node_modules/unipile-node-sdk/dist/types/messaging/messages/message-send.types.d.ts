/// <reference types="node" />
/// <reference types="node" />
import { Static } from "@sinclair/typebox";
import { UniqueId } from "../../common/common.types.js";
import { OptionalToUnionUndefined } from "../../common/core.types.tmp.js";
import { MessageDraftAttachment } from "./ressource.types.js";
/**
 *
 */
export declare const SendMessageToChatBodySchema: import("@sinclair/typebox").TObject<{
    text: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    thread_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    attachments: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
}>;
export type SendMessageToChatBody = Static<typeof SendMessageToChatBodySchema>;
/**
 *
 */
export declare const SendMessageToChatBodyValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    text: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    thread_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    attachments: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
}>>;
export type MessageSendBodyDTO = Omit<OptionalToUnionUndefined<SendMessageToChatBody, "thread_id">, "attachments" | "voice_message"> & {
    chat_id: UniqueId;
    voice_message?: AttachmentPostQuery;
    attachments?: AttachmentPostQuery[];
};
export type MessageSendDTO = Omit<OptionalToUnionUndefined<SendMessageToChatBody, "thread_id">, "attachments" | "voice_message"> & {
    chat_id: UniqueId;
    voice_message?: MessageDraftAttachment;
    attachments?: MessageDraftAttachment[];
};
export declare const AttachmentPostQuerySchema: import("@sinclair/typebox").TObject<{
    fieldname: import("@sinclair/typebox").TString;
    originalname: import("@sinclair/typebox").TString;
    encoding: import("@sinclair/typebox").TString;
    mimetype: import("@sinclair/typebox").TString;
    size: import("@sinclair/typebox").TNumber;
    buffer: import("@sinclair/typebox").TUnsafe<Buffer>;
    stream: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("stream").Readable>>;
    destination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    filename: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type AttachmentPostQuery = Static<typeof AttachmentPostQuerySchema>;
export declare const AttachmentsPostQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
    fieldname: import("@sinclair/typebox").TString;
    originalname: import("@sinclair/typebox").TString;
    encoding: import("@sinclair/typebox").TString;
    mimetype: import("@sinclair/typebox").TString;
    size: import("@sinclair/typebox").TNumber;
    buffer: import("@sinclair/typebox").TUnsafe<Buffer>;
    stream: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("stream").Readable>>;
    destination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    filename: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>>>>;
export declare const FilesPostQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    attachments: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        fieldname: import("@sinclair/typebox").TString;
        originalname: import("@sinclair/typebox").TString;
        encoding: import("@sinclair/typebox").TString;
        mimetype: import("@sinclair/typebox").TString;
        size: import("@sinclair/typebox").TNumber;
        buffer: import("@sinclair/typebox").TUnsafe<Buffer>;
        stream: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("stream").Readable>>;
        destination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        filename: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    voice_message: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        fieldname: import("@sinclair/typebox").TString;
        originalname: import("@sinclair/typebox").TString;
        encoding: import("@sinclair/typebox").TString;
        mimetype: import("@sinclair/typebox").TString;
        size: import("@sinclair/typebox").TNumber;
        buffer: import("@sinclair/typebox").TUnsafe<Buffer>;
        stream: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("stream").Readable>>;
        destination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        filename: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
}>>;
export declare const VoiceMessagePostQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    fieldname: import("@sinclair/typebox").TString;
    originalname: import("@sinclair/typebox").TString;
    encoding: import("@sinclair/typebox").TString;
    mimetype: import("@sinclair/typebox").TString;
    size: import("@sinclair/typebox").TNumber;
    buffer: import("@sinclair/typebox").TUnsafe<Buffer>;
    stream: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<import("stream").Readable>>;
    destination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    filename: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>, import("@sinclair/typebox").TNull]>>;
export declare const MessageSentResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"MessageSent">;
    message_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
}>;
export type MessageSentResponse = Static<typeof MessageSentResponseSchema>;
/**  */
export declare const MessageSentResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"MessageSent">;
    message_id: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
}>>;
