import { Static } from "@sinclair/typebox";
import { MessageDraftAttachment } from "../messaging/messages/ressource.types.js";
import { AttachmentPostQuery } from "../mails/mail.send.types.js";
export declare const CreatePostTwitterOptionsSchema: import("@sinclair/typebox").TObject<{
    reply_policy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"EVERYONE">, import("@sinclair/typebox").TLiteral<"FOLLOWING">, import("@sinclair/typebox").TLiteral<"MENTIONED">, import("@sinclair/typebox").TLiteral<"VERIFIED">]>>;
    in_reply_to: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type CreatePostTwitterOptions = Static<typeof CreatePostTwitterOptionsSchema>;
export declare const CreatePostOptionsSchema: import("@sinclair/typebox").TObject<{
    reply_policy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"EVERYONE">, import("@sinclair/typebox").TLiteral<"FOLLOWING">, import("@sinclair/typebox").TLiteral<"MENTIONED">, import("@sinclair/typebox").TLiteral<"VERIFIED">]>>;
    in_reply_to: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type CreatePostOptions = CreatePostTwitterOptions;
export declare const CreatePostBodySchema: import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TString;
    text: import("@sinclair/typebox").TString;
    attachments: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
}>;
export type CreatePostBody = Static<typeof CreatePostBodySchema>;
export declare const CreatePostBodyValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TString;
    text: import("@sinclair/typebox").TString;
    attachments: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
}>>;
export type CreatePostBodyDTO = Omit<CreatePostBody, "attachments"> & {
    attachments?: AttachmentPostQuery[];
};
export type CreatePostDTO = Omit<CreatePostBody, "attachments"> & {
    attachments?: MessageDraftAttachment[];
};
export declare const CreatePostResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"PostCreated">;
}>;
export type CreatePostResponse = Static<typeof CreatePostResponseSchema>;
/**  */
export declare const CreatePostResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"PostCreated">;
}>>;
