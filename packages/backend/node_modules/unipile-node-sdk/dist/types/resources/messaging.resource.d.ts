import { GetAllAttendeesInput, GetAllChatsInput, GetAllMessagesFromChatInput, GetAllMessagesInput, GetMessageAttachementInput, PostMessageInput, RequestOptions, UnipileClient, GetAllMessagesFromAttendeeInput, GetAllChatsFromAttendeeInput, PostNewChatInput, PerformActionInput } from '../index.js';
import { ChatListApiResponse } from '../messaging/chats/chats-list.types.js';
import { ChatResponse } from '../messaging/chats/chat.types.js';
import { MessageListApiResponse } from '../messaging/messages/message-list.types.js';
import { MessageSentResponse } from '../messaging/messages/message-send.types.js';
import { ChatStartedApiResponse } from '../messaging/chats/chat-start.types.js';
import { ChatAttendeeByChatListApiResponse, ChatAttendeeListApiResponse } from '../messaging/chat-attendees/chat-attendees-list.types.js';
import { MessageResponse } from '../messaging/messages/message.types.js';
import { ChatAttendeeResponse } from '../messaging/chat-attendees/chat-attendee.types.js';
import { ChatPatchedApiResponse } from '../messaging/chats/chat-patch.types.js';
export declare class MessagingResource {
    private client;
    constructor(client: UnipileClient);
    getAllChats(input?: GetAllChatsInput, options?: RequestOptions): Promise<ChatListApiResponse>;
    getChat(chatId: string, options?: RequestOptions): Promise<ChatResponse>;
    getAllMessagesFromChat(input: GetAllMessagesFromChatInput, options?: RequestOptions): Promise<MessageListApiResponse>;
    sendMessage(input: PostMessageInput, options?: RequestOptions): Promise<MessageSentResponse>;
    startNewChat(input: PostNewChatInput, options?: RequestOptions): Promise<ChatStartedApiResponse>;
    getAllAttendeesFromChat(chat_id: string, options?: RequestOptions): Promise<ChatAttendeeByChatListApiResponse>;
    getMessage(message_id: string, options?: RequestOptions): Promise<MessageResponse>;
    getAllMessages(input?: GetAllMessagesInput, options?: RequestOptions): Promise<MessageListApiResponse>;
    getAllMessagesFromAttendee(input: GetAllMessagesFromAttendeeInput, options?: RequestOptions): Promise<MessageListApiResponse>;
    getAllChatsFromAttendee(input: GetAllChatsFromAttendeeInput, options?: RequestOptions): Promise<ChatListApiResponse>;
    getMessageAttachment(input: GetMessageAttachementInput, options?: RequestOptions): Promise<Blob>;
    getAllAttendees(input?: GetAllAttendeesInput, options?: RequestOptions): Promise<ChatAttendeeListApiResponse>;
    getAttendee(attendee_id: string, options?: RequestOptions): Promise<ChatAttendeeResponse>;
    setChatStatus(input: PerformActionInput, options?: RequestOptions): Promise<ChatPatchedApiResponse>;
}
