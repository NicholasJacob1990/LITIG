import { Static } from "@sinclair/typebox";
export declare const LinkedinSection: import("@sinclair/typebox").TUnsafe<"experience" | "education" | "languages" | "skills" | "certifications" | "about">;
export declare const LinkedinSectionSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"experience" | "education" | "languages" | "skills" | "certifications" | "about">, import("@sinclair/typebox").TLiteral<"*">, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"experience" | "education" | "languages" | "skills" | "certifications" | "about">>]>;
export declare const UserProfileQuerySchema: import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TString;
    notify: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    linkedin_api: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<"sales_navigator" | "recruiter">>;
    linkedin_sections: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"experience" | "education" | "languages" | "skills" | "certifications" | "about">, import("@sinclair/typebox").TLiteral<"*">, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"experience" | "education" | "languages" | "skills" | "certifications" | "about">>]>>;
}>;
export declare enum LinkedinApiTypeEnum {
    RECRUITER = "recruiter",
    SALES_NAVIGATOR = "sales_navigator"
}
export type UserProfileQuery = Static<typeof UserProfileQuerySchema>;
export declare const UserProfileQueryValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    account_id: import("@sinclair/typebox").TString;
    notify: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    linkedin_api: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<"sales_navigator" | "recruiter">>;
    linkedin_sections: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TUnsafe<"experience" | "education" | "languages" | "skills" | "certifications" | "about">, import("@sinclair/typebox").TLiteral<"*">, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnsafe<"experience" | "education" | "languages" | "skills" | "certifications" | "about">>]>>;
}>>;
export declare const LinkedinProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    provider_id: import("@sinclair/typebox").TString;
    is_self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    public_identifier: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    headline: import("@sinclair/typebox").TString;
    first_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    last_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    summary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    education: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        degree: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        school: import("@sinclair/typebox").TString;
        field_of_study: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    languages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        proficiency: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    skills: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        endorsement_count: import("@sinclair/typebox").TNumber;
    }>>>;
    certifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        organization: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    network_distance: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"FIRST_DEGREE">, import("@sinclair/typebox").TLiteral<"SECOND_DEGREE">, import("@sinclair/typebox").TLiteral<"THIRD_DEGREE">, import("@sinclair/typebox").TLiteral<"OUT_OF_NETWORK">]>>;
    contact_info: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        emails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        phones: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        adresses: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        socials: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
        }>>>;
    }>>;
    websites: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    birthdate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        month: import("@sinclair/typebox").TNumber;
        day: import("@sinclair/typebox").TNumber;
    }>>;
    primary_locale: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        country: import("@sinclair/typebox").TString;
        language: import("@sinclair/typebox").TString;
    }>>;
    background_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    hashtags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    can_send_inmail: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_influencer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_creator: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_hiring: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_to_work: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_saved_lead: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_crm_imported: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_relationship: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    invitation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"SENT">, import("@sinclair/typebox").TLiteral<"RECEIVED">]>;
        status: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"PENDING">, import("@sinclair/typebox").TLiteral<"IGNORED">, import("@sinclair/typebox").TLiteral<"WITHDRAWN">]>;
    }>>;
    work_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        position: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        company: import("@sinclair/typebox").TString;
        location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        current: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    volunteering_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        description: import("@sinclair/typebox").TString;
        role: import("@sinclair/typebox").TString;
        cause: import("@sinclair/typebox").TString;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    follower_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    shared_connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
}>;
export declare const WhatsappProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"WHATSAPP">;
}>;
export declare const InstagramProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    username: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"INSTAGRAM">;
    follower_count: import("@sinclair/typebox").TNumber;
    pk: import("@sinclair/typebox").TNumber;
    full_name: import("@sinclair/typebox").TString;
    profile_pic_url: import("@sinclair/typebox").TString;
    biography: import("@sinclair/typebox").TString;
    following_count: import("@sinclair/typebox").TNumber;
    is_verified: import("@sinclair/typebox").TBoolean;
    is_business: import("@sinclair/typebox").TBoolean;
    is_private: import("@sinclair/typebox").TBoolean;
}>;
export declare const TelegramProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    provider_id: import("@sinclair/typebox").TString;
    deleted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    username: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    provider: import("@sinclair/typebox").TLiteral<"TELEGRAM">;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        expires: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        was_online: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TNull]>>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_picture_url: import("@sinclair/typebox").TString;
    self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    mutual_contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    bot: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    verified: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restricted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    fake: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    close_friend: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restriction_reason: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        platform: import("@sinclair/typebox").TString;
        reason: import("@sinclair/typebox").TString;
        text: import("@sinclair/typebox").TString;
    }>>, import("@sinclair/typebox").TNull]>>;
    lang_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
}>;
export declare const TwitterProfileApiResponseSchema: import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    provider: import("@sinclair/typebox").TLiteral<"TWITTER">;
    description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    followers_count: import("@sinclair/typebox").TNumber;
    location: import("@sinclair/typebox").TString;
    verified: import("@sinclair/typebox").TBoolean;
    notifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    screen_name: import("@sinclair/typebox").TString;
    entities: import("@sinclair/typebox").TObject<{
        description: import("@sinclair/typebox").TObject<{
            urls: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TAny>;
        }>;
    }>;
    protected: import("@sinclair/typebox").TBoolean;
    friends_count: import("@sinclair/typebox").TNumber;
    listed_count: import("@sinclair/typebox").TNumber;
    favourites_count: import("@sinclair/typebox").TNumber;
    statuses_count: import("@sinclair/typebox").TNumber;
    profile_banner_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_image_url_https: import("@sinclair/typebox").TString;
    default_profile: import("@sinclair/typebox").TBoolean;
    default_profile_image: import("@sinclair/typebox").TBoolean;
    withheld_in_countries: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    followed_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    following: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    follow_request_sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    has_extended_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    advertiser_account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    business_profile_state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    require_some_consent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
}>;
/**
 *
 */
export declare const UserProfileApiResponseSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    provider_id: import("@sinclair/typebox").TString;
    is_self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    public_identifier: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    headline: import("@sinclair/typebox").TString;
    first_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    last_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    summary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    education: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        degree: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        school: import("@sinclair/typebox").TString;
        field_of_study: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    languages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        proficiency: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    skills: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        endorsement_count: import("@sinclair/typebox").TNumber;
    }>>>;
    certifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        organization: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    network_distance: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"FIRST_DEGREE">, import("@sinclair/typebox").TLiteral<"SECOND_DEGREE">, import("@sinclair/typebox").TLiteral<"THIRD_DEGREE">, import("@sinclair/typebox").TLiteral<"OUT_OF_NETWORK">]>>;
    contact_info: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        emails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        phones: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        adresses: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        socials: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
        }>>>;
    }>>;
    websites: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    birthdate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        month: import("@sinclair/typebox").TNumber;
        day: import("@sinclair/typebox").TNumber;
    }>>;
    primary_locale: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        country: import("@sinclair/typebox").TString;
        language: import("@sinclair/typebox").TString;
    }>>;
    background_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    hashtags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    can_send_inmail: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_influencer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_creator: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_hiring: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_to_work: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_saved_lead: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_crm_imported: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_relationship: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    invitation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"SENT">, import("@sinclair/typebox").TLiteral<"RECEIVED">]>;
        status: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"PENDING">, import("@sinclair/typebox").TLiteral<"IGNORED">, import("@sinclair/typebox").TLiteral<"WITHDRAWN">]>;
    }>>;
    work_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        position: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        company: import("@sinclair/typebox").TString;
        location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        current: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    volunteering_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        description: import("@sinclair/typebox").TString;
        role: import("@sinclair/typebox").TString;
        cause: import("@sinclair/typebox").TString;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    follower_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    shared_connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"WHATSAPP">;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    username: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"INSTAGRAM">;
    follower_count: import("@sinclair/typebox").TNumber;
    pk: import("@sinclair/typebox").TNumber;
    full_name: import("@sinclair/typebox").TString;
    profile_pic_url: import("@sinclair/typebox").TString;
    biography: import("@sinclair/typebox").TString;
    following_count: import("@sinclair/typebox").TNumber;
    is_verified: import("@sinclair/typebox").TBoolean;
    is_business: import("@sinclair/typebox").TBoolean;
    is_private: import("@sinclair/typebox").TBoolean;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    provider_id: import("@sinclair/typebox").TString;
    deleted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    username: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    provider: import("@sinclair/typebox").TLiteral<"TELEGRAM">;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        expires: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        was_online: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TNull]>>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_picture_url: import("@sinclair/typebox").TString;
    self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    mutual_contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    bot: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    verified: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restricted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    fake: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    close_friend: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restriction_reason: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        platform: import("@sinclair/typebox").TString;
        reason: import("@sinclair/typebox").TString;
        text: import("@sinclair/typebox").TString;
    }>>, import("@sinclair/typebox").TNull]>>;
    lang_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    provider: import("@sinclair/typebox").TLiteral<"TWITTER">;
    description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    followers_count: import("@sinclair/typebox").TNumber;
    location: import("@sinclair/typebox").TString;
    verified: import("@sinclair/typebox").TBoolean;
    notifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    screen_name: import("@sinclair/typebox").TString;
    entities: import("@sinclair/typebox").TObject<{
        description: import("@sinclair/typebox").TObject<{
            urls: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TAny>;
        }>;
    }>;
    protected: import("@sinclair/typebox").TBoolean;
    friends_count: import("@sinclair/typebox").TNumber;
    listed_count: import("@sinclair/typebox").TNumber;
    favourites_count: import("@sinclair/typebox").TNumber;
    statuses_count: import("@sinclair/typebox").TNumber;
    profile_banner_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_image_url_https: import("@sinclair/typebox").TString;
    default_profile: import("@sinclair/typebox").TBoolean;
    default_profile_image: import("@sinclair/typebox").TBoolean;
    withheld_in_countries: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    followed_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    following: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    follow_request_sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    has_extended_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    advertiser_account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    business_profile_state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    require_some_consent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
}>]>;
export type UserProfileApiResponse = Static<typeof UserProfileApiResponseSchema>;
/**  */
export declare const UserProfileApiResponseValidator: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    provider_id: import("@sinclair/typebox").TString;
    is_self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    provider: import("@sinclair/typebox").TLiteral<"LINKEDIN">;
    public_identifier: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    headline: import("@sinclair/typebox").TString;
    first_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    last_name: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    profile_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    public_profile_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    summary: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    education: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        degree: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        school: import("@sinclair/typebox").TString;
        field_of_study: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    languages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        proficiency: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    skills: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        endorsement_count: import("@sinclair/typebox").TNumber;
    }>>>;
    certifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        organization: import("@sinclair/typebox").TString;
        url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
    network_distance: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"FIRST_DEGREE">, import("@sinclair/typebox").TLiteral<"SECOND_DEGREE">, import("@sinclair/typebox").TLiteral<"THIRD_DEGREE">, import("@sinclair/typebox").TLiteral<"OUT_OF_NETWORK">]>>;
    contact_info: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        emails: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        phones: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        adresses: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
        socials: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            name: import("@sinclair/typebox").TString;
        }>>>;
    }>>;
    websites: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    birthdate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        month: import("@sinclair/typebox").TNumber;
        day: import("@sinclair/typebox").TNumber;
    }>>;
    primary_locale: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        country: import("@sinclair/typebox").TString;
        language: import("@sinclair/typebox").TString;
    }>>;
    background_picture_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    hashtags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>>;
    can_send_inmail: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_influencer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_creator: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_hiring: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_open_to_work: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_saved_lead: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_crm_imported: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    is_relationship: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    invitation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"SENT">, import("@sinclair/typebox").TLiteral<"RECEIVED">]>;
        status: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"PENDING">, import("@sinclair/typebox").TLiteral<"IGNORED">, import("@sinclair/typebox").TLiteral<"WITHDRAWN">]>;
    }>>;
    work_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        position: import("@sinclair/typebox").TString;
        company_id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        company: import("@sinclair/typebox").TString;
        location: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        description: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        current: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    volunteering_experience: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        company: import("@sinclair/typebox").TString;
        description: import("@sinclair/typebox").TString;
        role: import("@sinclair/typebox").TString;
        cause: import("@sinclair/typebox").TString;
        start: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
        end: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>;
    }>>>;
    follower_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    shared_connections_count: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    id: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"WHATSAPP">;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    username: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TLiteral<"INSTAGRAM">;
    follower_count: import("@sinclair/typebox").TNumber;
    pk: import("@sinclair/typebox").TNumber;
    full_name: import("@sinclair/typebox").TString;
    profile_pic_url: import("@sinclair/typebox").TString;
    biography: import("@sinclair/typebox").TString;
    following_count: import("@sinclair/typebox").TNumber;
    is_verified: import("@sinclair/typebox").TBoolean;
    is_business: import("@sinclair/typebox").TBoolean;
    is_private: import("@sinclair/typebox").TBoolean;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    provider_id: import("@sinclair/typebox").TString;
    deleted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    username: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    provider: import("@sinclair/typebox").TLiteral<"TELEGRAM">;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        name: import("@sinclair/typebox").TString;
        expires: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        was_online: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TNull]>>;
    phone: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    premium: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    first_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    last_name: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_picture_url: import("@sinclair/typebox").TString;
    self: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    mutual_contact: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    bot: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    verified: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restricted: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    fake: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    close_friend: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TNull]>>;
    restriction_reason: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        platform: import("@sinclair/typebox").TString;
        reason: import("@sinclair/typebox").TString;
        text: import("@sinclair/typebox").TString;
    }>>, import("@sinclair/typebox").TNull]>>;
    lang_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
}>, import("@sinclair/typebox").TObject<{
    object: import("@sinclair/typebox").TLiteral<"UserProfile">;
    id: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    created_at: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    provider: import("@sinclair/typebox").TLiteral<"TWITTER">;
    description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>;
    followers_count: import("@sinclair/typebox").TNumber;
    location: import("@sinclair/typebox").TString;
    verified: import("@sinclair/typebox").TBoolean;
    notifications: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    screen_name: import("@sinclair/typebox").TString;
    entities: import("@sinclair/typebox").TObject<{
        description: import("@sinclair/typebox").TObject<{
            urls: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TAny>;
        }>;
    }>;
    protected: import("@sinclair/typebox").TBoolean;
    friends_count: import("@sinclair/typebox").TNumber;
    listed_count: import("@sinclair/typebox").TNumber;
    favourites_count: import("@sinclair/typebox").TNumber;
    statuses_count: import("@sinclair/typebox").TNumber;
    profile_banner_url: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TNull]>>;
    profile_image_url_https: import("@sinclair/typebox").TString;
    default_profile: import("@sinclair/typebox").TBoolean;
    default_profile_image: import("@sinclair/typebox").TBoolean;
    withheld_in_countries: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    followed_by: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    following: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    follow_request_sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    has_extended_profile: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
    advertiser_account_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    business_profile_state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TString]>>;
    require_some_consent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNull, import("@sinclair/typebox").TBoolean]>>;
}>]>>;
