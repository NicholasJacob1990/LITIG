[tool:pytest]
# Configuração do pytest para LITIG-1

# Diretórios de teste
testpaths = tests

# Padrões de descoberta de testes
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Marcadores personalizados
markers =
    unit: marca testes unitários rápidos
    integration: marca testes de integração com banco/redis
    e2e: marca testes end-to-end completos
    slow: marca testes que demoram mais de 10s
    premium: marca testes relacionados a critérios premium
    anonymization: marca testes de anonimização de dados
    algorithm: marca testes do algoritmo de matching

# Configurações de execução
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --cov-fail-under=80
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml

# Configurações assíncronas
asyncio_mode = auto
asyncio_default_fixture_loop_scope = session

# Configurações de cobertura
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */migrations/*
    */alembic/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

# Configurações para execução paralela
[tool:pytest-xdist]
# Número de workers para execução paralela
# -n auto detecta automaticamente baseado nos CPUs disponíveis 
 