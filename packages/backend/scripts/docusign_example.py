#!/usr/bin/env python3
"""
Script de exemplo para demonstrar a integra√ß√£o DocuSign no LITGO5

Este script mostra como:
1. Configurar a integra√ß√£o DocuSign
2. Criar contratos com assinatura digital
3. Monitorar status de envelopes
4. Baixar documentos assinados

Uso:
    python scripts/docusign_example.py
"""

import asyncio
import os
import sys
from datetime import datetime
from pathlib import Path

# Adicionar o diret√≥rio raiz ao path
sys.path.append(str(Path(__file__).parent.parent))

from backend.services.sign_service import SignService, DocuSignService
from backend.services.contract_service import ContractService
from backend.models import Contract
from backend.config import settings


class DocuSignDemo:
    """Demonstra√ß√£o da integra√ß√£o DocuSign"""
    
    def __init__(self):
        self.sign_service = SignService()
        self.contract_service = ContractService()
        
    def check_configuration(self):
        """Verifica se DocuSign est√° configurado corretamente"""
        print("üîß Verificando configura√ß√£o DocuSign...")
        
        if not settings.USE_DOCUSIGN:
            print("‚ùå DocuSign est√° DESABILITADO")
            print("   Para habilitar, configure: USE_DOCUSIGN=true")
            return False
        
        if not settings.validate_docusign_config():
            print("‚ùå Configura√ß√£o DocuSign INCOMPLETA")
            print("   Vari√°veis necess√°rias:")
            print("   - DOCUSIGN_API_KEY")
            print("   - DOCUSIGN_ACCOUNT_ID") 
            print("   - DOCUSIGN_USER_ID")
            print("   - DOCUSIGN_PRIVATE_KEY")
            return False
        
        print("‚úÖ DocuSign configurado corretamente!")
        print(f"   Base URL: {settings.DOCUSIGN_BASE_URL}")
        print(f"   Account ID: {settings.DOCUSIGN_ACCOUNT_ID}")
        return True
    
    def create_sample_contract(self):
        """Cria um contrato de exemplo"""
        print("\nüìù Criando contrato de exemplo...")
        
        contract = Contract(
            id="demo-contract-" + datetime.now().strftime("%Y%m%d%H%M%S"),
            case_id="demo-case-123",
            lawyer_id="demo-lawyer-456",
            client_id="demo-client-789",
            status="pending-signature",
            fee_model={"type": "success", "percent": 20},
            created_at=datetime.now(),
            updated_at=datetime.now()
        )
        
        print(f"‚úÖ Contrato criado: {contract.id}")
        print(f"   Modelo de honor√°rios: {contract.fee_model}")
        return contract
    
    async def demonstrate_docusign_flow(self):
        """Demonstra o fluxo completo DocuSign"""
        print("\nüöÄ Demonstrando fluxo DocuSign...")
        
        # 1. Criar contrato
        contract = self.create_sample_contract()
        
        # 2. Dados simulados dos participantes
        client_data = {
            "id": contract.client_id,
            "email": "cliente.demo@litgo.com",
            "full_name": "Jo√£o Silva (Demo)"
        }
        
        lawyer_data = {
            "id": contract.lawyer_id,
            "email": "advogado.demo@litgo.com", 
            "full_name": "Dra. Maria Santos (Demo)"
        }
        
        case_data = {
            "id": contract.case_id,
            "title": "Caso Trabalhista Demo",
            "area": "Trabalhista",
            "description": "Demonstra√ß√£o de contrato digital"
        }
        
        try:
            # 3. Gerar contrato (com DocuSign se configurado)
            print("\nüìÑ Gerando documento do contrato...")
            
            # Mock dos m√©todos de busca de dados
            async def mock_get_case_data(case_id):
                return case_data
            
            async def mock_get_lawyer_data(lawyer_id):
                return lawyer_data
            
            async def mock_get_client_data(client_id):
                return client_data
            
            # Substituir m√©todos temporariamente
            original_methods = {
                '_get_case_data': self.sign_service._get_case_data,
                '_get_lawyer_data': self.sign_service._get_lawyer_data,
                '_get_client_data': self.sign_service._get_client_data
            }
            
            self.sign_service._get_case_data = mock_get_case_data
            self.sign_service._get_lawyer_data = mock_get_lawyer_data
            self.sign_service._get_client_data = mock_get_client_data
            
            # Gerar documento
            doc_url = await self.sign_service.generate_contract_pdf(contract)
            contract.doc_url = doc_url
            
            # Restaurar m√©todos originais
            for method_name, original_method in original_methods.items():
                setattr(self.sign_service, method_name, original_method)
            
            print(f"‚úÖ Documento gerado: {doc_url}")
            
            # 4. Verificar se √© DocuSign
            if self.sign_service.isDocuSignContract(contract):
                print("üéØ Contrato criado via DocuSign!")
                envelope_id = doc_url
                
                # 5. Consultar status (simulado)
                print("\nüìä Consultando status do envelope...")
                try:
                    status = await self.sign_service.get_envelope_status(envelope_id)
                    print(f"   Status: {status.get('status', 'unknown')}")
                    print(f"   Envelope ID: {status.get('envelope_id', 'N/A')}")
                    
                    recipients = status.get('recipients', [])
                    if recipients:
                        print("   Signat√°rios:")
                        for recipient in recipients:
                            print(f"     - {recipient.get('name')}: {recipient.get('status')}")
                    
                except Exception as e:
                    print(f"‚ö†Ô∏è  Erro ao consultar status: {str(e)}")
                
            else:
                print("üìÑ Contrato criado como HTML (fallback)")
            
        except Exception as e:
            print(f"‚ùå Erro ao gerar contrato: {str(e)}")
            print("   Isso √© normal em ambiente de demonstra√ß√£o")
    
    def demonstrate_contract_utilities(self):
        """Demonstra utilit√°rios de contrato"""
        print("\nüõ†Ô∏è  Demonstrando utilit√°rios...")
        
        # Status formatting
        statuses = ['sent', 'delivered', 'completed', 'declined', 'voided']
        print("   Formata√ß√£o de status DocuSign:")
        for status in statuses:
            formatted = self.sign_service.formatDocuSignStatus(status)
            print(f"     {status} ‚Üí {formatted}")
        
        # Signer info
        recipients = [
            {"name": "Jo√£o Silva", "email": "joao@test.com", "status": "completed"},
            {"name": "Maria Santos", "email": "maria@test.com", "status": "sent"}
        ]
        
        print("\n   Busca de signat√°rio:")
        signer = self.sign_service.getSignerInfo(recipients, "joao@test.com")
        if signer:
            print(f"     Encontrado: {signer['name']} - {signer['status']}")
        
        # Contract validation
        contract = self.create_sample_contract()
        print(f"\n   Valida√ß√µes de contrato:")
        print(f"     Pode ser assinado: {self.sign_service.canBeSigned(contract)}")
        print(f"     Totalmente assinado: {self.sign_service.isFullySigned(contract)}")
    
    def show_configuration_example(self):
        """Mostra exemplo de configura√ß√£o"""
        print("\n‚öôÔ∏è  Exemplo de configura√ß√£o (.env):")
        print("""
# Ativar DocuSign
USE_DOCUSIGN=true

# Configura√ß√µes DocuSign
DOCUSIGN_BASE_URL=https://demo.docusign.net
DOCUSIGN_API_KEY=your_integration_key_here
DOCUSIGN_ACCOUNT_ID=your_account_id_here
DOCUSIGN_USER_ID=your_user_id_here
DOCUSIGN_PRIVATE_KEY=your_private_key_here
        """)
        
        print("üìö Para obter as credenciais:")
        print("   1. Acesse https://developers.docusign.com/")
        print("   2. Crie uma aplica√ß√£o de integra√ß√£o")
        print("   3. Configure autentica√ß√£o JWT")
        print("   4. Obtenha as chaves necess√°rias")
    
    async def run_demo(self):
        """Executa demonstra√ß√£o completa"""
        print("üéØ DEMONSTRA√á√ÉO DOCUSIGN - LITGO5")
        print("=" * 50)
        
        # 1. Verificar configura√ß√£o
        if not self.check_configuration():
            self.show_configuration_example()
            return
        
        # 2. Demonstrar fluxo
        await self.demonstrate_docusign_flow()
        
        # 3. Demonstrar utilit√°rios
        self.demonstrate_contract_utilities()
        
        print("\n‚úÖ Demonstra√ß√£o conclu√≠da!")
        print("\nüìñ Para mais informa√ß√µes, consulte:")
        print("   - INTEGRACAO_DOCUSIGN_COMPLETA.md")
        print("   - IMPLEMENTACAO_CONTRATOS_COMPLETA.md")


async def main():
    """Fun√ß√£o principal"""
    demo = DocuSignDemo()
    await demo.run_demo()


if __name__ == "__main__":
    # Verificar se est√° no diret√≥rio correto
    if not Path("backend").exists():
        print("‚ùå Execute este script a partir do diret√≥rio raiz do projeto")
        print("   Exemplo: python scripts/docusign_example.py")
        sys.exit(1)
    
    # Executar demonstra√ß√£o
    asyncio.run(main()) 